{
  "address": "0xe60EB95F1Cd737c007FaC08717D4838aF37C43Bb",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "NewDefaultOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "NewOracle",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "underlyings",
          "type": "address[]"
        },
        {
          "internalType": "contract IPriceOracle[]",
          "name": "_oracles",
          "type": "address[]"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canAdminOverwrite",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "getUnderlyingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "underlyings",
          "type": "address[]"
        },
        {
          "internalType": "contract IPriceOracle[]",
          "name": "_oracles",
          "type": "address[]"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "_defaultOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_canAdminOverwrite",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_wtoken",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracles",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "underlying",
          "type": "address"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "setDefaultOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wtoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6bfc98b555e735f86945eae45bddb37e2ed4f0ded783e3ab55dc33c327092690",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x304aE8f9300e09c8B33bb1a8AE1c14A6253a5F4D",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "822402",
    "logsBloom": "0x
    "blockHash": "0x99bc671eaabcdada67eee94b6ee498ed312e7d054fa0f2048c1d89c4445a86e7",
    "transactionHash": "0x6bfc98b555e735f86945eae45bddb37e2ed4f0ded783e3ab55dc33c327092690",
    "logs": [],
    "blockNumber": 23,
    "cumulativeGasUsed": "822402",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bea4bc2fe7dc711e8de9b90f1f954132",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"NewDefaultOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"NewOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"contract IPriceOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canAdminOverwrite\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"contract IPriceOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"_defaultOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_canAdminOverwrite\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_wtoken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"setDefaultOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"David Lucid <david@rari.capital> (https://github.com/davidlucid)\",\"details\":\"Implements `PriceOracle`.\",\"events\":{\"NewAdmin(address,address)\":{\"details\":\"Event emitted when `admin` is changed.\"},\"NewDefaultOracle(address,address)\":{\"details\":\"Event emitted when the default oracle is changed.\"},\"NewOracle(address,address,address)\":{\"details\":\"Event emitted when an underlying token's oracle is changed.\"}},\"kind\":\"dev\",\"methods\":{\"add(address[],address[])\":{\"details\":\"Sets `_oracles` for `underlyings`.\"},\"canAdminOverwrite()\":{\"details\":\"Returns a boolean indicating if `admin` can overwrite existing assignments of oracles to underlying tokens.\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin and emits an event.\"},\"getUnderlyingPrice(address)\":{\"details\":\"Implements the `PriceOracle` interface for Fuse pools (and Compound v2).\",\"returns\":{\"_0\":\"Price in ETH of the token underlying `cToken`, scaled by `10 ** (36 - underlyingDecimals)`.\"}},\"initialize(address[],address[],address,address,bool,address)\":{\"details\":\"Constructor to initialize state variables.\",\"params\":{\"_admin\":\"The admin who can assign oracles to underlying tokens.\",\"_canAdminOverwrite\":\"Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.\",\"_defaultOracle\":\"The default `PriceOracle` contract to use.\",\"_oracles\":\"The `PriceOracle` contracts to be assigned to `underlyings`.\",\"underlyings\":\"The underlying ERC20 token addresses to link to `_oracles`.\"}},\"price(address)\":{\"details\":\"Attempts to return the price in ETH of `underlying` (implements `BasePriceOracle`).\"},\"setDefaultOracle(address)\":{\"details\":\"Changes the admin and emits an event.\"}},\"stateVariables\":{\"admin\":{\"details\":\"The administrator of this `MasterPriceOracle`.\"},\"defaultOracle\":{\"details\":\"Default/fallback `PriceOracle`.\"},\"noAdminOverwrite\":{\"details\":\"Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.\"},\"oracles\":{\"details\":\"Maps underlying token addresses to `PriceOracle` contracts (can be `BasePriceOracle` contracts too).\"},\"wtoken\":{\"details\":\"The Wrapped native asset address.\"}},\"title\":\"MasterPriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUnderlyingPrice(address)\":{\"notice\":\"Returns the price in ETH of the token underlying `cToken`.\"}},\"notice\":\"Use a combination of price oracles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/MasterPriceOracle.sol\":\"MasterPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity >=0.4.24 <0.8.0;\\n\\nimport \\\"../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\"},\"contracts/external/compound/ICErc20.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity >=0.7.0;\\n\\nimport \\\"./ICToken.sol\\\";\\n\\n/**\\n * @title Compound's CErc20 Contract\\n * @notice CTokens which wrap an EIP-20 underlying\\n * @author Compound\\n */\\ninterface ICErc20 is ICToken {\\n    function underlying() external view returns (address);\\n    function liquidateBorrow(address borrower, uint repayAmount, ICToken cTokenCollateral) external returns (uint);\\n}\\n\",\"keccak256\":\"0xe0608ba20d92631a252f05ad317318524c1fa8719e06a90be292cbb1a2c351cc\",\"license\":\"BSD-3-Clause\"},\"contracts/external/compound/ICToken.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity >=0.7.0;\\n\\n/**\\n * @title Compound's CToken Contract\\n * @notice Abstract base for CTokens\\n * @author Compound\\n */\\ninterface ICToken {\\n    function admin() external view returns (address);\\n    function adminHasRights() external view returns (bool);\\n    function fuseAdminHasRights() external view returns (bool);\\n    function symbol() external view returns (string memory);\\n    function comptroller() external view returns (address);\\n    function adminFeeMantissa() external view returns (uint256);\\n    function fuseFeeMantissa() external view returns (uint256);\\n    function reserveFactorMantissa() external view returns (uint256);\\n    function totalReserves() external view returns (uint);\\n    function totalAdminFees() external view returns (uint);\\n    function totalFuseFees() external view returns (uint);\\n\\n    function isCToken() external view returns (bool);\\n    function isCEther() external view returns (bool);\\n\\n    function balanceOf(address owner) external view returns (uint);\\n    function balanceOfUnderlying(address owner) external returns (uint);\\n    function borrowRatePerBlock() external view returns (uint);\\n    function supplyRatePerBlock() external view returns (uint);\\n    function totalBorrowsCurrent() external returns (uint);\\n    function borrowBalanceStored(address account) external view returns (uint);\\n    function exchangeRateStored() external view returns (uint);\\n    function getCash() external view returns (uint);\\n\\n    function redeem(uint redeemTokens) external returns (uint);\\n    function redeemUnderlying(uint redeemAmount) external returns (uint);\\n}\\n\",\"keccak256\":\"0xb4424e22fcdb1f3c4748f7cdf88113cb9bf8bd69fcbfcfc48aa96a82759140e9\",\"license\":\"BSD-3-Clause\"},\"contracts/external/compound/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity >=0.7.0;\\n\\nimport \\\"./ICToken.sol\\\";\\n\\ninterface IPriceOracle {\\n    /**\\n      * @notice Get the underlying price of a cToken asset\\n      * @param cToken The cToken to get the underlying price of\\n      * @return The underlying asset price mantissa (scaled by 1e18).\\n      *  Zero means the price is unavailable.\\n      */\\n    function getUnderlyingPrice(ICToken cToken) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xca54a109714442f65e5bcac19b1cb95eda8595305a65e601c9e846d0b4ccba70\",\"license\":\"BSD-3-Clause\"},\"contracts/oracles/BasePriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.7.0;\\n\\nimport \\\"../external/compound/IPriceOracle.sol\\\";\\n\\n/**\\n * @title BasePriceOracle\\n * @notice Returns prices of underlying tokens directly without the caller having to specify a cToken address.\\n * @dev Implements the `PriceOracle` interface.\\n * @author David Lucid <david@rari.capital> (https://github.com/davidlucid)\\n */\\ninterface BasePriceOracle is IPriceOracle {\\n    /**\\n     * @notice Get the price of an underlying asset.\\n     * @param underlying The underlying asset to get the price of.\\n     * @return The underlying asset price in ETH as a mantissa (scaled by 1e18).\\n     * Zero means the price is unavailable.\\n     */\\n    function price(address underlying) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x2b270ec498f44cd3fd9c5a63f71058beb91fe022a92331787f4f85a16561d2ef\",\"license\":\"UNLICENSED\"},\"contracts/oracles/MasterPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.7.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\\\";\\n\\nimport \\\"../external/compound/IPriceOracle.sol\\\";\\nimport \\\"../external/compound/ICToken.sol\\\";\\nimport \\\"../external/compound/ICErc20.sol\\\";\\n\\nimport \\\"./BasePriceOracle.sol\\\";\\n\\n/**\\n * @title MasterPriceOracle\\n * @notice Use a combination of price oracles.\\n * @dev Implements `PriceOracle`.\\n * @author David Lucid <david@rari.capital> (https://github.com/davidlucid)\\n */\\ncontract MasterPriceOracle is Initializable, IPriceOracle, BasePriceOracle {\\n    /**\\n     * @dev Maps underlying token addresses to `PriceOracle` contracts (can be `BasePriceOracle` contracts too).\\n     */\\n    mapping(address => IPriceOracle) public oracles;\\n\\n    /**\\n     * @dev Default/fallback `PriceOracle`.\\n     */\\n    IPriceOracle public defaultOracle;\\n\\n    /**\\n     * @dev The administrator of this `MasterPriceOracle`.\\n     */\\n    address public admin;\\n\\n    /**\\n     * @dev Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.\\n     */\\n    bool internal noAdminOverwrite;\\n\\n    /**\\n     * @dev The Wrapped native asset address.\\n     */\\n    address public wtoken;\\n\\n    /**\\n     * @dev Returns a boolean indicating if `admin` can overwrite existing assignments of oracles to underlying tokens.\\n     */\\n    function canAdminOverwrite() external view returns (bool) {\\n        return !noAdminOverwrite;\\n    }\\n\\n    /**\\n     * @dev Event emitted when `admin` is changed.\\n     */\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Event emitted when the default oracle is changed.\\n     */\\n    event NewDefaultOracle(address oldOracle, address newOracle);\\n\\n    /**\\n     * @dev Event emitted when an underlying token's oracle is changed.\\n     */\\n    event NewOracle(address underlying, address oldOracle, address newOracle);\\n\\n    /**\\n     * @dev Constructor to initialize state variables.\\n     * @param underlyings The underlying ERC20 token addresses to link to `_oracles`.\\n     * @param _oracles The `PriceOracle` contracts to be assigned to `underlyings`.\\n     * @param _defaultOracle The default `PriceOracle` contract to use.\\n     * @param _admin The admin who can assign oracles to underlying tokens.\\n     * @param _canAdminOverwrite Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.\\n     */\\n    function initialize(\\n        address[] memory underlyings, \\n        IPriceOracle[] memory _oracles, \\n        IPriceOracle _defaultOracle, \\n        address _admin, \\n        bool _canAdminOverwrite, \\n        address _wtoken\\n    ) external initializer {\\n        // Input validation\\n        require(underlyings.length == _oracles.length, \\\"Lengths of both arrays must be equal.\\\");\\n\\n        // Initialize state variables\\n        for (uint256 i = 0; i < underlyings.length; i++) {\\n            address underlying = underlyings[i];\\n            IPriceOracle newOracle = _oracles[i];\\n            oracles[underlying] = newOracle;\\n            emit NewOracle(underlying, address(0), address(newOracle));\\n        }\\n\\n        defaultOracle = _defaultOracle;\\n        admin = _admin;\\n        noAdminOverwrite = !_canAdminOverwrite;\\n        wtoken = _wtoken;\\n    }\\n\\n    /**\\n     * @dev Sets `_oracles` for `underlyings`.\\n     */\\n    function add(address[] calldata underlyings, IPriceOracle[] calldata _oracles) external onlyAdmin {\\n        // Input validation\\n        require(underlyings.length > 0 && underlyings.length == _oracles.length, \\\"Lengths of both arrays must be equal and greater than 0.\\\");\\n\\n        // Assign oracles to underlying tokens\\n        for (uint256 i = 0; i < underlyings.length; i++) {\\n            address underlying = underlyings[i];\\n            address oldOracle = address(oracles[underlying]);\\n            if (noAdminOverwrite) require(oldOracle == address(0), \\\"Admin cannot overwrite existing assignments of oracles to underlying tokens.\\\");\\n            IPriceOracle newOracle = _oracles[i];\\n            oracles[underlying] = newOracle;\\n            emit NewOracle(underlying, oldOracle, address(newOracle));\\n        }\\n    }\\n\\n    /**\\n     * @dev Changes the admin and emits an event.\\n     */\\n    function setDefaultOracle(IPriceOracle newOracle) external onlyAdmin {\\n        IPriceOracle oldOracle = defaultOracle;\\n        defaultOracle = newOracle;\\n        emit NewDefaultOracle(address(oldOracle), address(newOracle));\\n    }\\n\\n    /**\\n     * @dev Changes the admin and emits an event.\\n     */\\n    function changeAdmin(address newAdmin) external onlyAdmin {\\n        address oldAdmin = admin;\\n        admin = newAdmin;\\n        emit NewAdmin(oldAdmin, newAdmin);\\n    }\\n\\n    /**\\n     * @dev Modifier that checks if `msg.sender == admin`.\\n     */\\n    modifier onlyAdmin {\\n        require(msg.sender == admin, \\\"Sender is not the admin.\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Returns the price in ETH of the token underlying `cToken`.\\n     * @dev Implements the `PriceOracle` interface for Fuse pools (and Compound v2).\\n     * @return Price in ETH of the token underlying `cToken`, scaled by `10 ** (36 - underlyingDecimals)`.\\n     */\\n    function getUnderlyingPrice(ICToken cToken) external override view returns (uint) {\\n        // Get underlying ERC20 token address\\n        address underlying = address(ICErc20(address(cToken)).underlying());\\n\\n        // Return 1e18 for WETH\\n        if (underlying == 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) return 1e18;\\n\\n        // Get underlying price from assigned oracle\\n        IPriceOracle oracle = oracles[underlying];\\n        if (address(oracle) != address(0)) return oracle.getUnderlyingPrice(cToken);\\n        if (address(defaultOracle) != address(0)) return defaultOracle.getUnderlyingPrice(cToken);\\n        revert(\\\"Price oracle not found for this underlying token address.\\\");\\n    }\\n\\n    /**\\n     * @dev Attempts to return the price in ETH of `underlying` (implements `BasePriceOracle`).\\n     */\\n    function price(address underlying) external override view returns (uint) {\\n        // Return 1e18 for WETH\\n        if (underlying == 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) return 1e18;\\n\\n        // Get underlying price from assigned oracle\\n        IPriceOracle oracle = oracles[underlying];\\n        if (address(oracle) != address(0)) return BasePriceOracle(address(oracle)).price(underlying);\\n        if (address(defaultOracle) != address(0)) return BasePriceOracle(address(defaultOracle)).price(underlying);\\n        revert(\\\"Price oracle not found for this underlying token address.\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x0413018f9b27940dbf7ca6f1c5b11e5fb0aefd6c2847adda544d163e346e15be\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610de0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639c9192c6116100715780639c9192c614610262578063addd509914610320578063aea9107814610346578063c44014d21461037e578063f851a440146103a4578063fc57d4df146103ac576100a9565b8063656b0fd1146100ae57806380dce169146100ca578063882b92a7146100ee5780638f283970146102345780639c0591c81461025a575b600080fd5b6100b66103d2565b604080519115158252519081900360200190f35b6100d26103e3565b604080516001600160a01b039092168252519081900360200190f35b610232600480360360c081101561010457600080fd5b810190602081018135600160201b81111561011e57600080fd5b82018360208201111561013057600080fd5b803590602001918460208302840111600160201b8311171561015157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460208302840111600160201b831117156101d357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b038335811694506020840135811693604081013515159350606001351690506103f2565b005b6102326004803603602081101561024a57600080fd5b50356001600160a01b03166105de565b6100d261069b565b6102326004803603604081101561027857600080fd5b810190602081018135600160201b81111561029257600080fd5b8201836020820111156102a457600080fd5b803590602001918460208302840111600160201b831117156102c557600080fd5b919390929091602081019035600160201b8111156102e257600080fd5b8201836020820111156102f457600080fd5b803590602001918460208302840111600160201b8311171561031557600080fd5b5090925090506106aa565b6100d26004803603602081101561033657600080fd5b50356001600160a01b0316610887565b61036c6004803603602081101561035c57600080fd5b50356001600160a01b03166108a2565b60408051918252519081900360200190f35b6102326004803603602081101561039457600080fd5b50356001600160a01b0316610a15565b6100d2610ad2565b61036c600480360360208110156103c257600080fd5b50356001600160a01b0316610ae1565b600354600160a01b900460ff161590565b6002546001600160a01b031681565b600054610100900460ff168061040b575061040b610c83565b80610419575060005460ff16155b6104545760405162461bcd60e51b815260040180806020018281038252602e815260200180610d44602e913960400191505060405180910390fd5b600054610100900460ff1615801561047f576000805460ff1961ff0019909116610100171660011790555b85518751146104bf5760405162461bcd60e51b8152600401808060200182810382526025815260200180610d1f6025913960400191505060405180910390fd5b60005b87518110156105745760008882815181106104d957fe5b6020026020010151905060008883815181106104f157fe5b6020908102919091018101516001600160a01b03808516600081815260018552604080822080549486166001600160a01b0319909516851790558051928352948201528084019190915291519092507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d31269181900360600190a150506001016104c2565b50600280546001600160a01b03199081166001600160a01b03888116919091179092556003805482168784161760ff60a01b19168615600160a01b021790556004805490911691841691909117905580156105d5576000805461ff00191690555b50505050505050565b6003546001600160a01b03163314610638576040805162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015290519081900360640190fd5b600380546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc929181900390910190a15050565b6004546001600160a01b031681565b6003546001600160a01b03163314610704576040805162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015290519081900360640190fd5b821580159061071257508281145b61074d5760405162461bcd60e51b8152600401808060200182810382526038815260200180610ce76038913960400191505060405180910390fd5b60005b8381101561088057600085858381811061076657fe5b602090810292909201356001600160a01b03908116600081815260019094526040909320546003549394501691600160a01b900460ff161590506107ea576001600160a01b038116156107ea5760405162461bcd60e51b815260040180806020018281038252604c815260200180610c9b604c913960600191505060405180910390fd5b60008585858181106107f857fe5b6001600160a01b0386811660008181526001602090815260409182902080546001600160a01b03191695820297909701358416948517909655805191825291871694810194909452838101829052519093507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d3126928190036060019150a1505050600101610750565b5050505050565b6001602052600090815260409020546001600160a01b031681565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b03831614156108d85750670de0b6b3a7640000610a10565b6001600160a01b0380831660009081526001602052604090205416801561097b57806001600160a01b031663aea91078846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d602081101561097057600080fd5b50519150610a109050565b6002546001600160a01b0316156109d957600254604080516315d5220f60e31b81526001600160a01b0386811660048301529151919092169163aea91078916024808301926020929190829003018186803b15801561094657600080fd5b60405162461bcd60e51b8152600401808060200182810382526039815260200180610d726039913960400191505060405180910390fd5b919050565b6003546001600160a01b03163314610a6f576040805162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015290519081900360640190fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517f0df2d61fdd201e9633368dca495e2c469e36c48039263448dd8a2a954c19ef1a929181900390910190a15050565b6003546001600160a01b031681565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1d57600080fd5b505afa158015610b31573d6000803e3d6000fd5b505050506040513d6020811015610b4757600080fd5b5051905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b0382161415610b8157670de0b6b3a7640000915050610a10565b6001600160a01b03808216600090815260016020526040902054168015610c2557806001600160a01b031663fc57d4df856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610bef57600080fd5b505afa158015610c03573d6000803e3d6000fd5b505050506040513d6020811015610c1957600080fd5b50519250610a10915050565b6002546001600160a01b0316156109d9576002546040805163fc57d4df60e01b81526001600160a01b0387811660048301529151919092169163fc57d4df916024808301926020929190829003018186803b158015610bef57600080fd5b6000610c8e30610c94565b15905090565b3b15159056fe41646d696e2063616e6e6f74206f7665727772697465206578697374696e672061737369676e6d656e7473206f66206f7261636c657320746f20756e6465726c79696e6720746f6b656e732e4c656e67746873206f6620626f746820617272617973206d75737420626520657175616c20616e642067726561746572207468616e20302e4c656e67746873206f6620626f746820617272617973206d75737420626520657175616c2e496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65645072696365206f7261636c65206e6f7420666f756e6420666f72207468697320756e6465726c79696e6720746f6b656e20616464726573732ea2646970667358221220e0e7323e15c92063f1f894c4e2878d19745aeff381dc40abc8d15793de85d18c64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80639c9192c6116100715780639c9192c614610262578063addd509914610320578063aea9107814610346578063c44014d21461037e578063f851a440146103a4578063fc57d4df146103ac576100a9565b8063656b0fd1146100ae57806380dce169146100ca578063882b92a7146100ee5780638f283970146102345780639c0591c81461025a575b600080fd5b6100b66103d2565b604080519115158252519081900360200190f35b6100d26103e3565b604080516001600160a01b039092168252519081900360200190f35b610232600480360360c081101561010457600080fd5b810190602081018135600160201b81111561011e57600080fd5b82018360208201111561013057600080fd5b803590602001918460208302840111600160201b8311171561015157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460208302840111600160201b831117156101d357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b038335811694506020840135811693604081013515159350606001351690506103f2565b005b6102326004803603602081101561024a57600080fd5b50356001600160a01b03166105de565b6100d261069b565b6102326004803603604081101561027857600080fd5b810190602081018135600160201b81111561029257600080fd5b8201836020820111156102a457600080fd5b803590602001918460208302840111600160201b831117156102c557600080fd5b919390929091602081019035600160201b8111156102e257600080fd5b8201836020820111156102f457600080fd5b803590602001918460208302840111600160201b8311171561031557600080fd5b5090925090506106aa565b6100d26004803603602081101561033657600080fd5b50356001600160a01b0316610887565b61036c6004803603602081101561035c57600080fd5b50356001600160a01b03166108a2565b60408051918252519081900360200190f35b6102326004803603602081101561039457600080fd5b50356001600160a01b0316610a15565b6100d2610ad2565b61036c600480360360208110156103c257600080fd5b50356001600160a01b0316610ae1565b600354600160a01b900460ff161590565b6002546001600160a01b031681565b600054610100900460ff168061040b575061040b610c83565b80610419575060005460ff16155b6104545760405162461bcd60e51b815260040180806020018281038252602e815260200180610d44602e913960400191505060405180910390fd5b600054610100900460ff1615801561047f576000805460ff1961ff0019909116610100171660011790555b85518751146104bf5760405162461bcd60e51b8152600401808060200182810382526025815260200180610d1f6025913960400191505060405180910390fd5b60005b87518110156105745760008882815181106104d957fe5b6020026020010151905060008883815181106104f157fe5b6020908102919091018101516001600160a01b03808516600081815260018552604080822080549486166001600160a01b0319909516851790558051928352948201528084019190915291519092507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d31269181900360600190a150506001016104c2565b50600280546001600160a01b03199081166001600160a01b03888116919091179092556003805482168784161760ff60a01b19168615600160a01b021790556004805490911691841691909117905580156105d5576000805461ff00191690555b50505050505050565b6003546001600160a01b03163314610638576040805162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015290519081900360640190fd5b600380546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc929181900390910190a15050565b6004546001600160a01b031681565b6003546001600160a01b03163314610704576040805162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015290519081900360640190fd5b821580159061071257508281145b61074d5760405162461bcd60e51b8152600401808060200182810382526038815260200180610ce76038913960400191505060405180910390fd5b60005b8381101561088057600085858381811061076657fe5b602090810292909201356001600160a01b03908116600081815260019094526040909320546003549394501691600160a01b900460ff161590506107ea576001600160a01b038116156107ea5760405162461bcd60e51b815260040180806020018281038252604c815260200180610c9b604c913960600191505060405180910390fd5b60008585858181106107f857fe5b6001600160a01b0386811660008181526001602090815260409182902080546001600160a01b03191695820297909701358416948517909655805191825291871694810194909452838101829052519093507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d3126928190036060019150a1505050600101610750565b5050505050565b6001602052600090815260409020546001600160a01b031681565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b03831614156108d85750670de0b6b3a7640000610a10565b6001600160a01b0380831660009081526001602052604090205416801561097b57806001600160a01b031663aea91078846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d602081101561097057600080fd5b50519150610a109050565b6002546001600160a01b0316156109d957600254604080516315d5220f60e31b81526001600160a01b0386811660048301529151919092169163aea91078916024808301926020929190829003018186803b15801561094657600080fd5b60405162461bcd60e51b8152600401808060200182810382526039815260200180610d726039913960400191505060405180910390fd5b919050565b6003546001600160a01b03163314610a6f576040805162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015290519081900360640190fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517f0df2d61fdd201e9633368dca495e2c469e36c48039263448dd8a2a954c19ef1a929181900390910190a15050565b6003546001600160a01b031681565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1d57600080fd5b505afa158015610b31573d6000803e3d6000fd5b505050506040513d6020811015610b4757600080fd5b5051905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b0382161415610b8157670de0b6b3a7640000915050610a10565b6001600160a01b03808216600090815260016020526040902054168015610c2557806001600160a01b031663fc57d4df856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610bef57600080fd5b505afa158015610c03573d6000803e3d6000fd5b505050506040513d6020811015610c1957600080fd5b50519250610a10915050565b6002546001600160a01b0316156109d9576002546040805163fc57d4df60e01b81526001600160a01b0387811660048301529151919092169163fc57d4df916024808301926020929190829003018186803b158015610bef57600080fd5b6000610c8e30610c94565b15905090565b3b15159056fe41646d696e2063616e6e6f74206f7665727772697465206578697374696e672061737369676e6d656e7473206f66206f7261636c657320746f20756e6465726c79696e6720746f6b656e732e4c656e67746873206f6620626f746820617272617973206d75737420626520657175616c20616e642067726561746572207468616e20302e4c656e67746873206f6620626f746820617272617973206d75737420626520657175616c2e496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65645072696365206f7261636c65206e6f7420666f756e6420666f72207468697320756e6465726c79696e6720746f6b656e20616464726573732ea2646970667358221220e0e7323e15c92063f1f894c4e2878d19745aeff381dc40abc8d15793de85d18c64736f6c63430007060033",
  "devdoc": {
    "author": "David Lucid <david@rari.capital> (https://github.com/davidlucid)",
    "details": "Implements `PriceOracle`.",
    "events": {
      "NewAdmin(address,address)": {
        "details": "Event emitted when `admin` is changed."
      },
      "NewDefaultOracle(address,address)": {
        "details": "Event emitted when the default oracle is changed."
      },
      "NewOracle(address,address,address)": {
        "details": "Event emitted when an underlying token's oracle is changed."
      }
    },
    "kind": "dev",
    "methods": {
      "add(address[],address[])": {
        "details": "Sets `_oracles` for `underlyings`."
      },
      "canAdminOverwrite()": {
        "details": "Returns a boolean indicating if `admin` can overwrite existing assignments of oracles to underlying tokens."
      },
      "changeAdmin(address)": {
        "details": "Changes the admin and emits an event."
      },
      "getUnderlyingPrice(address)": {
        "details": "Implements the `PriceOracle` interface for Fuse pools (and Compound v2).",
        "returns": {
          "_0": "Price in ETH of the token underlying `cToken`, scaled by `10 ** (36 - underlyingDecimals)`."
        }
      },
      "initialize(address[],address[],address,address,bool,address)": {
        "details": "Constructor to initialize state variables.",
        "params": {
          "_admin": "The admin who can assign oracles to underlying tokens.",
          "_canAdminOverwrite": "Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.",
          "_defaultOracle": "The default `PriceOracle` contract to use.",
          "_oracles": "The `PriceOracle` contracts to be assigned to `underlyings`.",
          "underlyings": "The underlying ERC20 token addresses to link to `_oracles`."
        }
      },
      "price(address)": {
        "details": "Attempts to return the price in ETH of `underlying` (implements `BasePriceOracle`)."
      },
      "setDefaultOracle(address)": {
        "details": "Changes the admin and emits an event."
      }
    },
    "stateVariables": {
      "admin": {
        "details": "The administrator of this `MasterPriceOracle`."
      },
      "defaultOracle": {
        "details": "Default/fallback `PriceOracle`."
      },
      "noAdminOverwrite": {
        "details": "Controls if `admin` can overwrite existing assignments of oracles to underlying tokens."
      },
      "oracles": {
        "details": "Maps underlying token addresses to `PriceOracle` contracts (can be `BasePriceOracle` contracts too)."
      },
      "wtoken": {
        "details": "The Wrapped native asset address."
      }
    },
    "title": "MasterPriceOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getUnderlyingPrice(address)": {
        "notice": "Returns the price in ETH of the token underlying `cToken`."
      }
    },
    "notice": "Use a combination of price oracles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 572,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 575,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 43206,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "oracles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(IPriceOracle)31990)"
      },
      {
        "astId": 43209,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "defaultOracle",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IPriceOracle)31990"
      },
      {
        "astId": 43212,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "admin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 43215,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "noAdminOverwrite",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 43218,
        "contract": "contracts/oracles/MasterPriceOracle.sol:MasterPriceOracle",
        "label": "wtoken",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IPriceOracle)31990": {
        "encoding": "inplace",
        "label": "contract IPriceOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IPriceOracle)31990)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IPriceOracle)",
        "numberOfBytes": "32",
        "value": "t_contract(IPriceOracle)31990"
      }
    }
  }
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract FlywheelCore",
          "name": "_flywheel",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FlywheelError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint224",
          "name": "rewardsPerSecond",
          "type": "uint224"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rewardsEndTimestamp",
          "type": "uint32"
        }
      ],
      "name": "RewardsInfoUpdate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flywheel",
      "outputs": [
        {
          "internalType": "contract FlywheelCore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "lastUpdatedTimestamp",
          "type": "uint32"
        }
      ],
      "name": "getAccruedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardsInfo",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "rewardsPerSecond",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "rewardsEndTimestamp",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint224",
              "name": "rewardsPerSecond",
              "type": "uint224"
            },
            {
              "internalType": "uint32",
              "name": "rewardsEndTimestamp",
              "type": "uint32"
            }
          ],
          "internalType": "struct FlywheelStaticRewards.RewardsInfo",
          "name": "rewards",
          "type": "tuple"
        }
      ],
      "name": "setRewardsInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b50604051610b8a380380610b8a83398101604081905261002f91610211565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051859285928592909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610144919061025e565b6001600160a01b038116608081905290915061016e9083600019610178602090811b61056717901c565b5050505050610282565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806101f35760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6001600160a01b038116811461020e57600080fd5b50565b60008060006060848603121561022657600080fd5b8351610231816101f9565b6020850151909350610242816101f9565b6040850151909250610253816101f9565b809150509250925092565b60006020828403121561027057600080fd5b815161027b816101f9565b9392505050565b60805160a0516108dd6102ad6000396000818160c501526104630152600061016301526108dd6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b262cc6e11610066578063b262cc6e14610117578063b334db7b1461012a578063bf7e214f1461014b578063f7c618c11461015e578063fc56a8131461018557600080fd5b806313af4035146100985780637a9e5e4b146100ad5780637acf5b92146100c05780638da5cb5b14610104575b600080fd5b6100ab6100a63660046106a6565b6101e1565b005b6100ab6100bb3660046106a6565b610282565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100e7906001600160a01b031681565b6100ab6101253660046106ca565b61036c565b61013d61013836600461071d565b610456565b6040519081526020016100fb565b6001546100e7906001600160a01b031681565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6101bd6101933660046106a6565b6002602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff9091166020830152016100fb565b6101f7336000356001600160e01b0319166105e4565b6102375760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331480610317575060015460405163b700961360e01b81526001600160a01b039091169063b7009613906102d690339030906001600160e01b03196000351690600401610756565b602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610783565b61032057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b610382336000356001600160e01b0319166105e4565b6103bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161022e565b6001600160a01b038216600090815260026020526040902081906103e182826107ba565b50506001600160a01b0382167fcc8ac5e3ee055e8954322366397250c104503ddae709698089ea0c0cfa8da89161041b60208401846107fc565b61042b6040850160208601610819565b604080516001600160e01b03909316835263ffffffff90911660208301520160405180910390a25050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a15760405163739e221160e01b815260040160405180910390fd5b6001600160a01b03831660009081526002602090815260408083208151808301909252546001600160e01b0381168252600160e01b900463ffffffff16918101829052919015806104fb575042826020015163ffffffff16115b156105175761051063ffffffff85164261084c565b9050610548565b8363ffffffff16826020015163ffffffff1611156105485783826020015161053f9190610863565b63ffffffff1690505b815161055e9082906001600160e01b0316610888565b95945050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806105de5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161022e565b50505050565b6001546000906001600160a01b0316801580159061066e575060405163b700961360e01b81526001600160a01b0382169063b70096139061062d90879030908890600401610756565b602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610783565b8061068657506000546001600160a01b038581169116145b949350505050565b6001600160a01b03811681146106a357600080fd5b50565b6000602082840312156106b857600080fd5b81356106c38161068e565b9392505050565b60008082840360608112156106de57600080fd5b83356106e98161068e565b92506040601f19820112156106fd57600080fd5b506020830190509250929050565b63ffffffff811681146106a357600080fd5b6000806040838503121561073057600080fd5b823561073b8161068e565b9150602083013561074b8161070b565b809150509250929050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561079557600080fd5b815180151581146106c357600080fd5b6001600160e01b03811681146106a357600080fd5b81356107c5816107a5565b81546001600160e01b03199081166001600160e01b0392909216918217835560208401356107f28161070b565b60e01b1617905550565b60006020828403121561080e57600080fd5b81356106c3816107a5565b60006020828403121561082b57600080fd5b81356106c38161070b565b634e487b7160e01b600052601160045260246000fd5b60008282101561085e5761085e610836565b500390565b600063ffffffff8381169083168181101561088057610880610836565b039392505050565b60008160001904831182151516156108a2576108a2610836565b50029056fea2646970667358221220aede4bc88f9bd05610065a93de00d2de1f59f1065034ea2290c7447a9ec82ff264736f6c634300080a0033",
    "sourceMap": "286:2032:248:-:0;;;792:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:272;:14;;-1:-1:-1;;;;;;671:14:272;;;-1:-1:-1;;;;;671:14:272;;;;;;;;-1:-1:-1;695:22:272;;;;;;;;;;;;733:32;;941:9:248;;671:14:272;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:272;;;797:10;;780:40;;;;;611:216;;946:9:246;-1:-1:-1;;;;;935:20:246;;;-1:-1:-1;;;;;935:20:246;;;;;965:18;986:9;-1:-1:-1;;;;;986:21:246;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1019:26:246;;;;;;;;-1:-1:-1;1056:63:246;;1089:9;-1:-1:-1;;1056:24:246;;;;;;;:63;;:::i;:::-;925:201;889:237;792:162:248;;;286:2032;;4378:1454:277;4489:12;4616:4;4610:11;-1:-1:-1;;;4739:17:277;4732:93;4872:2;4868:1;4849:17;4845:25;4838:37;4952:6;4947:2;4928:17;4924:26;4917:42;5754:2;5751:1;5747:2;5728:17;5725:1;5718:5;5711;5706:51;5275:16;5268:24;5262:2;5244:16;5241:24;5237:1;5233;5227:8;5224:15;5220:46;5217:76;5017:754;5006:765;;;5799:7;5791:34;;;;-1:-1:-1;;;5791:34:277;;1258:2:278;5791:34:277;;;1240:21:278;1297:2;1277:18;;;1270:30;-1:-1:-1;;;1316:18:278;;;1309:44;1370:18;;5791:34:277;;;;;;;;4479:1353;4378:1454;;;:::o;14:145:278:-;-1:-1:-1;;;;;103:31:278;;93:42;;83:70;;149:1;146;139:12;83:70;14:145;:::o;164:602::-;293:6;301;309;362:2;350:9;341:7;337:23;333:32;330:52;;;378:1;375;368:12;330:52;410:9;404:16;429:45;468:5;429:45;:::i;:::-;543:2;528:18;;522:25;493:5;;-1:-1:-1;556:47:278;522:25;556:47;:::i;:::-;674:2;659:18;;653:25;622:7;;-1:-1:-1;687:47:278;653:25;687:47;:::i;:::-;753:7;743:17;;;164:602;;;;;:::o;771:280::-;856:6;909:2;897:9;888:7;884:23;880:32;877:52;;;925:1;922;915:12;877:52;957:9;951:16;976:45;1015:5;976:45;:::i;:::-;1040:5;771:280;-1:-1:-1;;;771:280:278:o;1056:338::-;286:2032:248;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063b262cc6e11610066578063b262cc6e14610117578063b334db7b1461012a578063bf7e214f1461014b578063f7c618c11461015e578063fc56a8131461018557600080fd5b806313af4035146100985780637a9e5e4b146100ad5780637acf5b92146100c05780638da5cb5b14610104575b600080fd5b6100ab6100a63660046106a6565b6101e1565b005b6100ab6100bb3660046106a6565b610282565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100e7906001600160a01b031681565b6100ab6101253660046106ca565b61036c565b61013d61013836600461071d565b610456565b6040519081526020016100fb565b6001546100e7906001600160a01b031681565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6101bd6101933660046106a6565b6002602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff9091166020830152016100fb565b6101f7336000356001600160e01b0319166105e4565b6102375760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331480610317575060015460405163b700961360e01b81526001600160a01b039091169063b7009613906102d690339030906001600160e01b03196000351690600401610756565b602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610783565b61032057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b610382336000356001600160e01b0319166105e4565b6103bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161022e565b6001600160a01b038216600090815260026020526040902081906103e182826107ba565b50506001600160a01b0382167fcc8ac5e3ee055e8954322366397250c104503ddae709698089ea0c0cfa8da89161041b60208401846107fc565b61042b6040850160208601610819565b604080516001600160e01b03909316835263ffffffff90911660208301520160405180910390a25050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a15760405163739e221160e01b815260040160405180910390fd5b6001600160a01b03831660009081526002602090815260408083208151808301909252546001600160e01b0381168252600160e01b900463ffffffff16918101829052919015806104fb575042826020015163ffffffff16115b156105175761051063ffffffff85164261084c565b9050610548565b8363ffffffff16826020015163ffffffff1611156105485783826020015161053f9190610863565b63ffffffff1690505b815161055e9082906001600160e01b0316610888565b95945050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806105de5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161022e565b50505050565b6001546000906001600160a01b0316801580159061066e575060405163b700961360e01b81526001600160a01b0382169063b70096139061062d90879030908890600401610756565b602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610783565b8061068657506000546001600160a01b038581169116145b949350505050565b6001600160a01b03811681146106a357600080fd5b50565b6000602082840312156106b857600080fd5b81356106c38161068e565b9392505050565b60008082840360608112156106de57600080fd5b83356106e98161068e565b92506040601f19820112156106fd57600080fd5b506020830190509250929050565b63ffffffff811681146106a357600080fd5b6000806040838503121561073057600080fd5b823561073b8161068e565b9150602083013561074b8161070b565b809150509250929050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561079557600080fd5b815180151581146106c357600080fd5b6001600160e01b03811681146106a357600080fd5b81356107c5816107a5565b81546001600160e01b03199081166001600160e01b0392909216918217835560208401356107f28161070b565b60e01b1617905550565b60006020828403121561080e57600080fd5b81356106c3816107a5565b60006020828403121561082b57600080fd5b81356106c38161070b565b634e487b7160e01b600052601160045260246000fd5b60008282101561085e5761085e610836565b500390565b600063ffffffff8381169083168181101561088057610880610836565b039392505050565b60008160001904831182151516156108a2576108a2610836565b50029056fea2646970667358221220aede4bc88f9bd05610065a93de00d2de1f59f1065034ea2290c7447a9ec82ff264736f6c634300080a0033",
    "sourceMap": "286:2032:248:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:147:272;;;;;;:::i;:::-;;:::i;:::-;;1504:434;;;;;;:::i;:::-;;:::i;835:47:246:-;;;;;;;;-1:-1:-1;;;;;859:32:278;;;841:51;;829:2;814:18;835:47:246;;;;;;;;551:20:272;;;;;-1:-1:-1;;;;;551:20:272;;;1159:237:248;;;;;;:::i;:::-;;:::i;1676:640::-;;;;;;:::i;:::-;;:::i;:::-;;;2217:25:278;;;2205:2;2190:18;1676:640:248;2071:177:278;578:26:272;;;;;-1:-1:-1;;;;;578:26:272;;;742:43:246;;;;;737:48:248;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;737:48:248;;;-1:-1:-1;;;737:48:248;;;;;;;;;;-1:-1:-1;;;;;3160:32:278;;;3142:51;;3241:10;3229:23;;;3224:2;3209:18;;3202:51;3115:18;737:48:248;2970:289:278;1944:147:272;883:33;896:10;908:7;;-1:-1:-1;;;;;;908:7:272;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:272;;3466:2:278;875:58:272;;;3448:21:278;3505:2;3485:18;;;3478:30;-1:-1:-1;;;3524:18:278;;;3517:42;3576:18;;875:58:272;;;;;;;;;2018:5:::1;:16:::0;;-1:-1:-1;;;;;;2018:16:272::1;-1:-1:-1::0;;;;;2018:16:272;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;1504:434::-;1775:5;;-1:-1:-1;;;;;1775:5:272;1761:10;:19;;:76;;-1:-1:-1;1784:9:272;;:53;;-1:-1:-1;;;1784:53:272;;-1:-1:-1;;;;;1784:9:272;;;;:17;;:53;;1802:10;;1822:4;;-1:-1:-1;;;;;;1784:9:272;1829:7;;;1784:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;-1:-1:-1;;;;;;1849:24:272;-1:-1:-1;;;;;1849:24:272;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:272;1504:434;:::o;1159:237:248:-;883:33:272;896:10;908:7;;-1:-1:-1;;;;;;908:7:272;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:272;;3466:2:278;875:58:272;;;3448:21:278;3505:2;3485:18;;;3478:30;-1:-1:-1;;;3524:18:278;;;3517:42;3576:18;;875:58:272;3264:336:278;875:58:272;-1:-1:-1;;;;;1261:21:248;::::1;;::::0;;;:11:::1;:21;::::0;;;;1285:7;;1261:31:::1;1285:7:::0;1261:21;:31:::1;:::i;:::-;-1:-1:-1::0;;;;;;;1307:82:248;::::1;;1335:24;;::::0;::::1;:7:::0;:24:::1;:::i;:::-;1361:27;::::0;;;::::1;::::0;::::1;;:::i;:::-;1307:82;::::0;;-1:-1:-1;;;;;3160:32:278;;;3142:51;;3241:10;3229:23;;;3224:2;3209:18;;3202:51;3115:18;1307:82:248::1;;;;;;;1159:237:::0;;:::o;1676:640::-;1833:14;1170:10:246;-1:-1:-1;;;;;1192:8:246;1170:31;;1166:59;;1210:15;;-1:-1:-1;;;1210:15:246;;;;;;;;;;;1166:59;-1:-1:-1;;;;;1892:21:248;::::1;1863:26;1892:21:::0;;;:11:::1;:21;::::0;;;;;;;1863:50;;;;::::1;::::0;;;;-1:-1:-1;;;;;1863:50:248;::::1;::::0;;-1:-1:-1;;;1863:50:248;::::1;;;::::0;;::::1;::::0;;;;:26;1953:32;;:81:::1;;;2019:15;1989:7;:27;;;:45;;;1953:81;1949:307;;;2060:38;;::::0;::::1;:15;:38;:::i;:::-;2050:48;;1949:307;;;2149:20;2119:50;;:7;:27;;;:50;;;2115:141;;;2225:20;2195:7;:27;;;:50;;;;:::i;:::-;2185:60;;;;2115:141;2275:24:::0;;:34:::1;::::0;2302:7;;-1:-1:-1;;;;;2275:34:248::1;;:::i;:::-;2266:43:::0;1676:640;-1:-1:-1;;;;;1676:640:248:o;4378:1454:277:-;4489:12;4616:4;4610:11;-1:-1:-1;;;4739:17:277;4732:93;4872:2;4868:1;4849:17;4845:25;4838:37;4952:6;4947:2;4928:17;4924:26;4917:42;5754:2;5751:1;5747:2;5728:17;5725:1;5718:5;5711;5706:51;5275:16;5268:24;5262:2;5244:16;5241:24;5237:1;5233;5227:8;5224:15;5220:46;5217:76;5017:754;5006:765;;;5799:7;5791:34;;;;-1:-1:-1;;;5791:34:277;;6319:2:278;5791:34:277;;;6301:21:278;6358:2;6338:18;;;6331:30;-1:-1:-1;;;6377:18:278;;;6370:44;6431:18;;5791:34:277;6117:338:278;5791:34:277;4479:1353;4378:1454;;;:::o;958:540:272:-;1078:9;;1045:4;;-1:-1:-1;;;;;1078:9:272;1396:27;;;;;:77;;-1:-1:-1;1427:46:272;;-1:-1:-1;;;1427:46:272;;-1:-1:-1;;;;;1427:12:272;;;;;:46;;1440:4;;1454;;1461:11;;1427:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:272;;-1:-1:-1;;;;;1478:13:272;;;1486:5;;1478:13;1395:96;1388:103;958:540;-1:-1:-1;;;;958:540:272:o;14:131:278:-;-1:-1:-1;;;;;89:31:278;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:278:o;1111:423::-;1226:6;1234;1278:9;1269:7;1265:23;1308:2;1304;1300:11;1297:31;;;1324:1;1321;1314:12;1297:31;1363:9;1350:23;1382:31;1407:5;1382:31;:::i;:::-;1432:5;-1:-1:-1;1471:2:278;-1:-1:-1;;1453:16:278;;1449:25;1446:45;;;1487:1;1484;1477:12;1446:45;;1525:2;1514:9;1510:18;1500:28;;1111:423;;;;;:::o;1539:121::-;1624:10;1617:5;1613:22;1606:5;1603:33;1593:61;;1650:1;1647;1640:12;1665:401;1747:6;1755;1808:2;1796:9;1787:7;1783:23;1779:32;1776:52;;;1824:1;1821;1814:12;1776:52;1863:9;1850:23;1882:31;1907:5;1882:31;:::i;:::-;1932:5;-1:-1:-1;1989:2:278;1974:18;;1961:32;2002;1961;2002;:::i;:::-;2053:7;2043:17;;;1665:401;;;;;:::o;3605:400::-;-1:-1:-1;;;;;3861:15:278;;;3843:34;;3913:15;;;;3908:2;3893:18;;3886:43;-1:-1:-1;;;;;;3965:33:278;;;3960:2;3945:18;;3938:61;3793:2;3778:18;;3605:400::o;4010:277::-;4077:6;4130:2;4118:9;4109:7;4105:23;4101:32;4098:52;;;4146:1;4143;4136:12;4098:52;4178:9;4172:16;4231:5;4224:13;4217:21;4210:5;4207:32;4197:60;;4253:1;4250;4243:12;4292:131;-1:-1:-1;;;;;4367:31:278;;4357:42;;4347:70;;4413:1;4410;4403:12;4428:521;4603:5;4590:19;4618:33;4643:7;4618:33;:::i;:::-;4771:11;;-1:-1:-1;;;;;;4767:20:278;;;-1:-1:-1;;;;;4670:33:278;;;;4764:28;;;4751:42;;4841:2;4830:14;;4817:28;4854:32;4817:28;4854:32;:::i;:::-;4923:3;4919:17;4915:26;4908:34;4895:48;;-1:-1:-1;4428:521:278:o;4954:247::-;5013:6;5066:2;5054:9;5045:7;5041:23;5037:32;5034:52;;;5082:1;5079;5072:12;5034:52;5121:9;5108:23;5140:31;5165:5;5140:31;:::i;5206:245::-;5264:6;5317:2;5305:9;5296:7;5292:23;5288:32;5285:52;;;5333:1;5330;5323:12;5285:52;5372:9;5359:23;5391:30;5415:5;5391:30;:::i;5456:127::-;5517:10;5512:3;5508:20;5505:1;5498:31;5548:4;5545:1;5538:15;5572:4;5569:1;5562:15;5588:125;5628:4;5656:1;5653;5650:8;5647:34;;;5661:18;;:::i;:::-;-1:-1:-1;5698:9:278;;5588:125::o;5718:221::-;5757:4;5786:10;5846;;;;5816;;5868:12;;;5865:38;;;5883:18;;:::i;:::-;5920:13;;5718:221;-1:-1:-1;;;5718:221:278:o;5944:168::-;5984:7;6050:1;6046;6042:6;6038:14;6035:1;6032:21;6027:1;6020:9;6013:17;6009:45;6006:71;;;6057:18;;:::i;:::-;-1:-1:-1;6097:9:278;;5944:168::o",
    "linkReferences": {},
    "immutableReferences": {
      "68728": [
        {
          "start": 355,
          "length": 32
        }
      ],
      "68733": [
        {
          "start": 197,
          "length": 32
        },
        {
          "start": 1123,
          "length": 32
        }
      ]
    }
  },
  "ast": {
    "absolutePath": "/Users/peet/git/contracts/lib/flywheel-v2/src/rewards/FlywheelStaticRewards.sol",
    "id": 69117,
    "exportedSymbols": {
      "Auth": [
        91033
      ],
      "Authority": [
        91046
      ],
      "BaseFlywheelRewards": [
        68785
      ],
      "ERC20": [
        91482
      ],
      "FlywheelCore": [
        68645
      ],
      "FlywheelStaticRewards": [
        69116
      ],
      "IFlywheelRewards": [
        68704
      ],
      "SafeTransferLib": [
        91865
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2277:248",
    "nodes": [
      {
        "id": 68973,
        "nodeType": "PragmaDirective",
        "src": "42:23:248",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 68976,
        "nodeType": "ImportDirective",
        "src": "67:54:248",
        "absolutePath": "/Users/peet/git/contracts/lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69117,
        "sourceUnit": 91047,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68974,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "75:4:248",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 68975,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "81:9:248",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68977,
        "nodeType": "ImportDirective",
        "src": "122:35:248",
        "absolutePath": "/Users/peet/git/contracts/lib/flywheel-v2/src/rewards/BaseFlywheelRewards.sol",
        "file": "./BaseFlywheelRewards.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69117,
        "sourceUnit": 68786,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 69116,
        "nodeType": "ContractDefinition",
        "src": "286:2032:248",
        "nodes": [
          {
            "id": 68991,
            "nodeType": "EventDefinition",
            "src": "352:102:248",
            "anonymous": false,
            "name": "RewardsInfoUpdate",
            "nameLocation": "358:17:248",
            "parameters": {
              "id": 68990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68985,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "390:8:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 68991,
                  "src": "376:22:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$91482",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 68984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68983,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91482,
                      "src": "376:5:248"
                    },
                    "referencedDeclaration": 91482,
                    "src": "376:5:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$91482",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardsPerSecond",
                  "nameLocation": "408:16:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 68991,
                  "src": "400:24:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  },
                  "typeName": {
                    "id": 68986,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardsEndTimestamp",
                  "nameLocation": "433:19:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 68991,
                  "src": "426:26:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 68988,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:6:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:78:248"
            }
          },
          {
            "id": 68998,
            "nodeType": "StructDefinition",
            "src": "460:229:248",
            "canonicalName": "FlywheelStaticRewards.RewardsInfo",
            "members": [
              {
                "constant": false,
                "id": 68994,
                "mutability": "mutable",
                "name": "rewardsPerSecond",
                "nameLocation": "536:16:248",
                "nodeType": "VariableDeclaration",
                "scope": 68998,
                "src": "528:24:248",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint224",
                  "typeString": "uint224"
                },
                "typeName": {
                  "id": 68993,
                  "name": "uint224",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:248",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68997,
                "mutability": "mutable",
                "name": "rewardsEndTimestamp",
                "nameLocation": "663:19:248",
                "nodeType": "VariableDeclaration",
                "scope": 68998,
                "src": "656:26:248",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 68996,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "656:6:248",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RewardsInfo",
            "nameLocation": "467:11:248",
            "scope": 69116,
            "visibility": "public"
          },
          {
            "id": 69005,
            "nodeType": "VariableDeclaration",
            "src": "737:48:248",
            "constant": false,
            "documentation": {
              "id": 68999,
              "nodeType": "StructuredDocumentation",
              "src": "695:37:248",
              "text": "@notice rewards info per strategy"
            },
            "functionSelector": "fc56a813",
            "mutability": "mutable",
            "name": "rewardsInfo",
            "nameLocation": "774:11:248",
            "scope": 69116,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$91482_$_t_struct$_RewardsInfo_$68998_storage_$",
              "typeString": "mapping(contract ERC20 => struct FlywheelStaticRewards.RewardsInfo)"
            },
            "typeName": {
              "id": 69004,
              "keyType": {
                "id": 69001,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 69000,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91482,
                  "src": "745:5:248"
                },
                "referencedDeclaration": 91482,
                "src": "745:5:248",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$91482",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "737:29:248",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$91482_$_t_struct$_RewardsInfo_$68998_storage_$",
                "typeString": "mapping(contract ERC20 => struct FlywheelStaticRewards.RewardsInfo)"
              },
              "valueType": {
                "id": 69003,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 69002,
                  "name": "RewardsInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68998,
                  "src": "754:11:248"
                },
                "referencedDeclaration": 68998,
                "src": "754:11:248",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RewardsInfo_$68998_storage_ptr",
                  "typeString": "struct FlywheelStaticRewards.RewardsInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 69024,
            "nodeType": "FunctionDefinition",
            "src": "792:162:248",
            "body": {
              "id": 69023,
              "nodeType": "Block",
              "src": "952:2:248",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 69016,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69010,
                    "src": "901:6:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 69017,
                    "name": "_authority",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69013,
                    "src": "909:10:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$91046",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 69018,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 69015,
                  "name": "Auth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91033,
                  "src": "896:4:248"
                },
                "nodeType": "ModifierInvocation",
                "src": "896:24:248"
              },
              {
                "arguments": [
                  {
                    "id": 69020,
                    "name": "_flywheel",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69008,
                    "src": "941:9:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlywheelCore_$68645",
                      "typeString": "contract FlywheelCore"
                    }
                  }
                ],
                "id": 69021,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 69019,
                  "name": "BaseFlywheelRewards",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68785,
                  "src": "921:19:248"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:30:248"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 69014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69008,
                  "mutability": "mutable",
                  "name": "_flywheel",
                  "nameLocation": "826:9:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69024,
                  "src": "813:22:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FlywheelCore_$68645",
                    "typeString": "contract FlywheelCore"
                  },
                  "typeName": {
                    "id": 69007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69006,
                      "name": "FlywheelCore",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68645,
                      "src": "813:12:248"
                    },
                    "referencedDeclaration": 68645,
                    "src": "813:12:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlywheelCore_$68645",
                      "typeString": "contract FlywheelCore"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69010,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "853:6:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69024,
                  "src": "845:14:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:248",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69013,
                  "mutability": "mutable",
                  "name": "_authority",
                  "nameLocation": "879:10:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69024,
                  "src": "869:20:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$91046",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 69012,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69011,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91046,
                      "src": "869:9:248"
                    },
                    "referencedDeclaration": 91046,
                    "src": "869:9:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$91046",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:92:248"
            },
            "returnParameters": {
              "id": 69022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:0:248"
            },
            "scope": 69116,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69051,
            "nodeType": "FunctionDefinition",
            "src": "1159:237:248",
            "body": {
              "id": 69050,
              "nodeType": "Block",
              "src": "1251:145:248",
              "statements": [
                {
                  "expression": {
                    "id": 69040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 69036,
                        "name": "rewardsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69005,
                        "src": "1261:11:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$91482_$_t_struct$_RewardsInfo_$68998_storage_$",
                          "typeString": "mapping(contract ERC20 => struct FlywheelStaticRewards.RewardsInfo storage ref)"
                        }
                      },
                      "id": 69038,
                      "indexExpression": {
                        "id": 69037,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69028,
                        "src": "1273:8:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$91482",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1261:21:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsInfo_$68998_storage",
                        "typeString": "struct FlywheelStaticRewards.RewardsInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69039,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69031,
                      "src": "1285:7:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsInfo_$68998_calldata_ptr",
                        "typeString": "struct FlywheelStaticRewards.RewardsInfo calldata"
                      }
                    },
                    "src": "1261:31:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsInfo_$68998_storage",
                      "typeString": "struct FlywheelStaticRewards.RewardsInfo storage ref"
                    }
                  },
                  "id": 69041,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:31:248"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 69043,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69028,
                        "src": "1325:8:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$91482",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 69044,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69031,
                          "src": "1335:7:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsInfo_$68998_calldata_ptr",
                            "typeString": "struct FlywheelStaticRewards.RewardsInfo calldata"
                          }
                        },
                        "id": 69045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardsPerSecond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68994,
                        "src": "1335:24:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      {
                        "expression": {
                          "id": 69046,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69031,
                          "src": "1361:7:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsInfo_$68998_calldata_ptr",
                            "typeString": "struct FlywheelStaticRewards.RewardsInfo calldata"
                          }
                        },
                        "id": 69047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardsEndTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68997,
                        "src": "1361:27:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$91482",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 69042,
                      "name": "RewardsInfoUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68991,
                      "src": "1307:17:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$91482_$_t_uint224_$_t_uint32_$returns$__$",
                        "typeString": "function (contract ERC20,uint224,uint32)"
                      }
                    },
                    "id": 69048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:82:248",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69049,
                  "nodeType": "EmitStatement",
                  "src": "1302:87:248"
                }
              ]
            },
            "documentation": {
              "id": 69025,
              "nodeType": "StructuredDocumentation",
              "src": "960:194:248",
              "text": "@notice set rewards per second and rewards end time for Fei Rewards\n@param strategy the strategy to accrue rewards for\n@param rewards the rewards info for the strategy"
            },
            "functionSelector": "b262cc6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 69033,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90938,
                  "src": "1238:12:248"
                },
                "nodeType": "ModifierInvocation",
                "src": "1238:12:248"
              }
            ],
            "name": "setRewardsInfo",
            "nameLocation": "1168:14:248",
            "parameters": {
              "id": 69032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69028,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1189:8:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69051,
                  "src": "1183:14:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$91482",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 69027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69026,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91482,
                      "src": "1183:5:248"
                    },
                    "referencedDeclaration": 91482,
                    "src": "1183:5:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$91482",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69031,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "1220:7:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69051,
                  "src": "1199:28:248",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RewardsInfo_$68998_calldata_ptr",
                    "typeString": "struct FlywheelStaticRewards.RewardsInfo"
                  },
                  "typeName": {
                    "id": 69030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69029,
                      "name": "RewardsInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68998,
                      "src": "1199:11:248"
                    },
                    "referencedDeclaration": 68998,
                    "src": "1199:11:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsInfo_$68998_storage_ptr",
                      "typeString": "struct FlywheelStaticRewards.RewardsInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:46:248"
            },
            "returnParameters": {
              "id": 69035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:248"
            },
            "scope": 69116,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69115,
            "nodeType": "FunctionDefinition",
            "src": "1676:640:248",
            "baseFunctions": [
              68689
            ],
            "body": {
              "id": 69114,
              "nodeType": "Block",
              "src": "1853:463:248",
              "statements": [
                {
                  "assignments": [
                    69067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69067,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "1882:7:248",
                      "nodeType": "VariableDeclaration",
                      "scope": 69114,
                      "src": "1863:26:248",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsInfo_$68998_memory_ptr",
                        "typeString": "struct FlywheelStaticRewards.RewardsInfo"
                      },
                      "typeName": {
                        "id": 69066,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69065,
                          "name": "RewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 68998,
                          "src": "1863:11:248"
                        },
                        "referencedDeclaration": 68998,
                        "src": "1863:11:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardsInfo_$68998_storage_ptr",
                          "typeString": "struct FlywheelStaticRewards.RewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69071,
                  "initialValue": {
                    "baseExpression": {
                      "id": 69068,
                      "name": "rewardsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69005,
                      "src": "1892:11:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_ERC20_$91482_$_t_struct$_RewardsInfo_$68998_storage_$",
                        "typeString": "mapping(contract ERC20 => struct FlywheelStaticRewards.RewardsInfo storage ref)"
                      }
                    },
                    "id": 69070,
                    "indexExpression": {
                      "id": 69069,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69055,
                      "src": "1904:8:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$91482",
                        "typeString": "contract ERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1892:21:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsInfo_$68998_storage",
                      "typeString": "struct FlywheelStaticRewards.RewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1863:50:248"
                },
                {
                  "assignments": [
                    69073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69073,
                      "mutability": "mutable",
                      "name": "elapsed",
                      "nameLocation": "1932:7:248",
                      "nodeType": "VariableDeclaration",
                      "scope": 69114,
                      "src": "1924:15:248",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1924:7:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69074,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1924:15:248"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 69084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 69078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 69075,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69067,
                          "src": "1953:7:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsInfo_$68998_memory_ptr",
                            "typeString": "struct FlywheelStaticRewards.RewardsInfo memory"
                          }
                        },
                        "id": 69076,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardsEndTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68997,
                        "src": "1953:27:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 69077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1984:1:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1953:32:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 69083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 69079,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69067,
                          "src": "1989:7:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsInfo_$68998_memory_ptr",
                            "typeString": "struct FlywheelStaticRewards.RewardsInfo memory"
                          }
                        },
                        "id": 69080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardsEndTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68997,
                        "src": "1989:27:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 69081,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2019:5:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 69082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2019:15:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1989:45:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1953:81:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 69096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 69093,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69067,
                          "src": "2119:7:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsInfo_$68998_memory_ptr",
                            "typeString": "struct FlywheelStaticRewards.RewardsInfo memory"
                          }
                        },
                        "id": 69094,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardsEndTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68997,
                        "src": "2119:27:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 69095,
                        "name": "lastUpdatedTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69057,
                        "src": "2149:20:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "2119:50:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 69105,
                    "nodeType": "IfStatement",
                    "src": "2115:141:248",
                    "trueBody": {
                      "id": 69104,
                      "nodeType": "Block",
                      "src": "2171:85:248",
                      "statements": [
                        {
                          "expression": {
                            "id": 69102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 69097,
                              "name": "elapsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69073,
                              "src": "2185:7:248",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 69101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 69098,
                                  "name": "rewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69067,
                                  "src": "2195:7:248",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RewardsInfo_$68998_memory_ptr",
                                    "typeString": "struct FlywheelStaticRewards.RewardsInfo memory"
                                  }
                                },
                                "id": 69099,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewardsEndTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 68997,
                                "src": "2195:27:248",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 69100,
                                "name": "lastUpdatedTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69057,
                                "src": "2225:20:248",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "2195:50:248",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "2185:60:248",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 69103,
                          "nodeType": "ExpressionStatement",
                          "src": "2185:60:248"
                        }
                      ]
                    }
                  },
                  "id": 69106,
                  "nodeType": "IfStatement",
                  "src": "1949:307:248",
                  "trueBody": {
                    "id": 69092,
                    "nodeType": "Block",
                    "src": "2036:73:248",
                    "statements": [
                      {
                        "expression": {
                          "id": 69090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 69085,
                            "name": "elapsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69073,
                            "src": "2050:7:248",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 69089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 69086,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2060:5:248",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 69087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2060:15:248",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 69088,
                              "name": "lastUpdatedTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69057,
                              "src": "2078:20:248",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "2060:38:248",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2050:48:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 69091,
                        "nodeType": "ExpressionStatement",
                        "src": "2050:48:248"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 69112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69107,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69063,
                      "src": "2266:6:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 69111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 69108,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69067,
                          "src": "2275:7:248",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsInfo_$68998_memory_ptr",
                            "typeString": "struct FlywheelStaticRewards.RewardsInfo memory"
                          }
                        },
                        "id": 69109,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardsPerSecond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68994,
                        "src": "2275:24:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 69110,
                        "name": "elapsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69073,
                        "src": "2302:7:248",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2275:34:248",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2266:43:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69113,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:43:248"
                }
              ]
            },
            "documentation": {
              "id": 69052,
              "nodeType": "StructuredDocumentation",
              "src": "1402:269:248",
              "text": "@notice calculate and transfer accrued rewards to flywheel core\n@param strategy the strategy to accrue rewards for\n@param lastUpdatedTimestamp the last updated time for strategy\n@return amount the amount of tokens accrued and transferred"
            },
            "functionSelector": "b334db7b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 69060,
                  "name": "onlyFlywheel",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68784,
                  "src": "1803:12:248"
                },
                "nodeType": "ModifierInvocation",
                "src": "1803:12:248"
              }
            ],
            "name": "getAccruedRewards",
            "nameLocation": "1685:17:248",
            "overrides": {
              "id": 69059,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1786:8:248"
            },
            "parameters": {
              "id": 69058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69055,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1709:8:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69115,
                  "src": "1703:14:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$91482",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 69054,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69053,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91482,
                      "src": "1703:5:248"
                    },
                    "referencedDeclaration": 91482,
                    "src": "1703:5:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$91482",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69057,
                  "mutability": "mutable",
                  "name": "lastUpdatedTimestamp",
                  "nameLocation": "1726:20:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69115,
                  "src": "1719:27:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 69056,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:6:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1702:45:248"
            },
            "returnParameters": {
              "id": 69064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69063,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1841:6:248",
                  "nodeType": "VariableDeclaration",
                  "scope": 69115,
                  "src": "1833:14:248",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:248",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:16:248"
            },
            "scope": 69116,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 68979,
              "name": "Auth",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91033,
              "src": "320:4:248"
            },
            "id": 68980,
            "nodeType": "InheritanceSpecifier",
            "src": "320:4:248"
          },
          {
            "baseName": {
              "id": 68981,
              "name": "BaseFlywheelRewards",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68785,
              "src": "326:19:248"
            },
            "id": 68982,
            "nodeType": "InheritanceSpecifier",
            "src": "326:19:248"
          }
        ],
        "canonicalName": "FlywheelStaticRewards",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 68978,
          "nodeType": "StructuredDocumentation",
          "src": "159:126:248",
          "text": "@title Flywheel Static Reward Stream\n@notice Determines rewards per strategy based on a fixed reward rate per second"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69116,
          68785,
          68704,
          91033
        ],
        "name": "FlywheelStaticRewards",
        "nameLocation": "295:21:248",
        "scope": 69117,
        "usedErrors": [
          68723
        ]
      }
    ],
    "license": "AGPL-3.0-only"
  }
}
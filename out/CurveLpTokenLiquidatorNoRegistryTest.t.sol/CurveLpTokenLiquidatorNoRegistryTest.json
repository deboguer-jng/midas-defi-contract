{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id1",
          "type": "uint256"
        }
      ],
      "name": "forChains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id0",
          "type": "uint256"
        }
      ],
      "name": "forChains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeemToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805460ff191660011790556200001e90620009ca565b604051809103906000f0801580156200003b573d6000803e3d6000fd5b50600080546001600160a01b0392909216620100000262010000600160b01b0319909216919091179055600280546001600160a01b0319908116738d7408c2b3154f9f97fc6dd24cd36143908d1e521790915560038054821673af4de8e872131ae328ce21d909c74705d3aaf452179055600480549091167344ea7bab9121d97630b5db0f92aad75ca5a401a3179055348015620000d857600080fd5b50620000e3620000e9565b62000a0a565b60006001600160a01b0316600060029054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000148573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016e9190620009d8565b6001600160a01b03161415620009c85760005460405163189acdbd60e31b8152306004820152620100009091046001600160a01b03169063c4d66de890602401600060405180830381600087803b158015620001c957600080fd5b505af1158015620001de573d6000803e3d6000fd5b505050506038461415620005a35760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200026a57600080fd5b505af11580156200027f573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273ca143ce32fe78f1f7019d7d551a6402fc5350c736024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200030b57600080fd5b505af115801562000320573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600480820192909252604481019190915263189554d160e21b606482015273e9e7cea3dedca5984780bafc599bd69add087d566024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620003a257600080fd5b505af1158015620003b7573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b606482015273c3abf2cb82c65474cef8f90f1a4dae79929b19406024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200044457600080fd5b505af115801562000459573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b815260048101919091526012604482015271747761704f7261636c6573466163746f727960701b6064820152738853f26c198fd5693e7886c081164e0c3f0a4e516024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620004e757600080fd5b505af1158015620004fc573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152600f60448201526e636861696e6c696e6b4f7261636c6560881b6064820152732b5311de4555506400273cfaafb4393f01ec25676024820152620100009091046001600160a01b03169250639b2ea4bd91506084015b600060405180830381600087803b1580156200058857600080fd5b505af11580156200059d573d6000803e3d6000fd5b50505050565b6061461415620007fc5760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273ae13d989dac2f0debff460ac112a837c89baa7cd6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200062b57600080fd5b505af115801562000640573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273b7926c0430afb07aa7defde6da862ae0bde767bc6024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620006cc57600080fd5b505af1158015620006e1573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b606482015273c3abf2cb82c65474cef8f90f1a4dae79929b19406024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200076e57600080fd5b505af115801562000783573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b815260048101919091526012604482015271747761704f7261636c6573466163746f727960701b606482015273944fed08a91983d06f653e9f55eca995316ccd3e6024820152620100009091046001600160a01b03169250639b2ea4bd91506084016200056d565b610504461415620009c85760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273acc15dc74880c9944775448304b263d191c6077f6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200088557600080fd5b505af11580156200089a573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273985bca32293a7a496300a48081947321177a86fd6024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200092657600080fd5b505af11580156200093b573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b60648201527314c15b9ec83ed79f23bf71d51741f58b69ff14946024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200058857600080fd5b565b610b4a8062001db983390190565b600060208284031215620009eb57600080fd5b81516001600160a01b038116811462000a0357600080fd5b9392505050565b61139f8062000a1a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370bdc8551161005b57806370bdc85514610105578063ba414fa61461010d578063d7e37a6f14610115578063fa7626d41461011d57600080fd5b80630a9254e41461008d57806315a9c83d1461009757806325bf0d18146100bf5780633a768463146100d2575b600080fd5b61009561012a565b005b6100aa6100a5366004610b42565b6102e4565b60405190151581526020015b60405180910390f35b6100aa6100cd366004610b64565b461490565b6100ed737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100b6565b6100956102fa565b6100aa610404565b61009561052f565b6000546100aa9060ff1681565b4660381480156102e15760005460405163bf40fac160e01b81526020600482015260066024820152653bba37b5b2b760d11b6044820152620100009091046001600160a01b03169063bf40fac190606401602060405180830381865afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc9190610b92565b600680546001600160a01b0319166001600160a01b03928316908117909155600454604051919216906101ee90610b35565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610221573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617905560005460405163bf40fac160e01b81526020600480830191909152602482015263189554d160e21b6044820152620100009091049091169063bf40fac190606401602060405180830381865afa15801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c09190610b92565b600580546001600160a01b0319166001600160a01b03929092169190911790555b50565b6000824614806102f357508146145b9392505050565b4660381480156102e1576001546040805163b798d3ff60e01b81529051610384926001600160a01b03169163b798d3ff9160048083019260209291908290030181865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610b92565b6006546001600160a01b031661076d565b600154604080516307dc0d1d60e41b815290516102e1926001600160a01b031691637dc0d1d09160048083019260209291908290030181865afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190610b92565b6004546001600160a01b031661076d565b60008054610100900460ff16156104245750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561052a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916104b2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610bdf565b60408051601f19818403018152908290526104cc91610c10565b6000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b50915050808060200190518101906105269190610c2c565b9150505b919050565b4660381480156102e15760025460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505060035460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526104d260248201529116925063a9059cbb91506044016020604051808303816000875af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190610c2c565b50600154600354600554604080516000602082018190526001600160a01b0393841682840152825180830384018152606083019384905263085d6fa760e11b909352948594908416936310badf4e936106889391909216916104d291606401610c4e565b60408051808303816000875af11580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190610c97565b60055491935091506106e69083906001600160a01b031661076d565b6106f1816000610875565b6001546040516370a0823160e01b81526001600160a01b039182166004820152610768918416906370a0823190602401602060405180830381865afa15801561073e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107629190610cc5565b8261096e565b505050565b806001600160a01b0316826001600160a01b031614610871577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107f39060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161082a9190610cde565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516108619190610d22565b60405180910390a1610871610a29565b5050565b808211610871577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516108e59060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206113738339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b60608201526020810182905260008051602061137383398151915290608001610861565b808214610871577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516109df9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160008051602061137383398151915281604051610a049190610d4c565b60405180910390a1600080516020611373833981519152826040516108619190610d84565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b245760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610ac39291602001610bdf565b60408051601f1981840301815290829052610add91610c10565b6000604051808303816000865af19150503d8060008114610b1a576040519150601f19603f3d011682016040523d82523d6000602084013e610b1f565b606091505b505050505b6000805461ff001916610100179055565b6105c480610daf83390190565b60008060408385031215610b5557600080fd5b50508035926020909101359150565b600060208284031215610b7657600080fd5b5035919050565b6001600160a01b03811681146102e157600080fd5b600060208284031215610ba457600080fd5b81516102f381610b7d565b60005b83811015610bca578181015183820152602001610bb2565b83811115610bd9576000848401525b50505050565b6001600160e01b0319831681528151600090610c02816004850160208701610baf565b919091016004019392505050565b60008251610c22818460208701610baf565b9190910192915050565b600060208284031215610c3e57600080fd5b815180151581146102f357600080fd5b60018060a01b03841681528260208201526060604082015260008251806060840152610c81816080850160208701610baf565b601f01601f191691909101608001949350505050565b60008060408385031215610caa57600080fd5b8251610cb581610b7d565b6020939093015192949293505050565b600060208284031215610cd757600080fd5b5051919050565b604081526000610d0860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000610d0860408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000610d7660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000610d7660408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60c060405234801561001057600080fd5b506040516105c43803806105c483398101604081905261002f9161005e565b6001600160a01b039182166080521660a052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a0516104f46100d0600039600081816082015261012501526000818160c1015281816102c6015261033a01526104f46000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806310badf4e146100465780637dc0d1d01461007d578063b798d3ff146100bc575b600080fd5b61005961005436600461039d565b6100e3565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610074565b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b600080600080848060200190518101906100fd919061046a565b60405163988b1fa760e01b81526001600160a01b038a811660048301529294509092506000917f0000000000000000000000000000000000000000000000000000000000000000169063988b1fa790602401602060405180830381865afa15801561016c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019091906104aa565b604051630d2680e960e11b815260048101899052600085900b6024820152600160448201529091506001600160a01b03821690631a4d01d290606401600060405180830381600087803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b50505050816001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316146102315781610234565b60005b94506001600160a01b038516156102b2576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad91906104ce565b6102b4565b475b93506001600160a01b038516610363577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000009450505050610367565b5050505b935093915050565b6001600160a01b038116811461038457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156103b257600080fd5b83356103bd8161036f565b925060208401359150604084013567ffffffffffffffff808211156103e157600080fd5b818601915086601f8301126103f557600080fd5b81358181111561040757610407610387565b604051601f8201601f19908116603f0116810190838211818310171561042f5761042f610387565b8160405282815289602084870101111561044857600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561047d57600080fd5b825160ff8116811461048e57600080fd5b602084015190925061049f8161036f565b809150509250929050565b6000602082840312156104bc57600080fd5b81516104c78161036f565b9392505050565b6000602082840312156104e057600080fd5b505191905056fea164736f6c634300080a000ab2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a164736f6c634300080a000a608060405234801561001057600080fd5b50610b2a806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639b2ea4bd116100665780639b2ea4bd14610122578063a11b73a614610135578063bf40fac114610148578063c4d66de81461015b578063f2fde38b1461016e57600080fd5b80634172e7f9146100a35780634b12e643146100cd578063715018a6146100e057806381bc3632146100ea5780638da5cb5b146100fd575b600080fd5b6100b66100b136600461080e565b610181565b6040516100c4929190610830565b60405180910390f35b6100b66100db36600461080e565b610230565b6100e861025c565b005b6100e86100f83660046108de565b61029b565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016100c4565b6100e861013036600461093f565b610369565b6100e86101433660046108de565b610411565b61010a610156366004610993565b6104d6565b6100e861016936600461080e565b61050b565b6100e861017c36600461080e565b61058a565b606660205260009081526040902080546001820180546001600160a01b0390921692916101ad906109d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101d9906109d5565b80156102265780601f106101fb57610100808354040283529160200191610226565b820191906000526020600020905b81548152906001019060200180831161020957829003601f168201915b5050505050905082565b606760205260009081526040902080546001820180546001600160a01b0390921692916101ad906109d5565b6033546001600160a01b0316331461028f5760405162461bcd60e51b815260040161028690610a10565b60405180910390fd5b6102996000610625565b565b6033546001600160a01b031633146102c55760405162461bcd60e51b815260040161028690610a10565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606760209081526040909220845181546001600160a01b031916921691909117815583820151805191935061036092600185019291019061075e565b50505050505050565b6033546001600160a01b031633146103935760405162461bcd60e51b815260040161028690610a10565b80606584846040516103a6929190610a45565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908216907f188466739ff00cc68bfb2367d23ae4b855264264fe1624caa8884399af23454c906104049086908690610a55565b60405180910390a2505050565b6033546001600160a01b0316331461043b5760405162461bcd60e51b815260040161028690610a10565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606660209081526040909220845181546001600160a01b031916921691909117815583820151805191935061036092600185019291019061075e565b6000606583836040516104ea929190610a45565b908152604051908190036020019020546001600160a01b0316905092915050565b60006105176001610677565b9050801561052f576000805461ff0019166101001790555b610537610704565b61054082610625565b8015610586576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6033546001600160a01b031633146105b45760405162461bcd60e51b815260040161028690610a10565b6001600160a01b0381166106195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610286565b61062281610625565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff16156106be578160ff16600114801561069a5750303b155b6106b65760405162461bcd60e51b815260040161028690610a84565b506000919050565b60005460ff8084169116106106e55760405162461bcd60e51b815260040161028690610a84565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661072b5760405162461bcd60e51b815260040161028690610ad2565b610299600054610100900460ff166107555760405162461bcd60e51b815260040161028690610ad2565b61029933610625565b82805461076a906109d5565b90600052602060002090601f01602090048101928261078c57600085556107d2565b82601f106107a557805160ff19168380011785556107d2565b828001600101855582156107d2579182015b828111156107d25782518255916020019190600101906107b7565b506107de9291506107e2565b5090565b5b808211156107de57600081556001016107e3565b80356001600160a01b03811681146106ff57600080fd5b60006020828403121561082057600080fd5b610829826107f7565b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101561086c57858101830151858201606001528201610850565b8181111561087e576000606083870101525b50601f01601f191692909201606001949350505050565b60008083601f8401126108a757600080fd5b50813567ffffffffffffffff8111156108bf57600080fd5b6020830191508360208285010111156108d757600080fd5b9250929050565b600080600080606085870312156108f457600080fd5b6108fd856107f7565b935061090b602086016107f7565b9250604085013567ffffffffffffffff81111561092757600080fd5b61093387828801610895565b95989497509550505050565b60008060006040848603121561095457600080fd5b833567ffffffffffffffff81111561096b57600080fd5b61097786828701610895565b909450925061098a9050602085016107f7565b90509250925092565b600080602083850312156109a657600080fd5b823567ffffffffffffffff8111156109bd57600080fd5b6109c985828601610895565b90969095509350505050565b600181811c908216806109e957607f821691505b60208210811415610a0a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c634300080a000a",
    "sourceMap": "446:1487:97:-:0;;;;;1572:26:125;;;-1:-1:-1;;1572:26:125;1594:4;1572:26;;;1050:23:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1027:46:107;;;-1:-1:-1;;;;;1027:46:107;;;;;;-1:-1:-1;;;;;;1027:46:107;;;;;;;;;;564:73:97;;-1:-1:-1;;;;;;564:73:97;;;595:42;564:73;;;;641:89;;;;;687:42;641:89;;;734:151;;;;;;842:42;734:151;;;446:1487;;;;;;;;;-1:-1:-1;1200:28:107;:26;:28::i;:::-;446:1487:97;;1237:1555:107;1316:1;-1:-1:-1;;;;;1294:24:107;:2;;;;;;;;;-1:-1:-1;;;;;1294:2:107;-1:-1:-1;;;;;1294:8:107;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1294:24:107;;1290:1498;;;1328:2;;:28;;-1:-1:-1;;;1328:28:107;;1350:4;1328:28;;;455:51:161;1328:2:107;;;;-1:-1:-1;;;;;1328:2:107;;:13;;428:18:161;;1328:28:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:2;1368:13;:28;1364:1418;;;1438:2;;:67;;;-1:-1:-1;;;1438:67:107;;;;;729:21:161;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:161;;;797:36;1462:42:107;885:20:161;;;878:62;1438:2:107;;;;-1:-1:-1;;;;;1438:2:107;;:13;;850:19:161;;1438:67:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:2:107;;:77;;;-1:-1:-1;;;1515:77:107;;;;;1163:21:161;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:161;;;1232:46;1549:42:107;1330:20:161;;;1323:62;1515:2:107;;;;-1:-1:-1;;;;;1515:2:107;;-1:-1:-1;1515:13:107;;-1:-1:-1;1295:19:161;;1515:77:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1603:2:107;;:65;;;-1:-1:-1;;;1603:65:107;;;;;;1608:21:161;;;;1645:18;;;1638:29;;;;-1:-1:-1;;;1683:18:161;;;1676:34;1625:42:107;1762:20:161;;;1755:62;1603:2:107;;;;-1:-1:-1;;;;;1603:2:107;;-1:-1:-1;1603:13:107;;-1:-1:-1;1727:19:161;;1603:65:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1707:2:107;;:78;;;-1:-1:-1;;;1707:78:107;;;;;2040:21:161;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:161;;;2109:47;1742:42:107;2208:20:161;;;2201:62;1707:2:107;;;;-1:-1:-1;;;;;1707:2:107;;-1:-1:-1;1707:13:107;;-1:-1:-1;2173:19:161;;1707:78:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1795:2:107;;:79;;;-1:-1:-1;;;1795:79:107;;;;;2486:21:161;;;;2543:2;2523:18;;;2516:30;-1:-1:-1;;;2562:18:161;;;2555:48;1831:42:107;2655:20:161;;;2648:62;1795:2:107;;;;-1:-1:-1;;;;;1795:2:107;;-1:-1:-1;1795:13:107;;-1:-1:-1;2620:19:161;;1795:79:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1884:2:107;;:76;;;-1:-1:-1;;;1884:76:107;;;;;2933:21:161;;;;2990:2;2970:18;;;2963:30;-1:-1:-1;;;3009:18:161;;;3002:45;1917:42:107;3099:20:161;;;3092:62;1884:2:107;;;;-1:-1:-1;;;;;1884:2:107;;-1:-1:-1;1884:13:107;;-1:-1:-1;3064:19:161;;1884:76:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:1555::o;1364:1418::-;889:2;1979:13;:27;1975:807;;;2048:2;;:67;;;-1:-1:-1;;;2048:67:107;;;;;729:21:161;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:161;;;797:36;2072:42:107;885:20:161;;;878:62;2048:2:107;;;;-1:-1:-1;;;;;2048:2:107;;:13;;850:19:161;;2048:67:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2125:2:107;;:77;;;-1:-1:-1;;;2125:77:107;;;;;1163:21:161;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:161;;;1232:46;2159:42:107;1330:20:161;;;1323:62;2125:2:107;;;;-1:-1:-1;;;;;2125:2:107;;-1:-1:-1;2125:13:107;;-1:-1:-1;1295:19:161;;2125:77:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:2:107;;:78;;;-1:-1:-1;;;2241:78:107;;;;;2040:21:161;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:161;;;2109:47;2276:42:107;2208:20:161;;;2201:62;2241:2:107;;;;-1:-1:-1;;;;;2241:2:107;;-1:-1:-1;2241:13:107;;-1:-1:-1;2173:19:161;;2241:78:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2329:2:107;;:79;;;-1:-1:-1;;;2329:79:107;;;;;2486:21:161;;;;2543:2;2523:18;;;2516:30;-1:-1:-1;;;2562:18:161;;;2555:48;2365:42:107;2655:20:161;;;2648:62;2329:2:107;;;;-1:-1:-1;;;;;2329:2:107;;-1:-1:-1;2329:13:107;;-1:-1:-1;2620:19:161;;2329:79:107;2274:442:161;1975:807:107;809:4;2427:13;:33;2423:359;;;2502:2;;:67;;;-1:-1:-1;;;2502:67:107;;;;;729:21:161;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:161;;;797:36;2526:42:107;885:20:161;;;878:62;2502:2:107;;;;-1:-1:-1;;;;;2502:2:107;;:13;;850:19:161;;2502:67:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2579:2:107;;:77;;;-1:-1:-1;;;2579:77:107;;;;;1163:21:161;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:161;;;1232:46;2613:42:107;1330:20:161;;;1323:62;2579:2:107;;;;-1:-1:-1;;;;;2579:2:107;;-1:-1:-1;2579:13:107;;-1:-1:-1;1295:19:161;;2579:77:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2695:2:107;;:78;;;-1:-1:-1;;;2695:78:107;;;;;2040:21:161;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:161;;;2109:47;2730:42:107;2208:20:161;;;2201:62;2695:2:107;;;;-1:-1:-1;;;;;2695:2:107;;-1:-1:-1;2695:13:107;;-1:-1:-1;2173:19:161;;2695:78:107;;;;;;;;;;;;;;;;;;;2423:359;1237:1555::o;446:1487:97:-;;;;;;;;:::o;14:290:161:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:161;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:161:o;2721:439::-;446:1487:97;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806370bdc8551161005b57806370bdc85514610105578063ba414fa61461010d578063d7e37a6f14610115578063fa7626d41461011d57600080fd5b80630a9254e41461008d57806315a9c83d1461009757806325bf0d18146100bf5780633a768463146100d2575b600080fd5b61009561012a565b005b6100aa6100a5366004610b42565b6102e4565b60405190151581526020015b60405180910390f35b6100aa6100cd366004610b64565b461490565b6100ed737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100b6565b6100956102fa565b6100aa610404565b61009561052f565b6000546100aa9060ff1681565b4660381480156102e15760005460405163bf40fac160e01b81526020600482015260066024820152653bba37b5b2b760d11b6044820152620100009091046001600160a01b03169063bf40fac190606401602060405180830381865afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc9190610b92565b600680546001600160a01b0319166001600160a01b03928316908117909155600454604051919216906101ee90610b35565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610221573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617905560005460405163bf40fac160e01b81526020600480830191909152602482015263189554d160e21b6044820152620100009091049091169063bf40fac190606401602060405180830381865afa15801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c09190610b92565b600580546001600160a01b0319166001600160a01b03929092169190911790555b50565b6000824614806102f357508146145b9392505050565b4660381480156102e1576001546040805163b798d3ff60e01b81529051610384926001600160a01b03169163b798d3ff9160048083019260209291908290030181865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610b92565b6006546001600160a01b031661076d565b600154604080516307dc0d1d60e41b815290516102e1926001600160a01b031691637dc0d1d09160048083019260209291908290030181865afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190610b92565b6004546001600160a01b031661076d565b60008054610100900460ff16156104245750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561052a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916104b2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610bdf565b60408051601f19818403018152908290526104cc91610c10565b6000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b50915050808060200190518101906105269190610c2c565b9150505b919050565b4660381480156102e15760025460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505060035460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526104d260248201529116925063a9059cbb91506044016020604051808303816000875af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190610c2c565b50600154600354600554604080516000602082018190526001600160a01b0393841682840152825180830384018152606083019384905263085d6fa760e11b909352948594908416936310badf4e936106889391909216916104d291606401610c4e565b60408051808303816000875af11580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190610c97565b60055491935091506106e69083906001600160a01b031661076d565b6106f1816000610875565b6001546040516370a0823160e01b81526001600160a01b039182166004820152610768918416906370a0823190602401602060405180830381865afa15801561073e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107629190610cc5565b8261096e565b505050565b806001600160a01b0316826001600160a01b031614610871577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107f39060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161082a9190610cde565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516108619190610d22565b60405180910390a1610871610a29565b5050565b808211610871577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516108e59060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206113738339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b60608201526020810182905260008051602061137383398151915290608001610861565b808214610871577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516109df9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160008051602061137383398151915281604051610a049190610d4c565b60405180910390a1600080516020611373833981519152826040516108619190610d84565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b245760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610ac39291602001610bdf565b60408051601f1981840301815290829052610add91610c10565b6000604051808303816000865af19150503d8060008114610b1a576040519150601f19603f3d011682016040523d82523d6000602084013e610b1f565b606091505b505050505b6000805461ff001916610100179055565b6105c480610daf83390190565b60008060408385031215610b5557600080fd5b50508035926020909101359150565b600060208284031215610b7657600080fd5b5035919050565b6001600160a01b03811681146102e157600080fd5b600060208284031215610ba457600080fd5b81516102f381610b7d565b60005b83811015610bca578181015183820152602001610bb2565b83811115610bd9576000848401525b50505050565b6001600160e01b0319831681528151600090610c02816004850160208701610baf565b919091016004019392505050565b60008251610c22818460208701610baf565b9190910192915050565b600060208284031215610c3e57600080fd5b815180151581146102f357600080fd5b60018060a01b03841681528260208201526060604082015260008251806060840152610c81816080850160208701610baf565b601f01601f191691909101608001949350505050565b60008060408385031215610caa57600080fd5b8251610cb581610b7d565b6020939093015192949293505050565b600060208284031215610cd757600080fd5b5051919050565b604081526000610d0860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000610d0860408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000610d7660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000610d7660408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60c060405234801561001057600080fd5b506040516105c43803806105c483398101604081905261002f9161005e565b6001600160a01b039182166080521660a052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a0516104f46100d0600039600081816082015261012501526000818160c1015281816102c6015261033a01526104f46000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806310badf4e146100465780637dc0d1d01461007d578063b798d3ff146100bc575b600080fd5b61005961005436600461039d565b6100e3565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610074565b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b600080600080848060200190518101906100fd919061046a565b60405163988b1fa760e01b81526001600160a01b038a811660048301529294509092506000917f0000000000000000000000000000000000000000000000000000000000000000169063988b1fa790602401602060405180830381865afa15801561016c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019091906104aa565b604051630d2680e960e11b815260048101899052600085900b6024820152600160448201529091506001600160a01b03821690631a4d01d290606401600060405180830381600087803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b50505050816001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316146102315781610234565b60005b94506001600160a01b038516156102b2576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad91906104ce565b6102b4565b475b93506001600160a01b038516610363577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000009450505050610367565b5050505b935093915050565b6001600160a01b038116811461038457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156103b257600080fd5b83356103bd8161036f565b925060208401359150604084013567ffffffffffffffff808211156103e157600080fd5b818601915086601f8301126103f557600080fd5b81358181111561040757610407610387565b604051601f8201601f19908116603f0116810190838211818310171561042f5761042f610387565b8160405282815289602084870101111561044857600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561047d57600080fd5b825160ff8116811461048e57600080fd5b602084015190925061049f8161036f565b809150509250929050565b6000602082840312156104bc57600080fd5b81516104c78161036f565b9392505050565b6000602082840312156104e057600080fd5b505191905056fea164736f6c634300080a000ab2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a164736f6c634300080a000a",
    "sourceMap": "446:1487:97:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:267;;;:::i;:::-;;2965:134:107;;;;;;:::i;:::-;;:::i;:::-;;;432:14:161;;425:22;407:41;;395:2;380:18;2965:134:107;;;;;;;;2864:97;;;;;;:::i;:::-;2936:13;:20;;2864:97;691:40;;1671:64:125;691:40:107;;;;;-1:-1:-1;;;;;820:32:161;;;802:51;;790:2;775:18;691:40:107;644:215:161;1203:230:97;;;:::i;1819:584:125:-;;;:::i;1480:451:97:-;;;:::i;1572:26:125:-;;;;;;;;;932:267:97;2936:13:107;767:2;2936:20;2835:3;2831:25;;;1018:2:97::1;::::0;:23:::1;::::0;-1:-1:-1;;;1018:23:97;;1066:2:161;1018:23:97::1;::::0;::::1;1048:21:161::0;1105:1;1085:18;;;1078:29;-1:-1:-1;;;1123:18:161;;;1116:36;1018:2:97;;;::::1;-1:-1:-1::0;;;;;1018:2:97::1;::::0;:13:::1;::::0;1169:18:161;;1018:23:97::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;996:6;:47:::0;;-1:-1:-1;;;;;;996:47:97::1;-1:-1:-1::0;;;;;996:47:97;;::::1;::::0;;::::1;::::0;;;1107:33:::1;::::0;1062:79:::1;::::0;996:47;;1107:33:::1;::::0;1062:79:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;1885:15:161;;;1867:34;;1937:15;;1932:2;1917:18;;1910:43;1817:2;1802:18;1062:79:97::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1049:10:97::1;:92:::0;;-1:-1:-1;;;;;;1049:92:97::1;-1:-1:-1::0;;;;;1049:92:97;;::::1;;::::0;;-1:-1:-1;1172:2:97;:21:::1;::::0;-1:-1:-1;;;1172:21:97;;2166:2:161;1172:21:97::1;::::0;;::::1;2148::161::0;;;;2185:18;;;2178:29;-1:-1:-1;;;2223:18:161;;;2216:34;1172:2:97;;;::::1;::::0;;::::1;::::0;:13:::1;::::0;2267:18:161;;1172:21:97::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1147:4;:47:::0;;-1:-1:-1;;;;;;1147:47:97::1;-1:-1:-1::0;;;;;1147:47:97;;;::::1;::::0;;;::::1;::::0;;2831:25:107;932:267:97;:::o;2965:134:107:-;3031:4;3067:3;3050:13;:20;:44;;;;3091:3;3074:13;:20;3050:44;3043:51;2965:134;-1:-1:-1;;;2965:134:107:o;1203:230:97:-;2936:13:107;767:2;2936:20;2835:3;2831:25;;;1300:10:97::1;::::0;:21:::1;::::0;;-1:-1:-1;;;1300:21:97;;;;1283:57:::1;::::0;-1:-1:-1;;;;;1300:10:97::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:10;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1332:6;::::0;-1:-1:-1;;;;;1332:6:97::1;1283:8;:57::i;:::-;1363:10;::::0;:19:::1;::::0;;-1:-1:-1;;;1363:19:97;;;;1346:82:::1;::::0;-1:-1:-1;;;;;1363:10:97::1;::::0;:17:::1;::::0;:19:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:10;:19:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1393:33;::::0;-1:-1:-1;;;;;1393:33:97::1;1346:8;:82::i;1819:584:125:-:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:125;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;3039:51:161;;;-1:-1:-1;;;3106:18:161;;;3099:34;2196:43:125;;;;;;;;;3012:18:161;;;2196:43:125;;;-1:-1:-1;;1671:64:125;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:125;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:125:o;1480:451:97:-;2936:13:107;767:2;2936:20;2835:3;2831:25;;;1563:12:97::1;::::0;1554:22:::1;::::0;-1:-1:-1;;;1554:22:97;;-1:-1:-1;;;;;1563:12:97;;::::1;1554:22;::::0;::::1;802:51:161::0;1671:64:125;;1554:8:97::1;::::0;775:18:161;;1554:22:97::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1582:7:97::1;::::0;;1607:10;1582:43:::1;::::0;-1:-1:-1;;;1582:43:97;;-1:-1:-1;;;;;1607:10:97;;::::1;1582:43;::::0;::::1;3039:51:161::0;1620:4:97::1;3106:18:161::0;;;3099:34;1582:7:97;::::1;::::0;-1:-1:-1;1582:16:97::1;::::0;-1:-1:-1;3012:18:161;;1582:43:97::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1688:10:97::1;::::0;1713:7:::1;::::0;1761:4:::1;::::0;1740:26:::1;::::0;;1633:29:::1;1740:26;::::0;::::1;5039:36:161::0;;;-1:-1:-1;;;;;1761:4:97;;::::1;5091:18:161::0;;;5084:60;1740:26:97;;;;;;;;;5012:18:161;;;1740:26:97;;;;-1:-1:-1;;;1688:84:97;;;1633:29;;;1688:10;;::::1;::::0;:17:::1;::::0;:84:::1;::::0;1713:7;;;::::1;::::0;1728:4:::1;::::0;1688:84;;::::1;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1817:4;::::0;1632:140;;-1:-1:-1;1632:140:97;-1:-1:-1;1778:45:97::1;::::0;1632:140;;-1:-1:-1;;;;;1817:4:97::1;1778:8;:45::i;:::-;1829:25;1838:12;1852:1;1829:8;:25::i;:::-;1899:10;::::0;1869:42:::1;::::0;-1:-1:-1;;;1869:42:97;;-1:-1:-1;;;;;1899:10:97;;::::1;1869:42;::::0;::::1;802:51:161::0;1860:66:97::1;::::0;1869:21;::::1;::::0;::::1;::::0;775:18:161;;1869:42:97::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1913:12;1860:8;:66::i;:::-;1548:383;;1480:451:::0;:::o;3615:277:125:-;3683:1;-1:-1:-1;;;;;3678:6:125;:1;-1:-1:-1;;;;;3678:6:125;;3674:212;;3705:44;;;;;6484:2:161;6466:21;;;6523:2;6503:18;;;6496:30;6562:34;6557:2;6542:18;;6535:62;-1:-1:-1;;;6628:2:161;6613:18;;6606:35;6673:3;6658:19;;6282:401;3705:44:125;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;:::-;3615:277;;:::o;6756:259::-;6818:1;6813;:6;6809:200;;6840:40;;;;;7976:2:161;7958:21;;;8015:2;7995:18;;;7988:30;8054:34;8049:2;8034:18;;8027:62;-1:-1:-1;;;8120:2:161;8105:18;;8098:31;8161:3;8146:19;;7774:397;6840:40:125;;;;;;;;6899:30;;;8388:21:161;;;8445:1;8425:18;;;8418:29;-1:-1:-1;;;8478:2:161;8463:18;;8456:39;8562:4;8547:20;;8540:36;;;6899:30:125;;-1:-1:-1;;;;;;;;;;;6899:30:125;;;;8527:3:161;6899:30:125;;;6948;;;8799:21:161;;;8856:1;8836:18;;;8829:29;;;;-1:-1:-1;;;8889:2:161;8874:18;;8867:39;8973:4;8958:20;;8951:36;;;-1:-1:-1;;;;;;;;;;;6948:30:125;8938:3:161;8923:19;6948:30:125;8587:406:161;5202:262:125;5264:1;5259;:6;5255:203;;5286:41;;;;;9200:2:161;9182:21;;;9239:2;9219:18;;;9212:30;9278:34;9273:2;9258:18;;9251:62;-1:-1:-1;;;9344:2:161;9329:18;;9322:32;9386:3;9371:19;;8998:398;5286:41:125;;;;;;;;-1:-1:-1;;;;;;;;;;;5375:1:125;5346:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5425:1:125;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;10309:51:161;;;-1:-1:-1;;;10376:18:161;;;10369:34;;;;2705:4:125;10419:18:161;;;10412:34;2482:11:125;;1671:64;2579:43;;10282:18:161;;2645:67:125;;;-1:-1:-1;;2645:67:125;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:125;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:125;2813:7;:14;;-1:-1:-1;;2813:14:125;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;14:248:161:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:161;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:161:o;459:180::-;518:6;571:2;559:9;550:7;546:23;542:32;539:52;;;587:1;584;577:12;539:52;-1:-1:-1;610:23:161;;459:180;-1:-1:-1;459:180:161:o;1198:131::-;-1:-1:-1;;;;;1273:31:161;;1263:42;;1253:70;;1319:1;1316;1309:12;1334:251;1404:6;1457:2;1445:9;1436:7;1432:23;1428:32;1425:52;;;1473:1;1470;1463:12;1425:52;1505:9;1499:16;1524:31;1549:5;1524:31;:::i;3144:258::-;3216:1;3226:113;3240:6;3237:1;3234:13;3226:113;;;3316:11;;;3310:18;3297:11;;;3290:39;3262:2;3255:10;3226:113;;;3357:6;3354:1;3351:13;3348:48;;;3392:1;3383:6;3378:3;3374:16;3367:27;3348:48;;3144:258;;;:::o;3407:371::-;-1:-1:-1;;;;;;3592:33:161;;3580:46;;3649:13;;3562:3;;3671:61;3649:13;3721:1;3712:11;;3705:4;3693:17;;3671:61;:::i;:::-;3752:16;;;;3770:1;3748:24;;3407:371;-1:-1:-1;;;3407:371:161:o;3783:274::-;3912:3;3950:6;3944:13;3966:53;4012:6;4007:3;4000:4;3992:6;3988:17;3966:53;:::i;:::-;4035:16;;;;;3783:274;-1:-1:-1;;3783:274:161:o;4062:277::-;4129:6;4182:2;4170:9;4161:7;4157:23;4153:32;4150:52;;;4198:1;4195;4188:12;4150:52;4230:9;4224:16;4283:5;4276:13;4269:21;4262:5;4259:32;4249:60;;4305:1;4302;4295:12;5155:589;5425:1;5421;5416:3;5412:11;5408:19;5400:6;5396:32;5385:9;5378:51;5465:6;5460:2;5449:9;5445:18;5438:34;5508:2;5503;5492:9;5488:18;5481:30;5359:4;5540:6;5534:13;5583:6;5578:2;5567:9;5563:18;5556:34;5599:67;5659:6;5653:3;5642:9;5638:19;5633:2;5625:6;5621:15;5599:67;:::i;:::-;5727:2;5706:15;-1:-1:-1;;5702:29:161;5687:45;;;;5734:3;5683:55;;5155:589;-1:-1:-1;;;;5155:589:161:o;5749:339::-;5855:6;5863;5916:2;5904:9;5895:7;5891:23;5887:32;5884:52;;;5932:1;5929;5922:12;5884:52;5964:9;5958:16;5983:31;6008:5;5983:31;:::i;:::-;6078:2;6063:18;;;;6057:25;6033:5;;6057:25;;-1:-1:-1;;;5749:339:161:o;6093:184::-;6163:6;6216:2;6204:9;6195:7;6191:23;6187:32;6184:52;;;6232:1;6229;6222:12;6184:52;-1:-1:-1;6255:16:161;;6093:184;-1:-1:-1;6093:184:161:o;6852:374::-;7082:2;7071:9;7064:21;7045:4;7102:49;7147:2;7136:9;7132:18;6765:2;6753:15;;-1:-1:-1;;;6793:4:161;6784:14;;6777:36;6838:2;6829:12;;6688:159;7102:49;-1:-1:-1;;;;;7187:32:161;;;;7182:2;7167:18;;;;7160:60;;;;-1:-1:-1;7094:57:161;6852:374::o;7395:::-;7625:2;7614:9;7607:21;7588:4;7645:49;7690:2;7679:9;7675:18;7308:2;7296:15;;-1:-1:-1;;;7336:4:161;7327:14;;7320:36;7381:2;7372:12;;7231:159;9401:348;9631:2;9620:9;9613:21;9594:4;9651:49;9696:2;9685:9;9681:18;6765:2;6753:15;;-1:-1:-1;;;6793:4:161;6784:14;;6777:36;6838:2;6829:12;;6688:159;9651:49;9643:57;;9736:6;9731:2;9720:9;9716:18;9709:34;9401:348;;;;:::o;9754:::-;9984:2;9973:9;9966:21;9947:4;10004:49;10049:2;10038:9;10034:18;7308:2;7296:15;;-1:-1:-1;;;7336:4:161;7327:14;;7320:36;7381:2;7372:12;;7231:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/CurveLpTokenLiquidatorNoRegistryTest.t.sol",
    "id": 39379,
    "exportedSymbols": {
      "AddressUpgradeable": [
        74813
      ],
      "AddressesProvider": [
        50448
      ],
      "AggregatorV3Interface": [
        24644
      ],
      "BasePriceOracle": [
        27982
      ],
      "BaseTest": [
        44968
      ],
      "ChainlinkPriceOracleV2": [
        28858
      ],
      "ClonesUpgradeable": [
        73490
      ],
      "ContextUpgradeable": [
        74855
      ],
      "CurveLpTokenLiquidatorNoRegistry": [
        27588
      ],
      "CurveLpTokenLiquidatorNoRegistryTest": [
        39378
      ],
      "CurveLpTokenPriceOracleNoRegistry": [
        29274
      ],
      "DSTest": [
        52915
      ],
      "ERC20Upgradeable": [
        74243
      ],
      "ICErc20": [
        24668
      ],
      "ICToken": [
        24817
      ],
      "ICurvePool": [
        25114
      ],
      "IERC20MetadataUpgradeable": [
        74346
      ],
      "IERC20Upgradeable": [
        74321
      ],
      "IPriceOracle": [
        25007
      ],
      "ISynthereumDeployment": [
        25257
      ],
      "ISynthereumFinder": [
        25277
      ],
      "ISynthereumLiquidityPool": [
        25510
      ],
      "ISynthereumLiquidityPoolGeneral": [
        25516
      ],
      "IUniswapV2Factory": [
        26326
      ],
      "IUniswapV2Pair": [
        26568
      ],
      "IW_NATIVE": [
        51128
      ],
      "Initializable": [
        73632
      ],
      "MasterPriceOracle": [
        28436
      ],
      "OwnableUpgradeable": [
        73410
      ],
      "UniswapTwapPriceOracleV2": [
        31009
      ],
      "UniswapTwapPriceOracleV2Factory": [
        31160
      ],
      "UniswapTwapPriceOracleV2Root": [
        32114
      ],
      "Vm": [
        56425
      ],
      "WETH": [
        76417
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1895:97",
    "nodes": [
      {
        "id": 39197,
        "nodeType": "PragmaDirective",
        "src": "39:24:97",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 39198,
        "nodeType": "ImportDirective",
        "src": "65:26:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 52916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39200,
        "nodeType": "ImportDirective",
        "src": "93:47:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/tokens/WETH.sol",
        "file": "solmate/tokens/WETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 76418,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39199,
              "name": "WETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "102:4:97",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39201,
        "nodeType": "ImportDirective",
        "src": "142:88:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 74322,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39203,
        "nodeType": "ImportDirective",
        "src": "231:103:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/liquidators/CurveLpTokenLiquidatorNoRegistry.sol",
        "file": "../liquidators/CurveLpTokenLiquidatorNoRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 27589,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39202,
              "name": "CurveLpTokenLiquidatorNoRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "240:32:97",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39204,
        "nodeType": "ImportDirective",
        "src": "335:32:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/utils/IW_NATIVE.sol",
        "file": "../utils/IW_NATIVE.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 51129,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39205,
        "nodeType": "ImportDirective",
        "src": "368:42:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/external/curve/ICurvePool.sol",
        "file": "../external/curve/ICurvePool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 25115,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39206,
        "nodeType": "ImportDirective",
        "src": "411:33:97",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/config/BaseTest.t.sol",
        "file": "./config/BaseTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39379,
        "sourceUnit": 44969,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39378,
        "nodeType": "ContractDefinition",
        "src": "446:1487:97",
        "nodes": [
          {
            "id": 39211,
            "nodeType": "VariableDeclaration",
            "src": "508:51:97",
            "constant": false,
            "mutability": "mutable",
            "name": "liquidator",
            "nameLocation": "549:10:97",
            "scope": 39378,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
              "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
            },
            "typeName": {
              "id": 39210,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39209,
                "name": "CurveLpTokenLiquidatorNoRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27588,
                "src": "508:32:97"
              },
              "referencedDeclaration": 27588,
              "src": "508:32:97",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 39214,
            "nodeType": "VariableDeclaration",
            "src": "564:73:97",
            "constant": false,
            "mutability": "mutable",
            "name": "lpTokenWhale",
            "nameLocation": "580:12:97",
            "scope": 39378,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39212,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "564:7:97",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838443734303843326233313534463966393766633664643234636433363134333930386431453532",
              "id": 39213,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "595:42:97",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8D7408C2b3154F9f97fc6dd24cd36143908d1E52"
            },
            "visibility": "private"
          },
          {
            "id": 39220,
            "nodeType": "VariableDeclaration",
            "src": "641:89:97",
            "constant": false,
            "mutability": "mutable",
            "name": "lpToken",
            "nameLocation": "659:7:97",
            "scope": 39378,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "id": 39216,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39215,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74321,
                "src": "641:17:97"
              },
              "referencedDeclaration": 74321,
              "src": "641:17:97",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861463464453845383732313331414533323843653231443930394337343730356433416166343532",
                  "id": 39218,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "687:42:97",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaF4dE8E872131AE328Ce21D909C74705d3Aaf452"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39217,
                "name": "IERC20Upgradeable",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 74321,
                "src": "669:17:97",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$74321_$",
                  "typeString": "type(contract IERC20Upgradeable)"
                }
              },
              "id": 39219,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "669:61:97",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39226,
            "nodeType": "VariableDeclaration",
            "src": "734:151:97",
            "constant": false,
            "mutability": "mutable",
            "name": "curveLPTokenPriceOracleNoRegistry",
            "nameLocation": "768:33:97",
            "scope": 39378,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
              "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
            },
            "typeName": {
              "id": 39222,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39221,
                "name": "CurveLpTokenPriceOracleNoRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29274,
                "src": "734:33:97"
              },
              "referencedDeclaration": 29274,
              "src": "734:33:97",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834346561376241423931323144393736333062354442304639326141643735634135413430316133",
                  "id": 39224,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "842:42:97",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x44ea7bAB9121D97630b5DB0F92aAd75cA5A401a3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39223,
                "name": "CurveLpTokenPriceOracleNoRegistry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 29274,
                "src": "808:33:97",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274_$",
                  "typeString": "type(contract CurveLpTokenPriceOracleNoRegistry)"
                }
              },
              "id": 39225,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "808:77:97",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39229,
            "nodeType": "VariableDeclaration",
            "src": "890:22:97",
            "constant": false,
            "mutability": "mutable",
            "name": "bUSD",
            "nameLocation": "908:4:97",
            "scope": 39378,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "id": 39228,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39227,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74321,
                "src": "890:17:97"
              },
              "referencedDeclaration": 74321,
              "src": "890:17:97",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39232,
            "nodeType": "VariableDeclaration",
            "src": "916:11:97",
            "constant": false,
            "mutability": "mutable",
            "name": "wtoken",
            "nameLocation": "921:6:97",
            "scope": 39378,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WETH_$76417",
              "typeString": "contract WETH"
            },
            "typeName": {
              "id": 39231,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39230,
                "name": "WETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76417,
                "src": "916:4:97"
              },
              "referencedDeclaration": 76417,
              "src": "916:4:97",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WETH_$76417",
                "typeString": "contract WETH"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39271,
            "nodeType": "FunctionDefinition",
            "src": "932:267:97",
            "body": {
              "id": 39270,
              "nodeType": "Block",
              "src": "990:209:97",
              "statements": [
                {
                  "expression": {
                    "id": 39250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39240,
                      "name": "wtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39232,
                      "src": "996:6:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$76417",
                        "typeString": "contract WETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "77746f6b656e",
                                  "id": 39246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1032:8:97",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_60d98e3d8c5994f556c2f8462e2c0bcf0eeea9cb2f651e78d32401db94d2da19",
                                    "typeString": "literal_string \"wtoken\""
                                  },
                                  "value": "wtoken"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_60d98e3d8c5994f556c2f8462e2c0bcf0eeea9cb2f651e78d32401db94d2da19",
                                    "typeString": "literal_string \"wtoken\""
                                  }
                                ],
                                "expression": {
                                  "id": 39244,
                                  "name": "ap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44786,
                                  "src": "1018:2:97",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AddressesProvider_$50448",
                                    "typeString": "contract AddressesProvider"
                                  }
                                },
                                "id": 39245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50447,
                                "src": "1018:13:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (string memory) view external returns (address)"
                                }
                              },
                              "id": 39247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1018:23:97",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 39243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1010:8:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 39242,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1010:8:97",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 39248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1010:32:97",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 39241,
                        "name": "WETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76417,
                        "src": "1005:4:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WETH_$76417_$",
                          "typeString": "type(contract WETH)"
                        }
                      },
                      "id": 39249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1005:38:97",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$76417",
                        "typeString": "contract WETH"
                      }
                    },
                    "src": "996:47:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WETH_$76417",
                      "typeString": "contract WETH"
                    }
                  },
                  "id": 39251,
                  "nodeType": "ExpressionStatement",
                  "src": "996:47:97"
                },
                {
                  "expression": {
                    "id": 39259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39252,
                      "name": "liquidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39211,
                      "src": "1049:10:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                        "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 39256,
                          "name": "wtoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39232,
                          "src": "1099:6:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WETH_$76417",
                            "typeString": "contract WETH"
                          }
                        },
                        {
                          "id": 39257,
                          "name": "curveLPTokenPriceOracleNoRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39226,
                          "src": "1107:33:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                            "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WETH_$76417",
                            "typeString": "contract WETH"
                          },
                          {
                            "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                            "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
                          }
                        ],
                        "id": 39255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1062:36:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_WETH_$76417_$_t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274_$returns$_t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588_$",
                          "typeString": "function (contract WETH,contract CurveLpTokenPriceOracleNoRegistry) returns (contract CurveLpTokenLiquidatorNoRegistry)"
                        },
                        "typeName": {
                          "id": 39254,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 39253,
                            "name": "CurveLpTokenLiquidatorNoRegistry",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27588,
                            "src": "1066:32:97"
                          },
                          "referencedDeclaration": 27588,
                          "src": "1066:32:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                            "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                          }
                        }
                      },
                      "id": 39258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1062:79:97",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                        "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                      }
                    },
                    "src": "1049:92:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                      "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                    }
                  },
                  "id": 39260,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:92:97"
                },
                {
                  "expression": {
                    "id": 39268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39261,
                      "name": "bUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39229,
                      "src": "1147:4:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62555344",
                              "id": 39265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1186:6:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa0d6d5c19578f1d1dd9cd27a89617c8441da8f97549a26381883d5cb8aea56a",
                                "typeString": "literal_string \"bUSD\""
                              },
                              "value": "bUSD"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fa0d6d5c19578f1d1dd9cd27a89617c8441da8f97549a26381883d5cb8aea56a",
                                "typeString": "literal_string \"bUSD\""
                              }
                            ],
                            "expression": {
                              "id": 39263,
                              "name": "ap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44786,
                              "src": "1172:2:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AddressesProvider_$50448",
                                "typeString": "contract AddressesProvider"
                              }
                            },
                            "id": 39264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50447,
                            "src": "1172:13:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 39266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1172:21:97",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39262,
                        "name": "IERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74321,
                        "src": "1154:17:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$74321_$",
                          "typeString": "type(contract IERC20Upgradeable)"
                        }
                      },
                      "id": 39267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1154:40:97",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "1147:47:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 39269,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:47:97"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 39236,
                        "name": "BSC_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44770,
                        "src": "976:11:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39235,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "966:9:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 39237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:22:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 39238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39234,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "956:9:97"
                },
                "nodeType": "ModifierInvocation",
                "src": "956:33:97"
              }
            ],
            "name": "setUp",
            "nameLocation": "941:5:97",
            "parameters": {
              "id": 39233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:97"
            },
            "returnParameters": {
              "id": 39239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:97"
            },
            "scope": 39378,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39306,
            "nodeType": "FunctionDefinition",
            "src": "1203:230:97",
            "body": {
              "id": 39305,
              "nodeType": "Block",
              "src": "1277:156:97",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39282,
                                "name": "liquidator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39211,
                                "src": "1300:10:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                                  "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                                }
                              },
                              "id": 39283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "W_NATIVE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27441,
                              "src": "1300:19:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_WETH_$76417_$",
                                "typeString": "function () view external returns (contract WETH)"
                              }
                            },
                            "id": 39284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1300:21:97",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$76417",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$76417",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 39281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1292:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39280,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1292:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1292:30:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 39288,
                            "name": "wtoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39232,
                            "src": "1332:6:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$76417",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$76417",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 39287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1324:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1324:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1324:15:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39279,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "1283:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 39290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:57:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39291,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:57:97"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39295,
                                "name": "liquidator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39211,
                                "src": "1363:10:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                                  "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                                }
                              },
                              "id": 39296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27444,
                              "src": "1363:17:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274_$",
                                "typeString": "function () view external returns (contract CurveLpTokenPriceOracleNoRegistry)"
                              }
                            },
                            "id": 39297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1363:19:97",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                              "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                              "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
                            }
                          ],
                          "id": 39294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1355:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1355:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:28:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 39301,
                            "name": "curveLPTokenPriceOracleNoRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39226,
                            "src": "1393:33:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                              "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveLpTokenPriceOracleNoRegistry_$29274",
                              "typeString": "contract CurveLpTokenPriceOracleNoRegistry"
                            }
                          ],
                          "id": 39300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1385:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1385:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1385:42:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39292,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "1346:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 39303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:82:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39304,
                  "nodeType": "ExpressionStatement",
                  "src": "1346:82:97"
                }
              ]
            },
            "functionSelector": "70bdc855",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 39275,
                        "name": "BSC_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44770,
                        "src": "1263:11:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39274,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "1253:9:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 39276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:22:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 39277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39273,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "1243:9:97"
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:33:97"
              }
            ],
            "name": "testInitializedValues",
            "nameLocation": "1212:21:97",
            "parameters": {
              "id": 39272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:2:97"
            },
            "returnParameters": {
              "id": 39278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:97"
            },
            "scope": 39378,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39377,
            "nodeType": "FunctionDefinition",
            "src": "1480:451:97",
            "body": {
              "id": 39376,
              "nodeType": "Block",
              "src": "1548:383:97",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39317,
                        "name": "lpTokenWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39214,
                        "src": "1563:12:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 39314,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44767,
                        "src": "1554:2:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56312,
                      "src": "1554:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 39318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:22:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39319,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:22:97"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39325,
                            "name": "liquidator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39211,
                            "src": "1607:10:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                              "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                              "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                            }
                          ],
                          "id": 39324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1599:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1599:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1599:19:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31323334",
                        "id": 39327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:4:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1234_by_1",
                          "typeString": "int_const 1234"
                        },
                        "value": "1234"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1234_by_1",
                          "typeString": "int_const 1234"
                        }
                      ],
                      "expression": {
                        "id": 39320,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39220,
                        "src": "1582:7:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 39322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74288,
                      "src": "1582:16:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 39328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:43:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39329,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:43:97"
                },
                {
                  "assignments": [
                    39332,
                    39334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39332,
                      "mutability": "mutable",
                      "name": "outputToken",
                      "nameLocation": "1651:11:97",
                      "nodeType": "VariableDeclaration",
                      "scope": 39376,
                      "src": "1633:29:97",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                        "typeString": "contract IERC20Upgradeable"
                      },
                      "typeName": {
                        "id": 39331,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 39330,
                          "name": "IERC20Upgradeable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 74321,
                          "src": "1633:17:97"
                        },
                        "referencedDeclaration": 74321,
                        "src": "1633:17:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39334,
                      "mutability": "mutable",
                      "name": "outputAmount",
                      "nameLocation": "1672:12:97",
                      "nodeType": "VariableDeclaration",
                      "scope": 39376,
                      "src": "1664:20:97",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1664:7:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39348,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 39337,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39220,
                        "src": "1713:7:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      {
                        "hexValue": "31323334",
                        "id": 39338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1728:4:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1234_by_1",
                          "typeString": "int_const 1234"
                        },
                        "value": "1234"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 39343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1757:1:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 39342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1751:5:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 39341,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "1751:5:97",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 39344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1751:8:97",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 39345,
                            "name": "bUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39229,
                            "src": "1761:4:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "expression": {
                            "id": 39339,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1740:3:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 39340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1740:10:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 39346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1740:26:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                          "typeString": "contract IERC20Upgradeable"
                        },
                        {
                          "typeIdentifier": "t_rational_1234_by_1",
                          "typeString": "int_const 1234"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 39335,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39211,
                        "src": "1688:10:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                          "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                        }
                      },
                      "id": 39336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27587,
                      "src": "1688:17:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Upgradeable_$74321_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_contract$_IERC20Upgradeable_$74321_$_t_uint256_$",
                        "typeString": "function (contract IERC20Upgradeable,uint256,bytes memory) external returns (contract IERC20Upgradeable,uint256)"
                      }
                    },
                    "id": 39347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:84:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20Upgradeable_$74321_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20Upgradeable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1632:140:97"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39352,
                            "name": "outputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39332,
                            "src": "1795:11:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 39351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1787:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39350,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1787:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1787:20:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 39356,
                            "name": "bUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39229,
                            "src": "1817:4:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 39355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1809:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39354,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1809:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1809:13:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39349,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "1778:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 39358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:45:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39359,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:45:97"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39361,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39334,
                        "src": "1838:12:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 39362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:1:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 39360,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51822,
                        51847,
                        51877,
                        51902
                      ],
                      "referencedDeclaration": 51822,
                      "src": "1829:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:25:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39364,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:25:97"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 39370,
                                "name": "liquidator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39211,
                                "src": "1899:10:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                                  "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CurveLpTokenLiquidatorNoRegistry_$27588",
                                  "typeString": "contract CurveLpTokenLiquidatorNoRegistry"
                                }
                              ],
                              "id": 39369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1891:7:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 39368,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1891:7:97",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 39371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1891:19:97",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 39366,
                            "name": "outputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39332,
                            "src": "1869:11:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$74321",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          },
                          "id": 39367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74278,
                          "src": "1869:21:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 39372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:42:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 39373,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39334,
                        "src": "1913:12:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39365,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "1860:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:66:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39375,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:66:97"
                }
              ]
            },
            "functionSelector": "d7e37a6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 39310,
                        "name": "BSC_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44770,
                        "src": "1534:11:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39309,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "1524:9:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 39311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:22:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 39312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39308,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "1514:9:97"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:33:97"
              }
            ],
            "name": "testRedeemToken",
            "nameLocation": "1489:15:97",
            "parameters": {
              "id": 39307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:2:97"
            },
            "returnParameters": {
              "id": 39313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:97"
            },
            "scope": 39378,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39207,
              "name": "BaseTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44968,
              "src": "495:8:97"
            },
            "id": 39208,
            "nodeType": "InheritanceSpecifier",
            "src": "495:8:97"
          }
        ],
        "canonicalName": "CurveLpTokenLiquidatorNoRegistryTest",
        "contractDependencies": [
          27588,
          50448
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39378,
          44968,
          52915
        ],
        "name": "CurveLpTokenLiquidatorNoRegistryTest",
        "nameLocation": "455:36:97",
        "scope": 39379,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}
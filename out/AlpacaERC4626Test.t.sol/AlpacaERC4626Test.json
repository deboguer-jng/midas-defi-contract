{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "439:2448:89:-:0;;;1572:26:125;;;-1:-1:-1;;1572:26:125;1594:4;1572:26;;;628:6:89;604:30;;439:2448;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "439:2448:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:321;;;:::i;:::-;;480:40;;1671:64:125;480:40:89;;;;;-1:-1:-1;;;;;190:32:161;;;172:51;;160:2;145:18;480:40:89;;;;;;;;964:291;;;:::i;1463:523::-;;;:::i;1819:584:125:-;;;:::i;:::-;;;399:14:161;;392:22;374:41;;362:2;347:18;1819:584:125;234:187:161;1259:200:89;;;:::i;1990:895::-;;;:::i;1572:26:125:-;;;;;;;;;639:321:89;715:2;681:37;;;;;:::i;:::-;764:2:161;746:21;;;803:1;783:18;;;776:29;-1:-1:-1;;;836:3:161;821:19;;814:40;892:3;885:4;870:20;;863:33;;;933:1;912:19;;;905:30;-1:-1:-1;;;966:3:161;951:19;;944:34;1062:4;1050:17;;;-1:-1:-1;1030:18:161;;1023:45;1010:3;995:19;681:37:89;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:9:89;:49;;-1:-1:-1;;;;;;669:49:89;-1:-1:-1;;;;;669:49:89;;;;;;;;;736:56;;789:2;;736:56;;;:::i;:::-;-1:-1:-1;;;;;1445:32:161;;;1427:51;;1514:3;1509:2;1494:18;;1487:31;;;1555:1;1534:19;;;1527:30;-1:-1:-1;;;1465:3:161;1573:19;;1566:40;1642:3;1637:2;1622:18;;1615:31;;;1683:1;1662:19;;;1655:30;-1:-1:-1;;;1716:3:161;1701:19;;1694:33;1811:4;1799:17;-1:-1:-1;1779:18:161;;1772:45;1759:3;1744:19;736:56:89;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;724:9:89;:68;;-1:-1:-1;;;;;;724:68:89;-1:-1:-1;;;;;724:68:89;;;;;;;;;-1:-1:-1;839:9:89;814:141;;839:9;;;906:42;;814:141;;;:::i;:::-;-1:-1:-1;;;;;2146:15:161;;;2128:34;;2198:15;;;2193:2;2178:18;;2171:43;2250:15;;;2245:2;2230:18;;2223:43;2078:2;2063:18;814:141:89;;;;;;;;;;;;;;;;;;;;;;;798:13;;:157;;;;;-1:-1:-1;;;;;798:157:89;;;;;-1:-1:-1;;;;;798:157:89;;;;;;639:321::o;964:291::-;1010:55;1019:13;;;;;;;;;-1:-1:-1;;;;;1019:13:89;-1:-1:-1;;;;;1019:18:89;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1019:20:89;;;;;;;;;;;;:::i;:::-;1010:55;;;;;;;;;;;;;-1:-1:-1;;;1010:55:89;;;:8;:55::i;:::-;1071:41;1080:13;;;;;;;;;-1:-1:-1;;;;;1080:13:89;-1:-1:-1;;;;;1080:20:89;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1080:22:89;;;;;;;;;;;;:::i;:::-;1071:41;;;;;;;;;;;;;-1:-1:-1;;;1071:41:89;;;:8;:41::i;:::-;1118:60;1135:13;;;;;;;;;-1:-1:-1;;;;;1135:13:89;-1:-1:-1;;;;;1135:19:89;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1167:9;;-1:-1:-1;;;;;1167:9:89;1118:8;:60::i;:::-;1184:66;1201:13;;;;;;;;;-1:-1:-1;;;;;1201:13:89;-1:-1:-1;;;;;1201:25:89;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1239:9;;-1:-1:-1;;;;;1239:9:89;1184:8;:66::i;:::-;964:291::o;1463:523::-;1499:9;:7;:9::i;:::-;1567;;:34;;-1:-1:-1;;;1567:34:89;;1595:4;1567:34;;;172:51:161;1558:47:89;;-1:-1:-1;;;;;1567:9:89;;:19;;145:18:161;;1567:34:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1603:1;1558:8;:47::i;:::-;1620:9;;1648;;1620:39;;-1:-1:-1;;;1620:39:89;;-1:-1:-1;;;;;1648:9:89;;;1620:39;;;172:51:161;1611:64:89;;1620:9;;;;;:19;;145:18:161;;1620:39:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1661:13;;1611:8;:64::i;:::-;1726:52;1735:13;;;;;;;;;-1:-1:-1;;;;;1735:13:89;-1:-1:-1;;;;;1735:25:89;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1726:52;1793:13;;:48;;-1:-1:-1;;;1793:48:89;;1835:4;1793:48;;;172:51:161;1784:73:89;;1793:13;;;-1:-1:-1;;;;;1793:13:89;;:33;;145:18:161;;1793:48:89;14:215:161;1784:73:89;1927:13;;:38;;-1:-1:-1;;;1927:38:89;;1959:4;1927:38;;;172:51:161;1918:63:89;;1927:13;;;-1:-1:-1;;;;;1927:13:89;;:23;;145:18:161;;1927:38:89;14:215:161;1819:584:125;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:125;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4838:51:161;;;-1:-1:-1;;;4905:18:161;;;4898:34;2196:43:125;;;;;;;;;4811:18:161;;;2196:43:125;;;-1:-1:-1;;1671:64:125;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:125;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:125:o;1259:200:89:-;1291:9;;1321:13;;1291:44;;-1:-1:-1;;;1291:44:89;;1314:4;1291:44;;;4838:51:161;4905:18;;;4898:34;;;;-1:-1:-1;;;;;1291:9:89;;;;:14;;4811:18:161;;1291:44:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1341:9:89;;;1367:13;1383;;1341:56;;-1:-1:-1;;;1341:56:89;;-1:-1:-1;;;;;1367:13:89;;;;;;1341:56;;;4838:51:161;4905:18;;;4898:34;;;;1341:9:89;;;-1:-1:-1;1341:17:89;;-1:-1:-1;4811:18:161;;1341:56:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1403:13:89;;1425;;1403:51;;-1:-1:-1;;;1403:51:89;;;;;6333:25:161;;;;1448:4:89;6374:18:161;;;6367:60;1403:13:89;;;;-1:-1:-1;;;;;1403:13:89;;:21;;6306:18:161;;1403:51:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1259:200::o;1990:895::-;2027:9;:7;:9::i;:::-;2119:22;2160:4;2144:13;;:20;;;;:::i;:::-;2170:13;;:68;;-1:-1:-1;;;2170:68:89;;;;;6867:25:161;;;2217:4:89;6946:18:161;;;6939:43;;;6998:18;;;6991:43;2119:45:89;;-1:-1:-1;2170:13:89;;;-1:-1:-1;;;;;2170:13:89;;:22;;6840:18:161;;2170:68:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2298:9:89;;:34;;-1:-1:-1;;;2298:34:89;;2326:4;2298:34;;;172:51:161;2289:60:89;;-1:-1:-1;;;;;2298:9:89;;:19;;145:18:161;;2298:34:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2334:14;2289:8;:60::i;:::-;2364:9;;2392;;2364:39;;-1:-1:-1;;;2364:39:89;;-1:-1:-1;;;;;2392:9:89;;;2364:39;;;172:51:161;2355:55:89;;2364:9;;;;;:19;;145:18:161;;2364:39:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2405:4;2355:8;:55::i;:::-;2835:13;;:38;;-1:-1:-1;;;2835:38:89;;2867:4;2835:38;;;172:51:161;2826:54:89;;2835:13;;;-1:-1:-1;;;;;2835:13:89;;:23;;145:18:161;;2835:38:89;14:215:161;14688:342:125;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:265;;14848:43;;;;;7528:2:161;7510:21;;;7567:2;7547:18;;;7540:30;7606:34;7601:2;7586:18;;7579:62;-1:-1:-1;;;7672:2:161;7657:18;;7650:34;7716:3;7701:19;;7326:400;14848:43:125;;;;;;;;14910:32;14940:1;14910:32;;;;;;:::i;:::-;;;;;;;;14961;14991:1;14961:32;;;;;;:::i;:::-;;;;;;;;15007:6;:4;:6::i;:::-;14688:342;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:125;:1;-1:-1:-1;;;;;3678:6:125;;3674:212;;3705:44;;;;;9106:2:161;9088:21;;;9145:2;9125:18;;;9118:30;9184:34;9179:2;9164:18;;9157:62;-1:-1:-1;;;9250:2:161;9235:18;;9228:35;9295:3;9280:19;;8904:401;3705:44:125;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;10598:2:161;10580:21;;;10637:2;10617:18;;;10610:30;10676:34;10671:2;10656:18;;10649:62;-1:-1:-1;;;10742:2:161;10727:18;;10720:32;10784:3;10769:19;;10396:398;5286:41:125;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;11707:51:161;;;-1:-1:-1;;;11774:18:161;;;11767:34;;;;2705:4:125;11817:18:161;;;11810:34;2482:11:125;;1671:64;2579:43;;11680:18:161;;2645:67:125;;;-1:-1:-1;;2645:67:125;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:125;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:125;2813:7;:14;;-1:-1:-1;;2813:14:125;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;2277:127:161:-;2338:10;2333:3;2329:20;2326:1;2319:31;2369:4;2366:1;2359:15;2393:4;2390:1;2383:15;2409:258;2481:1;2491:113;2505:6;2502:1;2499:13;2491:113;;;2581:11;;;2575:18;2562:11;;;2555:39;2527:2;2520:10;2491:113;;;2622:6;2619:1;2616:13;2613:48;;;2657:1;2648:6;2643:3;2639:16;2632:27;2613:48;;2409:258;;;:::o;2672:884::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2854:9;2848:16;2883:18;2924:2;2916:6;2913:14;2910:34;;;2940:1;2937;2930:12;2910:34;2978:6;2967:9;2963:22;2953:32;;3023:7;3016:4;3012:2;3008:13;3004:27;2994:55;;3045:1;3042;3035:12;2994:55;3074:2;3068:9;3096:2;3092;3089:10;3086:36;;;3102:18;;:::i;:::-;3177:2;3171:9;3145:2;3231:13;;-1:-1:-1;;3227:22:161;;;3251:2;3223:31;3219:40;3207:53;;;3275:18;;;3295:22;;;3272:46;3269:72;;;3321:18;;:::i;:::-;3361:10;3357:2;3350:22;3396:2;3388:6;3381:18;3436:7;3431:2;3426;3422;3418:11;3414:20;3411:33;3408:53;;;3457:1;3454;3447:12;3408:53;3470:55;3522:2;3517;3509:6;3505:15;3500:2;3496;3492:11;3470:55;:::i;:::-;3544:6;2672:884;-1:-1:-1;;;;;;;2672:884:161:o;3561:138::-;-1:-1:-1;;;;;3643:31:161;;3633:42;;3623:70;;3689:1;3686;3679:12;3704:273;3789:6;3842:2;3830:9;3821:7;3817:23;3813:32;3810:52;;;3858:1;3855;3848:12;3810:52;3890:9;3884:16;3909:38;3941:5;3909:38;:::i;:::-;3966:5;3704:273;-1:-1:-1;;;3704:273:161:o;4475:184::-;4545:6;4598:2;4586:9;4577:7;4573:23;4569:32;4566:52;;;4614:1;4611;4604:12;4566:52;-1:-1:-1;4637:16:161;;4475:184;-1:-1:-1;4475:184:161:o;4943:371::-;-1:-1:-1;;;;;;5128:33:161;;5116:46;;5185:13;;5098:3;;5207:61;5185:13;5257:1;5248:11;;5241:4;5229:17;;5207:61;:::i;:::-;5288:16;;;;5306:1;5284:24;;4943:371;-1:-1:-1;;;4943:371:161:o;5319:274::-;5448:3;5486:6;5480:13;5502:53;5548:6;5543:3;5536:4;5528:6;5524:17;5502:53;:::i;:::-;5571:16;;;;;5319:274;-1:-1:-1;;5319:274:161:o;5598:277::-;5665:6;5718:2;5706:9;5697:7;5693:23;5689:32;5686:52;;;5734:1;5731;5724:12;5686:52;5766:9;5760:16;5819:5;5812:13;5805:21;5798:5;5795:32;5785:60;;5841:1;5838;5831:12;6438:222;6478:4;6506:1;6503;6500:8;6497:131;;;6550:10;6545:3;6541:20;6538:1;6531:31;6585:4;6582:1;6575:15;6613:4;6610:1;6603:15;6497:131;-1:-1:-1;6645:9:161;;6438:222::o;7731:258::-;7773:3;7811:5;7805:12;7838:6;7833:3;7826:19;7854:63;7910:6;7903:4;7898:3;7894:14;7887:4;7880:5;7876:16;7854:63;:::i;:::-;7971:2;7950:15;-1:-1:-1;;7946:29:161;7937:39;;;;7978:4;7933:50;;7731:258;-1:-1:-1;;7731:258:161:o;7994:450::-;8244:2;8233:9;8226:21;8283:1;8278:2;8267:9;8263:18;8256:29;-1:-1:-1;;;8316:2:161;8305:9;8301:18;8294:39;8371:3;8364:4;8353:9;8349:20;8342:33;8207:4;8392:46;8433:3;8422:9;8418:19;8410:6;8392:46;:::i;8449:450::-;8699:2;8688:9;8681:21;8738:1;8733:2;8722:9;8718:18;8711:29;-1:-1:-1;;;8771:2:161;8760:9;8756:18;8749:39;8826:3;8819:4;8808:9;8804:20;8797:33;8662:4;8847:46;8888:3;8877:9;8873:19;8865:6;8847:46;:::i;9474:374::-;9704:2;9693:9;9686:21;9667:4;9724:49;9769:2;9758:9;9754:18;9387:2;9375:15;;-1:-1:-1;;;9415:4:161;9406:14;;9399:36;9460:2;9451:12;;9310:159;9724:49;-1:-1:-1;;;;;9809:32:161;;;;9804:2;9789:18;;;;9782:60;;;;-1:-1:-1;9716:57:161;9474:374::o;10017:::-;10247:2;10236:9;10229:21;10210:4;10267:49;10312:2;10301:9;10297:18;9930:2;9918:15;;-1:-1:-1;;;9958:4:161;9949:14;;9942:36;10003:2;9994:12;;9853:159;10799:348;11029:2;11018:9;11011:21;10992:4;11049:49;11094:2;11083:9;11079:18;9387:2;9375:15;;-1:-1:-1;;;9415:4:161;9406:14;;9399:36;9460:2;9451:12;;9310:159;11049:49;11041:57;;11134:6;11129:2;11118:9;11114:18;11107:34;10799:348;;;;:::o;11152:::-;11382:2;11371:9;11364:21;11345:4;11402:49;11447:2;11436:9;11432:18;9930:2;9918:15;;-1:-1:-1;;;9958:4:161;9949:14;;9942:36;10003:2;9994:12;;9853:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/AlpacaERC4626Test.t.sol",
    "id": 34526,
    "exportedSymbols": {
      "AlpacaERC4626": [
        23082
      ],
      "AlpacaERC4626Test": [
        34525
      ],
      "DSTest": [
        52915
      ],
      "ERC20": [
        76338
      ],
      "IAlpacaVault": [
        22924
      ],
      "IW_NATIVE": [
        51128
      ],
      "MockERC20": [
        75950
      ],
      "MockVault": [
        45891
      ],
      "Vm": [
        56425
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2849:89",
    "nodes": [
      {
        "id": 34250,
        "nodeType": "PragmaDirective",
        "src": "39:25:89",
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 34251,
        "nodeType": "ImportDirective",
        "src": "66:26:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 52916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34252,
        "nodeType": "ImportDirective",
        "src": "93:26:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 56426,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34254,
        "nodeType": "ImportDirective",
        "src": "121:49:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 76339,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34253,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "130:5:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34256,
        "nodeType": "ImportDirective",
        "src": "171:67:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 75951,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34255,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "180:9:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34259,
        "nodeType": "ImportDirective",
        "src": "240:87:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/compound/strategies/AlpacaERC4626.sol",
        "file": "../compound/strategies/AlpacaERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 23083,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34257,
              "name": "AlpacaERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "249:13:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34258,
              "name": "IAlpacaVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "264:12:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34261,
        "nodeType": "ImportDirective",
        "src": "328:57:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/alpaca/MockVault.sol",
        "file": "./mocks/alpaca/MockVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 45892,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34260,
              "name": "MockVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "337:9:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34263,
        "nodeType": "ImportDirective",
        "src": "386:51:89",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/utils/IW_NATIVE.sol",
        "file": "../utils/IW_NATIVE.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34526,
        "sourceUnit": 51129,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34262,
              "name": "IW_NATIVE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "395:9:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34525,
        "nodeType": "ContractDefinition",
        "src": "439:2448:89",
        "nodes": [
          {
            "id": 34271,
            "nodeType": "VariableDeclaration",
            "src": "480:40:89",
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "499:2:89",
            "scope": 34525,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$56425",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 34267,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34266,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56425,
                "src": "480:2:89"
              },
              "referencedDeclaration": 56425,
              "src": "480:2:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$56425",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 34269,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 51236,
                  "src": "507:12:89",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 34268,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 56425,
                "src": "504:2:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$56425_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 34270,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "504:16:89",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$56425",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34274,
            "nodeType": "VariableDeclaration",
            "src": "525:27:89",
            "constant": false,
            "mutability": "mutable",
            "name": "alpacaERC4626",
            "nameLocation": "539:13:89",
            "scope": 34525,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
              "typeString": "contract AlpacaERC4626"
            },
            "typeName": {
              "id": 34273,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34272,
                "name": "AlpacaERC4626",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23082,
                "src": "525:13:89"
              },
              "referencedDeclaration": 23082,
              "src": "525:13:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                "typeString": "contract AlpacaERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34277,
            "nodeType": "VariableDeclaration",
            "src": "557:19:89",
            "constant": false,
            "mutability": "mutable",
            "name": "testToken",
            "nameLocation": "567:9:89",
            "scope": 34525,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$75950",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 34276,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34275,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 75950,
                "src": "557:9:89"
              },
              "referencedDeclaration": 75950,
              "src": "557:9:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$75950",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34280,
            "nodeType": "VariableDeclaration",
            "src": "580:19:89",
            "constant": false,
            "mutability": "mutable",
            "name": "mockVault",
            "nameLocation": "590:9:89",
            "scope": 34525,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVault_$45891",
              "typeString": "contract MockVault"
            },
            "typeName": {
              "id": 34279,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34278,
                "name": "MockVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45891,
                "src": "580:9:89"
              },
              "referencedDeclaration": 45891,
              "src": "580:9:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVault_$45891",
                "typeString": "contract MockVault"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34283,
            "nodeType": "VariableDeclaration",
            "src": "604:30:89",
            "constant": false,
            "mutability": "mutable",
            "name": "depositAmount",
            "nameLocation": "612:13:89",
            "scope": 34525,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34281,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "604:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030653138",
              "id": 34282,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "628:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100e18"
            },
            "visibility": "internal"
          },
          {
            "id": 34328,
            "nodeType": "FunctionDefinition",
            "src": "639:321:89",
            "body": {
              "id": 34327,
              "nodeType": "Block",
              "src": "663:297:89",
              "statements": [
                {
                  "expression": {
                    "id": 34294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34286,
                      "name": "testToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34277,
                      "src": "669:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$75950",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374546f6b656e",
                          "id": 34290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "695:11:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          "value": "TestToken"
                        },
                        {
                          "hexValue": "545354",
                          "id": 34291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "708:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          "value": "TST"
                        },
                        {
                          "hexValue": "3138",
                          "id": 34292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "715:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 34289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "681:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$75950_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 34288,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34287,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 75950,
                            "src": "685:9:89"
                          },
                          "referencedDeclaration": 75950,
                          "src": "685:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 34293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "681:37:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$75950",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "669:49:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$75950",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 34295,
                  "nodeType": "ExpressionStatement",
                  "src": "669:49:89"
                },
                {
                  "expression": {
                    "id": 34308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34296,
                      "name": "mockVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34280,
                      "src": "724:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$45891",
                        "typeString": "contract MockVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 34302,
                              "name": "testToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34277,
                              "src": "758:9:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$75950",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$75950",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 34301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "750:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34300,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "750:7:89",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "750:18:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "4d6f636b5661756c74",
                          "id": 34304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "770:11:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8a7e1a0739a0f0adeef3b969c72d260ae979255ecde3cef0f09fbbf195eff4a1",
                            "typeString": "literal_string \"MockVault\""
                          },
                          "value": "MockVault"
                        },
                        {
                          "hexValue": "4d56",
                          "id": 34305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "783:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1c16d2c62307891734e770f2023626451e0c3d76f5ac0019c15f8071e68c635f",
                            "typeString": "literal_string \"MV\""
                          },
                          "value": "MV"
                        },
                        {
                          "hexValue": "3138",
                          "id": 34306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "789:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8a7e1a0739a0f0adeef3b969c72d260ae979255ecde3cef0f09fbbf195eff4a1",
                            "typeString": "literal_string \"MockVault\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1c16d2c62307891734e770f2023626451e0c3d76f5ac0019c15f8071e68c635f",
                            "typeString": "literal_string \"MV\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 34299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "736:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockVault_$45891_$",
                          "typeString": "function (address,string memory,string memory,uint8) returns (contract MockVault)"
                        },
                        "typeName": {
                          "id": 34298,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34297,
                            "name": "MockVault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 45891,
                            "src": "740:9:89"
                          },
                          "referencedDeclaration": 45891,
                          "src": "740:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVault_$45891",
                            "typeString": "contract MockVault"
                          }
                        }
                      },
                      "id": 34307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "736:56:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$45891",
                        "typeString": "contract MockVault"
                      }
                    },
                    "src": "724:68:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVault_$45891",
                      "typeString": "contract MockVault"
                    }
                  },
                  "id": 34309,
                  "nodeType": "ExpressionStatement",
                  "src": "724:68:89"
                },
                {
                  "expression": {
                    "id": 34325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34310,
                      "name": "alpacaERC4626",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34274,
                      "src": "798:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                        "typeString": "contract AlpacaERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34314,
                          "name": "testToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34277,
                          "src": "839:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 34318,
                                  "name": "mockVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34280,
                                  "src": "877:9:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVault_$45891",
                                    "typeString": "contract MockVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVault_$45891",
                                    "typeString": "contract MockVault"
                                  }
                                ],
                                "id": 34317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "869:7:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34316,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "869:7:89",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "869:18:89",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34315,
                            "name": "IAlpacaVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22924,
                            "src": "856:12:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAlpacaVault_$22924_$",
                              "typeString": "type(contract IAlpacaVault)"
                            }
                          },
                          "id": 34320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "856:32:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlpacaVault_$22924",
                            "typeString": "contract IAlpacaVault"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
                              "id": 34322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "906:42:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34321,
                            "name": "IW_NATIVE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51128,
                            "src": "896:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IW_NATIVE_$51128_$",
                              "typeString": "type(contract IW_NATIVE)"
                            }
                          },
                          "id": 34323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "896:53:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IW_NATIVE_$51128",
                            "typeString": "contract IW_NATIVE"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IAlpacaVault_$22924",
                            "typeString": "contract IAlpacaVault"
                          },
                          {
                            "typeIdentifier": "t_contract$_IW_NATIVE_$51128",
                            "typeString": "contract IW_NATIVE"
                          }
                        ],
                        "id": 34313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "814:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$76338_$_t_contract$_IAlpacaVault_$22924_$_t_contract$_IW_NATIVE_$51128_$returns$_t_contract$_AlpacaERC4626_$23082_$",
                          "typeString": "function (contract ERC20,contract IAlpacaVault,contract IW_NATIVE) returns (contract AlpacaERC4626)"
                        },
                        "typeName": {
                          "id": 34312,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34311,
                            "name": "AlpacaERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23082,
                            "src": "818:13:89"
                          },
                          "referencedDeclaration": 23082,
                          "src": "818:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                            "typeString": "contract AlpacaERC4626"
                          }
                        }
                      },
                      "id": 34324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:141:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                        "typeString": "contract AlpacaERC4626"
                      }
                    },
                    "src": "798:157:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                      "typeString": "contract AlpacaERC4626"
                    }
                  },
                  "id": 34326,
                  "nodeType": "ExpressionStatement",
                  "src": "798:157:89"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "648:5:89",
            "parameters": {
              "id": 34284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:2:89"
            },
            "returnParameters": {
              "id": 34285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:89"
            },
            "scope": 34525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34372,
            "nodeType": "FunctionDefinition",
            "src": "964:291:89",
            "body": {
              "id": 34371,
              "nodeType": "Block",
              "src": "1004:251:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34332,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "1019:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 34333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75971,
                          "src": "1019:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 34334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1019:20:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d696461732054657374546f6b656e205661756c74",
                        "id": 34335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1041:23:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        },
                        "value": "Midas TestToken Vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        }
                      ],
                      "id": 34331,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 52768,
                      "src": "1010:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:55:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34337,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:55:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34339,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "1080:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 34340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75973,
                          "src": "1080:20:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 34341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1080:22:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6d76545354",
                        "id": 34342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1104:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        },
                        "value": "mvTST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        }
                      ],
                      "id": 34338,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 52768,
                      "src": "1071:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1071:41:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34344,
                  "nodeType": "ExpressionStatement",
                  "src": "1071:41:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34348,
                                "name": "alpacaERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34274,
                                "src": "1135:13:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                                  "typeString": "contract AlpacaERC4626"
                                }
                              },
                              "id": 34349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50491,
                              "src": "1135:19:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$76338_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 34350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1135:21:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$76338",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$76338",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 34347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1127:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34346,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1127:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1127:30:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34354,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34277,
                            "src": "1167:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 34353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1159:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34352,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1159:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1159:18:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34345,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "1118:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 34356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:60:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34357,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:60:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34361,
                                "name": "alpacaERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34274,
                                "src": "1201:13:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                                  "typeString": "contract AlpacaERC4626"
                                }
                              },
                              "id": 34362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "alpacaVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22937,
                              "src": "1201:25:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAlpacaVault_$22924_$",
                                "typeString": "function () view external returns (contract IAlpacaVault)"
                              }
                            },
                            "id": 34363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1201:27:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAlpacaVault_$22924",
                              "typeString": "contract IAlpacaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAlpacaVault_$22924",
                              "typeString": "contract IAlpacaVault"
                            }
                          ],
                          "id": 34360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1193:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1193:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1193:36:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34367,
                            "name": "mockVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34280,
                            "src": "1239:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVault_$45891",
                              "typeString": "contract MockVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVault_$45891",
                              "typeString": "contract MockVault"
                            }
                          ],
                          "id": 34366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1231:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1231:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1231:18:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34358,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "1184:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 34369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:66:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34370,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:66:89"
                }
              ]
            },
            "functionSelector": "70bdc855",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitializedValues",
            "nameLocation": "973:21:89",
            "parameters": {
              "id": 34329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:2:89"
            },
            "returnParameters": {
              "id": 34330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:89"
            },
            "scope": 34525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34406,
            "nodeType": "FunctionDefinition",
            "src": "1259:200:89",
            "body": {
              "id": 34405,
              "nodeType": "Block",
              "src": "1285:174:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34380,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1314:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 34379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1306:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1306:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1306:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34382,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1321:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34375,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34277,
                        "src": "1291:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$75950",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75936,
                      "src": "1291:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:44:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34384,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:44:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34390,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "1367:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          ],
                          "id": 34389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1359:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1359:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1359:22:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34392,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1383:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34385,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34277,
                        "src": "1341:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$75950",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76055,
                      "src": "1341:17:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 34393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:56:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34394,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:56:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34398,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1425:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34401,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1448:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 34400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1440:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1440:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1440:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34395,
                        "name": "alpacaERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34274,
                        "src": "1403:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                          "typeString": "contract AlpacaERC4626"
                        }
                      },
                      "id": 34397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50565,
                      "src": "1403:21:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 34403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:51:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34404,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:51:89"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1268:7:89",
            "parameters": {
              "id": 34373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:2:89"
            },
            "returnParameters": {
              "id": 34374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:0:89"
            },
            "scope": 34525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34464,
            "nodeType": "FunctionDefinition",
            "src": "1463:523:89",
            "body": {
              "id": 34463,
              "nodeType": "Block",
              "src": "1493:493:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34409,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34406,
                      "src": "1499:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:9:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34411,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:9:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34417,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1595:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 34416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1587:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34415,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1587:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1587:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34413,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34277,
                            "src": "1567:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "1567:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1567:34:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1603:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34412,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "1558:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:47:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34422,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:47:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34428,
                                "name": "mockVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34280,
                                "src": "1648:9:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$45891",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$45891",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 34427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1640:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34426,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1640:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1640:18:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34424,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34277,
                            "src": "1620:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "1620:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1620:39:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34431,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1661:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34423,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "1611:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:64:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34433,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:64:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34435,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "1735:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 34436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23024,
                          "src": "1735:25:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 34437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1735:27:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34438,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1764:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34434,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "1726:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:52:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34440,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:52:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34446,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1835:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 34445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1827:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34444,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1827:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1827:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34442,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "1793:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 34443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOfUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23039,
                          "src": "1793:33:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1793:48:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34449,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1843:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34441,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "1784:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:73:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34451,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:73:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34457,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1959:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 34456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1951:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34455,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1951:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1951:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34453,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "1927:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 34454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "1927:23:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1927:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34460,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34283,
                        "src": "1967:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34452,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "1918:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:63:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34462,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:63:89"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "1472:11:89",
            "parameters": {
              "id": 34407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1483:2:89"
            },
            "returnParameters": {
              "id": 34408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:89"
            },
            "scope": 34525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34524,
            "nodeType": "FunctionDefinition",
            "src": "1990:895:89",
            "body": {
              "id": 34523,
              "nodeType": "Block",
              "src": "2021:864:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34467,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34406,
                      "src": "2027:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2027:9:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34469,
                  "nodeType": "ExpressionStatement",
                  "src": "2027:9:89"
                },
                {
                  "assignments": [
                    34471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34471,
                      "mutability": "mutable",
                      "name": "withdrawAmount",
                      "nameLocation": "2127:14:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 34523,
                      "src": "2119:22:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2119:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34475,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34472,
                      "name": "depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34283,
                      "src": "2144:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 34473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2160:4:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "2144:20:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2119:45:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34479,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34471,
                        "src": "2193:14:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34482,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2217:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 34481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2209:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2209:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2209:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34486,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2232:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 34485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2224:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2224:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2224:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34476,
                        "name": "alpacaERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34274,
                        "src": "2170:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                          "typeString": "contract AlpacaERC4626"
                        }
                      },
                      "id": 34478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50689,
                      "src": "2170:22:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 34488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:68:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34489,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:68:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34495,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2326:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 34494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2318:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2318:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2318:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34491,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34277,
                            "src": "2298:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "2298:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:34:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34498,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34471,
                        "src": "2334:14:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34490,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2289:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:60:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34500,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:60:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34506,
                                "name": "mockVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34280,
                                "src": "2392:9:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$45891",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$45891",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 34505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2384:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34504,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2384:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2384:18:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34502,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34277,
                            "src": "2364:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "2364:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2364:39:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 34509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2405:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 34501,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2355:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2355:55:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34511,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:55:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34517,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2867:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$34525",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 34516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2859:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34515,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2859:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2859:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34513,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34274,
                            "src": "2835:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$23082",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 34514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "2835:23:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2835:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 34520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2875:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 34512,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2826:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2826:54:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34522,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:54:89"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "1999:12:89",
            "parameters": {
              "id": 34465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2011:2:89"
            },
            "returnParameters": {
              "id": 34466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:0:89"
            },
            "scope": 34525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34264,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52915,
              "src": "469:6:89"
            },
            "id": 34265,
            "nodeType": "InheritanceSpecifier",
            "src": "469:6:89"
          }
        ],
        "canonicalName": "AlpacaERC4626Test",
        "contractDependencies": [
          23082,
          45891,
          75950
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34525,
          52915
        ],
        "name": "AlpacaERC4626Test",
        "nameLocation": "448:17:89",
        "scope": 34526,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}
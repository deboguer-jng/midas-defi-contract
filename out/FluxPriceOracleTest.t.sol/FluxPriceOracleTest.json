{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id1",
          "type": "uint256"
        }
      ],
      "name": "forChains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id0",
          "type": "uint256"
        }
      ],
      "name": "forChains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUpOracles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUpWithMasterPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUpWithNativeFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFluxPriceOracleWithMasterPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFluxPriceOracleWithNativeFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805460ff191660011790556200001e9062000961565b604051809103906000f0801580156200003b573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b031602179055503480156200006f57600080fd5b506200007a62000080565b620009a1565b60006001600160a01b0316600060029054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010591906200096f565b6001600160a01b031614156200095f5760005460405163189acdbd60e31b8152306004820152620100009091046001600160a01b03169063c4d66de890602401600060405180830381600087803b1580156200016057600080fd5b505af115801562000175573d6000803e3d6000fd5b5050505060384614156200053a5760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200020157600080fd5b505af115801562000216573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273ca143ce32fe78f1f7019d7d551a6402fc5350c736024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620002a257600080fd5b505af1158015620002b7573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600480820192909252604481019190915263189554d160e21b606482015273e9e7cea3dedca5984780bafc599bd69add087d566024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200033957600080fd5b505af11580156200034e573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b606482015273c3abf2cb82c65474cef8f90f1a4dae79929b19406024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620003db57600080fd5b505af1158015620003f0573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b815260048101919091526012604482015271747761704f7261636c6573466163746f727960701b6064820152738853f26c198fd5693e7886c081164e0c3f0a4e516024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200047e57600080fd5b505af115801562000493573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152600f60448201526e636861696e6c696e6b4f7261636c6560881b6064820152732b5311de4555506400273cfaafb4393f01ec25676024820152620100009091046001600160a01b03169250639b2ea4bd91506084015b600060405180830381600087803b1580156200051f57600080fd5b505af115801562000534573d6000803e3d6000fd5b50505050565b6061461415620007935760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273ae13d989dac2f0debff460ac112a837c89baa7cd6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b158015620005c257600080fd5b505af1158015620005d7573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273b7926c0430afb07aa7defde6da862ae0bde767bc6024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200066357600080fd5b505af115801562000678573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b606482015273c3abf2cb82c65474cef8f90f1a4dae79929b19406024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200070557600080fd5b505af11580156200071a573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b815260048101919091526012604482015271747761704f7261636c6573466163746f727960701b606482015273944fed08a91983d06f653e9f55eca995316ccd3e6024820152620100009091046001600160a01b03169250639b2ea4bd915060840162000504565b6105044614156200095f5760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273acc15dc74880c9944775448304b263d191c6077f6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200081c57600080fd5b505af115801562000831573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273985bca32293a7a496300a48081947321177a86fd6024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620008bd57600080fd5b505af1158015620008d2573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b60648201527314c15b9ec83ed79f23bf71d51741f58b69ff14946024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200051f57600080fd5b565b610b4a8062003acc83390190565b6000602082840312156200098257600080fd5b81516001600160a01b03811681146200099a57600080fd5b9392505050565b61311b80620009b16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a4b0f7cf11610066578063a4b0f7cf14610123578063a90b43a81461012b578063ba414fa614610133578063e4f9c5bb1461013b578063fa7626d41461014357600080fd5b806315a9c83d146100a357806325bf0d18146100cb5780633a768463146100de5780634b1c48d5146101115780635be664b61461011b575b600080fd5b6100b66100b13660046109ad565b610150565b60405190151581526020015b60405180910390f35b6100b66100d93660046109cf565b461490565b6100f9737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100c2565b610119610166565b005b61011961020f565b610119610330565b6101196103d6565b6100b66103e9565b610119610514565b6000546100b69060ff1681565b60008246148061015f57508146145b9392505050565b4661232814801561020c576000631dcd65006040516101849061097a565b908152602001604051809103906000f0801580156101a6573d6000803e3d6000fd5b5090503060016000836000806040516101be90610986565b6101cd969594939291906109e8565b604051809103906000f0801580156101e9573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055505b50565b4661232814801561020c5760408051600180825281830190925273f8af20b210bced918f71899e9f4c26de53e6cce691600091906020808301908036833701905050905060018160008151811061026857610268610a22565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106102b9576102b9610a22565b6001600160a01b0392831660209182029290920101526001546040516349575a9d60e11b81529116906392aeb53a906102f89085908590600401610a7c565b600060405180830381600087803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b5050505050505050565b4661232814801561020c57610343610514565b61034b61020f565b600180546040516315d5220f60e31b815260048101929092526000916001600160a01b039091169063aea9107890602401602060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd9190610adc565b90506103d2816819edefd20c6eaf980061074c565b5050565b4661232814801561020c57610343610166565b60008054610100900460ff16156104095750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561050f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610497917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b30565b60408051601f19818403018152908290526104b191610b54565b6000604051808303816000865af19150503d80600081146104ee576040519150601f19603f3d011682016040523d82523d6000602084013e6104f3565b606091505b509150508080602001905181019061050b9190610b60565b9150505b919050565b4661232814801561020c57600060405161052d90610993565b604051809103906000f080158015610549573d6000803e3d6000fd5b50604051629a8acb60e41b8152600260048201526702c68af0bb14000060248201529091506001600160a01b038216906309a8acb090604401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050505060006040516105c2906109a0565b604051809103906000f0801580156105de573d6000803e3d6000fd5b50604080516001808252818301909252919250600091906020808301908036833701905050905060028160008151811061061a5761061a610a22565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050838160008151811061066b5761066b610a22565b6001600160a01b03928316602091820292909201015260405163882b92a760e01b81529084169063882b92a7906106b2908590859089903090600190600090600401610b82565b600060405180830381600087803b1580156106cc57600080fd5b505af11580156106e0573d6000803e3d6000fd5b505050503060016000808660026040516106f990610986565b610708969594939291906109e8565b604051809103906000f080158015610724573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911790555050505050565b8082146103d2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107bd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16103d2737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109695760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526109089291602001610b30565b60408051601f198184030181529082905261092291610b54565b6000604051808303816000865af19150503d806000811461095f576040519150601f19603f3d011682016040523d82523d6000602084013e610964565b606091505b505050505b6000805461ff001916610100179055565b60c080610c1483390190565b61101780610cd483390190565b61058e80611ceb83390190565b610e968061227983390190565b600080604083850312156109c057600080fd5b50508035926020909101359150565b6000602082840312156109e157600080fd5b5035919050565b6001600160a01b0396871681529415156020860152928516604085015290841660608401528316608083015290911660a082015260c00190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610a715781516001600160a01b031687529582019590820190600101610a4c565b509495945050505050565b604081526000610a8f6040830185610a38565b82810360208481019190915284518083528582019282019060005b81811015610acf5784516001600160a01b031683529383019391830191600101610aaa565b5090979650505050505050565b600060208284031215610aee57600080fd5b5051919050565b6000815160005b81811015610b165760208185018101518683015201610afc565b81811115610b25576000828601525b509290920192915050565b6001600160e01b0319831681526000610b4c6004830184610af5565b949350505050565b600061015f8284610af5565b600060208284031215610b7257600080fd5b8151801515811461015f57600080fd5b60c081526000610b9560c0830189610a38565b82810360208481019190915288518083528982019282019060005b81811015610bd55784516001600160a01b031683529383019391830191600101610bb0565b50506001600160a01b03898116604087015288811660608701528715156080870152861660a08601529250610c08915050565b97965050505050505056fe608060405234801561001057600080fd5b506040516100c03803806100c083398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b60628061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806350d25bcd146037578063ca34364814604d575b600080fd5b6000545b60405190815260200160405180910390f35b603b6000548156fea164736f6c634300080a000a6101206040523480156200001257600080fd5b50604051620010173803806200101783398101604081905262000035916200008b565b600180546001600160a01b0319166001600160a01b0397881617905593151560805291841660a052831660c052821660e052166101005262000123565b6001600160a01b03811681146200008857600080fd5b50565b60008060008060008060c08789031215620000a557600080fd5b8651620000b28162000072565b60208801519096508015158114620000c957600080fd5b6040880151909550620000dc8162000072565b6060880151909450620000ef8162000072565b6080880151909350620001028162000072565b60a0880151909250620001158162000072565b809150509295509295509295565b60805160a05160c05160e05161010051610e8762000190600039600081816101a4015261081001526000818161012e015261083b01526000818160ef015281816107cd015261096c01526000818161015501526106e401526000818160b301526103f60152610e876000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806392aeb53a1161007157806392aeb53a1461018c5780639d23c8121461019f5780639dcb511a146101c6578063aea91078146101ef578063f851a44014610210578063fc57d4df1461022357600080fd5b806319983c85146100ae5780633a750685146100ea5780635381c2ae146101295780635bcf1f76146101505780638f28397014610177575b600080fd5b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e1565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b61018a610185366004610aab565b610236565b005b61018a61019a366004610bae565b6102f1565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6101116101d4366004610aab565b6000602081905290815260409020546001600160a01b031681565b6102026101fd366004610aab565b610524565b6040519081526020016100e1565b600154610111906001600160a01b031681565b610202610231366004610aab565b610535565b6001546001600160a01b031633146102905760405162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b60448201526064015b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a15050565b6001546001600160a01b031633146103465760405162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b6044820152606401610287565b60008251118015610358575080518251145b6103ca5760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e00000000000000006064820152608401610287565b60005b825181101561051f5760008382815181106103ea576103ea610c70565b602002602001015190507f00000000000000000000000000000000000000000000000000000000000000006104c0576001600160a01b0381811660009081526020819052604090205416156104c05760405162461bcd60e51b815260206004820152605060248201527f41646d696e2063616e6e6f74206f7665727772697465206578697374696e672060448201527f61737369676e6d656e7473206f6620707269636520666565647320746f20756e60648201526f3232b9363cb4b733903a37b5b2b7399760811b608482015260a401610287565b8282815181106104d2576104d2610c70565b6020908102919091018101516001600160a01b03928316600090815291829052604090912080546001600160a01b031916929091169190911790558061051781610c9c565b9150506103cd565b505050565b600061052f826106e0565b92915050565b6000816001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105999190610cb7565b156105ad5750670de0b6b3a7640000919050565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106119190610cd9565b9050600061061e826106e0565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610cf6565b60ff16905060128111156106b75761069d601282610d19565b6106a890600a610e14565b6106b29083610e20565b6106d7565b6106c2816012610d19565b6106cd90600a610e14565b6106d79083610e42565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061072957506001600160a01b038216155b1561073d5750670de0b6b3a7640000919050565b6001600160a01b0380831660009081526020819052604090205416806107cb5760405162461bcd60e51b815260206004820152603960248201527f4e6f20466c7578207072696365206665656420666f756e6420666f722074686960448201527f7320756e6465726c79696e6720455243323020746f6b656e2e000000000000006064820152608401610287565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610968576040516315d5220f60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063aea9107890602401602060405180830381865afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190610e61565b905060006108c5826ec097ce7bc90715b34b9f1000000000610e20565b90506000836001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190610e61565b9050600081121561093d57600061095e565b81610954826b204fce5e3e25026110000000610e42565b61095e9190610e20565b9695505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190610e61565b905060008113610a00575060009392505050565b6000826001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a649190610e61565b90506000811215610a765760006106d7565b81610a8982670de0b6b3a7640000610e42565b6106d79190610e20565b6001600160a01b0381168114610aa857600080fd5b50565b600060208284031215610abd57600080fd5b8135610ac881610a93565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b0e57610b0e610acf565b604052919050565b600067ffffffffffffffff821115610b3057610b30610acf565b5060051b60200190565b600082601f830112610b4b57600080fd5b81356020610b60610b5b83610b16565b610ae5565b82815260059290921b84018101918181019086841115610b7f57600080fd5b8286015b84811015610ba3578035610b9681610a93565b8352918301918301610b83565b509695505050505050565b60008060408385031215610bc157600080fd5b823567ffffffffffffffff80821115610bd957600080fd5b818501915085601f830112610bed57600080fd5b81356020610bfd610b5b83610b16565b82815260059290921b84018101918181019089841115610c1c57600080fd5b948201945b83861015610c43578535610c3481610a93565b82529482019490820190610c21565b96505086013592505080821115610c5957600080fd5b50610c6685828601610b3a565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610cb057610cb0610c86565b5060010190565b600060208284031215610cc957600080fd5b81518015158114610ac857600080fd5b600060208284031215610ceb57600080fd5b8151610ac881610a93565b600060208284031215610d0857600080fd5b815160ff81168114610ac857600080fd5b600082821015610d2b57610d2b610c86565b500390565b600181815b80851115610d6b578160001904821115610d5157610d51610c86565b80851615610d5e57918102915b93841c9390800290610d35565b509250929050565b600082610d825750600161052f565b81610d8f5750600061052f565b8160018114610da55760028114610daf57610dcb565b600191505061052f565b60ff841115610dc057610dc0610c86565b50506001821b61052f565b5060208310610133831016604e8410600b8410161715610dee575081810a61052f565b610df88383610d30565b8060001904821115610e0c57610e0c610c86565b029392505050565b6000610ac88383610d73565b600082610e3d57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e5c57610e5c610c86565b500290565b600060208284031215610e7357600080fd5b505191905056fea164736f6c634300080a000a608060405234801561001057600080fd5b5061056e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309a8acb014610067578063127ffda01461007c5780635e9a523c1461008f57806366331bba146100cb578063aea910781461008f578063fc57d4df146100e3575b600080fd5b61007a6100753660046103e5565b6100f6565b005b61007a61008a3660046103e5565b61016f565b6100b861009d366004610411565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100d3600181565b60405190151581526020016100c2565b6100b86100f1366004610411565b61024e565b6001600160a01b03821660008181526020818152604091829020548251938452908301528101829052606081018290527fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79060800160405180910390a16001600160a01b03909116600090815260208190526040902055565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610435565b6001600160a01b03811660008181526020818152604091829020548251938452908301528101849052606081018490529091507fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79060800160405180910390a16001600160a01b031660009081526020819052604090205550565b60006102db826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610291573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b99190810190610498565b604051806040016040528060048152602001630c68aa8960e31b815250610374565b156102ef5750670de0b6b3a7640000919050565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610435565b6001600160a01b0316815260208101919091526040016000205492915050565b6000816040516020016103879190610545565b60405160208183030381529060405280519060200120836040516020016103ae9190610545565b6040516020818303038152906040528051906020012014905092915050565b6001600160a01b03811681146103e257600080fd5b50565b600080604083850312156103f857600080fd5b8235610403816103cd565b946020939093013593505050565b60006020828403121561042357600080fd5b813561042e816103cd565b9392505050565b60006020828403121561044757600080fd5b815161042e816103cd565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048357818101518382015260200161046b565b83811115610492576000848401525b50505050565b6000602082840312156104aa57600080fd5b815167ffffffffffffffff808211156104c257600080fd5b818401915084601f8301126104d657600080fd5b8151818111156104e8576104e8610452565b604051601f8201601f19908116603f0116810190838211818310171561051057610510610452565b8160405282815287602084870101111561052957600080fd5b61053a836020830160208801610468565b979650505050505050565b60008251610557818460208701610468565b919091019291505056fea164736f6c634300080a000a608060405234801561001057600080fd5b50610e76806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639c9192c6116100715780639c9192c614610137578063addd50991461014a578063aea9107814610173578063c44014d214610194578063f851a440146101a7578063fc57d4df146101ba57600080fd5b8063656b0fd1146100ae57806380dce169146100d1578063882b92a7146100fc5780638f283970146101115780639c0591c814610124575b600080fd5b600354600160a01b900460ff161560405190151581526020015b60405180910390f35b6002546100e4906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b61010f61010a366004610b97565b6101cd565b005b61010f61011f366004610c9a565b6103bc565b6004546100e4906001600160a01b031681565b61010f610145366004610d03565b610448565b6100e4610158366004610c9a565b6001602052600090815260409020546001600160a01b031681565b610186610181366004610c9a565b6106a3565b6040519081526020016100c8565b61010f6101a2366004610c9a565b61080f565b6003546100e4906001600160a01b031681565b6101866101c8366004610c9a565b610893565b60006101d960016109f8565b905080156101f1576000805461ff0019166101001790555b85518751146102555760405162461bcd60e51b815260206004820152602560248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201526438bab0b61760d91b60648201526084015b60405180910390fd5b60005b875181101561031d57600088828151811061027557610275610d6f565b60200260200101519050600088838151811061029357610293610d6f565b6020908102919091018101516001600160a01b03848116600081815260018552604080822080546001600160a01b03191694861694851790558051928352948201529283015291507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d31269060600160405180910390a15050808061031590610d85565b915050610258565b50600280546001600160a01b038088166001600160a01b03199283161790925560038054600160a01b8715026001600160a81b031990911688851617179055600480549285169290911691909117905580156103b3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6003546001600160a01b031633146103e65760405162461bcd60e51b815260040161024c90610dae565b600380546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91015b60405180910390a15050565b6003546001600160a01b031633146104725760405162461bcd60e51b815260040161024c90610dae565b821580159061048057508281145b6104f25760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e0000000000000000606482015260840161024c565b60005b8381101561069c57600085858381811061051157610511610d6f565b90506020020160208101906105269190610c9a565b6001600160a01b038181166000908152600160205260409020546003549293501690600160a01b900460ff16156105e9576001600160a01b038116156105e95760405162461bcd60e51b815260206004820152604c60248201527f41646d696e2063616e6e6f74206f7665727772697465206578697374696e672060448201527f61737369676e6d656e7473206f66206f7261636c657320746f20756e6465726c60648201526b3cb4b733903a37b5b2b7399760a11b608482015260a40161024c565b60008585858181106105fd576105fd610d6f565b90506020020160208101906106129190610c9a565b6001600160a01b0384811660008181526001602090815260409182902080546001600160a01b0319168686169081179091558251938452938716908301528101919091529091507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d31269060600160405180910390a1505050808061069490610d85565b9150506104f5565b5050505050565b6004546000906001600160a01b03838116911614156106cb5750670de0b6b3a7640000919050565b6001600160a01b0380831660009081526001602052604090205416801561075e576040516315d5220f60e31b81526001600160a01b03848116600483015282169063aea91078906024015b602060405180830381865afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610de5565b9392505050565b6002546001600160a01b0316156107a1576002546040516315d5220f60e31b81526001600160a01b0385811660048301529091169063aea9107890602401610716565b60405162461bcd60e51b815260206004820152603960248201527f5072696365206f7261636c65206e6f7420666f756e6420666f7220746869732060448201527f756e6465726c79696e6720746f6b656e20616464726573732e00000000000000606482015260840161024c565b6003546001600160a01b031633146108395760405162461bcd60e51b815260040161024c90610dae565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f0df2d61fdd201e9633368dca495e2c469e36c48039263448dd8a2a954c19ef1a910161043c565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610dfe565b6004549091506001600160a01b03808316911614156109215750670de0b6b3a764000092915050565b6001600160a01b038082166000908152600160205260409020541680156109b55760405163fc57d4df60e01b81526001600160a01b03858116600483015282169063fc57d4df906024015b602060405180830381865afa158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad9190610de5565b949350505050565b6002546001600160a01b0316156107a15760025460405163fc57d4df60e01b81526001600160a01b0386811660048301529091169063fc57d4df9060240161096c565b60008054610100900460ff1615610a3f578160ff166001148015610a1b5750303b155b610a375760405162461bcd60e51b815260040161024c90610e1b565b506000919050565b60005460ff808416911610610a665760405162461bcd60e51b815260040161024c90610e1b565b506000805460ff191660ff92909216919091179055600190565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ac457610ac4610a85565b604052919050565b600067ffffffffffffffff821115610ae657610ae6610a85565b5060051b60200190565b6001600160a01b0381168114610b0557600080fd5b50565b8035610a8081610af0565b600082601f830112610b2457600080fd5b81356020610b39610b3483610acc565b610a9b565b82815260059290921b84018101918181019086841115610b5857600080fd5b8286015b84811015610b7c578035610b6f81610af0565b8352918301918301610b5c565b509695505050505050565b80358015158114610a8057600080fd5b60008060008060008060c08789031215610bb057600080fd5b863567ffffffffffffffff80821115610bc857600080fd5b818901915089601f830112610bdc57600080fd5b81356020610bec610b3483610acc565b82815260059290921b8401810191818101908d841115610c0b57600080fd5b948201945b83861015610c32578535610c2381610af0565b82529482019490820190610c10565b9a50508a013592505080821115610c4857600080fd5b50610c5589828a01610b13565b955050610c6460408801610b08565b9350610c7260608801610b08565b9250610c8060808801610b87565b9150610c8e60a08801610b08565b90509295509295509295565b600060208284031215610cac57600080fd5b813561075781610af0565b60008083601f840112610cc957600080fd5b50813567ffffffffffffffff811115610ce157600080fd5b6020830191508360208260051b8501011115610cfc57600080fd5b9250929050565b60008060008060408587031215610d1957600080fd5b843567ffffffffffffffff80821115610d3157600080fd5b610d3d88838901610cb7565b90965094506020870135915080821115610d5657600080fd5b50610d6387828801610cb7565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610da757634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526018908201527f53656e646572206973206e6f74207468652061646d696e2e0000000000000000604082015260600190565b600060208284031215610df757600080fd5b5051919050565b600060208284031215610e1057600080fd5b815161075781610af0565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea164736f6c634300080a000aa164736f6c634300080a000a608060405234801561001057600080fd5b50610b2a806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639b2ea4bd116100665780639b2ea4bd14610122578063a11b73a614610135578063bf40fac114610148578063c4d66de81461015b578063f2fde38b1461016e57600080fd5b80634172e7f9146100a35780634b12e643146100cd578063715018a6146100e057806381bc3632146100ea5780638da5cb5b146100fd575b600080fd5b6100b66100b136600461080e565b610181565b6040516100c4929190610830565b60405180910390f35b6100b66100db36600461080e565b610230565b6100e861025c565b005b6100e86100f83660046108de565b61029b565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016100c4565b6100e861013036600461093f565b610369565b6100e86101433660046108de565b610411565b61010a610156366004610993565b6104d6565b6100e861016936600461080e565b61050b565b6100e861017c36600461080e565b61058a565b606660205260009081526040902080546001820180546001600160a01b0390921692916101ad906109d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101d9906109d5565b80156102265780601f106101fb57610100808354040283529160200191610226565b820191906000526020600020905b81548152906001019060200180831161020957829003601f168201915b5050505050905082565b606760205260009081526040902080546001820180546001600160a01b0390921692916101ad906109d5565b6033546001600160a01b0316331461028f5760405162461bcd60e51b815260040161028690610a10565b60405180910390fd5b6102996000610625565b565b6033546001600160a01b031633146102c55760405162461bcd60e51b815260040161028690610a10565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606760209081526040909220845181546001600160a01b031916921691909117815583820151805191935061036092600185019291019061075e565b50505050505050565b6033546001600160a01b031633146103935760405162461bcd60e51b815260040161028690610a10565b80606584846040516103a6929190610a45565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908216907f188466739ff00cc68bfb2367d23ae4b855264264fe1624caa8884399af23454c906104049086908690610a55565b60405180910390a2505050565b6033546001600160a01b0316331461043b5760405162461bcd60e51b815260040161028690610a10565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606660209081526040909220845181546001600160a01b031916921691909117815583820151805191935061036092600185019291019061075e565b6000606583836040516104ea929190610a45565b908152604051908190036020019020546001600160a01b0316905092915050565b60006105176001610677565b9050801561052f576000805461ff0019166101001790555b610537610704565b61054082610625565b8015610586576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6033546001600160a01b031633146105b45760405162461bcd60e51b815260040161028690610a10565b6001600160a01b0381166106195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610286565b61062281610625565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff16156106be578160ff16600114801561069a5750303b155b6106b65760405162461bcd60e51b815260040161028690610a84565b506000919050565b60005460ff8084169116106106e55760405162461bcd60e51b815260040161028690610a84565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661072b5760405162461bcd60e51b815260040161028690610ad2565b610299600054610100900460ff166107555760405162461bcd60e51b815260040161028690610ad2565b61029933610625565b82805461076a906109d5565b90600052602060002090601f01602090048101928261078c57600085556107d2565b82601f106107a557805160ff19168380011785556107d2565b828001600101855582156107d2579182015b828111156107d25782518255916020019190600101906107b7565b506107de9291506107e2565b5090565b5b808211156107de57600081556001016107e3565b80356001600160a01b03811681146106ff57600080fd5b60006020828403121561082057600080fd5b610829826107f7565b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101561086c57858101830151858201606001528201610850565b8181111561087e576000606083870101525b50601f01601f191692909201606001949350505050565b60008083601f8401126108a757600080fd5b50813567ffffffffffffffff8111156108bf57600080fd5b6020830191508360208285010111156108d757600080fd5b9250929050565b600080600080606085870312156108f457600080fd5b6108fd856107f7565b935061090b602086016107f7565b9250604085013567ffffffffffffffff81111561092757600080fd5b61093387828801610895565b95989497509550505050565b60008060006040848603121561095457600080fd5b833567ffffffffffffffff81111561096b57600080fd5b61097786828701610895565b909450925061098a9050602085016107f7565b90509250925092565b600080602083850312156109a657600080fd5b823567ffffffffffffffff8111156109bd57600080fd5b6109c985828601610895565b90969095509350505050565b600181811c908216806109e957607f821691505b60208210811415610a0a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c634300080a000a",
    "sourceMap": "721:2008:120:-:0;;;;;1572:26:125;;;-1:-1:-1;;1572:26:125;1594:4;1572:26;;;1050:23:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1027:46;;;;;;;-1:-1:-1;;;;;1027:46:107;;;;;-1:-1:-1;;;;;1027:46:107;;;;;;721:2008:120;;;;;;;;;-1:-1:-1;1200:28:107;:26;:28::i;:::-;721:2008:120;;1237:1555:107;1316:1;-1:-1:-1;;;;;1294:24:107;:2;;;;;;;;;-1:-1:-1;;;;;1294:2:107;-1:-1:-1;;;;;1294:8:107;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1294:24:107;;1290:1498;;;1328:2;;:28;;-1:-1:-1;;;1328:28:107;;1350:4;1328:28;;;455:51:161;1328:2:107;;;;-1:-1:-1;;;;;1328:2:107;;:13;;428:18:161;;1328:28:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:2;1368:13;:28;1364:1418;;;1438:2;;:67;;;-1:-1:-1;;;1438:67:107;;;;;729:21:161;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:161;;;797:36;1462:42:107;885:20:161;;;878:62;1438:2:107;;;;-1:-1:-1;;;;;1438:2:107;;:13;;850:19:161;;1438:67:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:2:107;;:77;;;-1:-1:-1;;;1515:77:107;;;;;1163:21:161;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:161;;;1232:46;1549:42:107;1330:20:161;;;1323:62;1515:2:107;;;;-1:-1:-1;;;;;1515:2:107;;-1:-1:-1;1515:13:107;;-1:-1:-1;1295:19:161;;1515:77:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1603:2:107;;:65;;;-1:-1:-1;;;1603:65:107;;;;;;1608:21:161;;;;1645:18;;;1638:29;;;;-1:-1:-1;;;1683:18:161;;;1676:34;1625:42:107;1762:20:161;;;1755:62;1603:2:107;;;;-1:-1:-1;;;;;1603:2:107;;-1:-1:-1;1603:13:107;;-1:-1:-1;1727:19:161;;1603:65:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1707:2:107;;:78;;;-1:-1:-1;;;1707:78:107;;;;;2040:21:161;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:161;;;2109:47;1742:42:107;2208:20:161;;;2201:62;1707:2:107;;;;-1:-1:-1;;;;;1707:2:107;;-1:-1:-1;1707:13:107;;-1:-1:-1;2173:19:161;;1707:78:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1795:2:107;;:79;;;-1:-1:-1;;;1795:79:107;;;;;2486:21:161;;;;2543:2;2523:18;;;2516:30;-1:-1:-1;;;2562:18:161;;;2555:48;1831:42:107;2655:20:161;;;2648:62;1795:2:107;;;;-1:-1:-1;;;;;1795:2:107;;-1:-1:-1;1795:13:107;;-1:-1:-1;2620:19:161;;1795:79:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1884:2:107;;:76;;;-1:-1:-1;;;1884:76:107;;;;;2933:21:161;;;;2990:2;2970:18;;;2963:30;-1:-1:-1;;;3009:18:161;;;3002:45;1917:42:107;3099:20:161;;;3092:62;1884:2:107;;;;-1:-1:-1;;;;;1884:2:107;;-1:-1:-1;1884:13:107;;-1:-1:-1;3064:19:161;;1884:76:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:1555::o;1364:1418::-;889:2;1979:13;:27;1975:807;;;2048:2;;:67;;;-1:-1:-1;;;2048:67:107;;;;;729:21:161;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:161;;;797:36;2072:42:107;885:20:161;;;878:62;2048:2:107;;;;-1:-1:-1;;;;;2048:2:107;;:13;;850:19:161;;2048:67:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2125:2:107;;:77;;;-1:-1:-1;;;2125:77:107;;;;;1163:21:161;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:161;;;1232:46;2159:42:107;1330:20:161;;;1323:62;2125:2:107;;;;-1:-1:-1;;;;;2125:2:107;;-1:-1:-1;2125:13:107;;-1:-1:-1;1295:19:161;;2125:77:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:2:107;;:78;;;-1:-1:-1;;;2241:78:107;;;;;2040:21:161;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:161;;;2109:47;2276:42:107;2208:20:161;;;2201:62;2241:2:107;;;;-1:-1:-1;;;;;2241:2:107;;-1:-1:-1;2241:13:107;;-1:-1:-1;2173:19:161;;2241:78:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2329:2:107;;:79;;;-1:-1:-1;;;2329:79:107;;;;;2486:21:161;;;;2543:2;2523:18;;;2516:30;-1:-1:-1;;;2562:18:161;;;2555:48;2365:42:107;2655:20:161;;;2648:62;2329:2:107;;;;-1:-1:-1;;;;;2329:2:107;;-1:-1:-1;2329:13:107;;-1:-1:-1;2620:19:161;;2329:79:107;2274:442:161;1975:807:107;809:4;2427:13;:33;2423:359;;;2502:2;;:67;;;-1:-1:-1;;;2502:67:107;;;;;729:21:161;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:161;;;797:36;2526:42:107;885:20:161;;;878:62;2502:2:107;;;;-1:-1:-1;;;;;2502:2:107;;:13;;850:19:161;;2502:67:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2579:2:107;;:77;;;-1:-1:-1;;;2579:77:107;;;;;1163:21:161;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:161;;;1232:46;2613:42:107;1330:20:161;;;1323:62;2579:2:107;;;;-1:-1:-1;;;;;2579:2:107;;-1:-1:-1;2579:13:107;;-1:-1:-1;1295:19:161;;2579:77:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2695:2:107;;:78;;;-1:-1:-1;;;2695:78:107;;;;;2040:21:161;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:161;;;2109:47;2730:42:107;2208:20:161;;;2201:62;2695:2:107;;;;-1:-1:-1;;;;;2695:2:107;;-1:-1:-1;2695:13:107;;-1:-1:-1;2173:19:161;;2695:78:107;;;;;;;;;;;;;;;;;;;2423:359;1237:1555::o;721:2008:120:-;;;;;;;;:::o;14:290:161:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:161;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:161:o;2721:439::-;721:2008:120;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a4b0f7cf11610066578063a4b0f7cf14610123578063a90b43a81461012b578063ba414fa614610133578063e4f9c5bb1461013b578063fa7626d41461014357600080fd5b806315a9c83d146100a357806325bf0d18146100cb5780633a768463146100de5780634b1c48d5146101115780635be664b61461011b575b600080fd5b6100b66100b13660046109ad565b610150565b60405190151581526020015b60405180910390f35b6100b66100d93660046109cf565b461490565b6100f9737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100c2565b610119610166565b005b61011961020f565b610119610330565b6101196103d6565b6100b66103e9565b610119610514565b6000546100b69060ff1681565b60008246148061015f57508146145b9392505050565b4661232814801561020c576000631dcd65006040516101849061097a565b908152602001604051809103906000f0801580156101a6573d6000803e3d6000fd5b5090503060016000836000806040516101be90610986565b6101cd969594939291906109e8565b604051809103906000f0801580156101e9573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055505b50565b4661232814801561020c5760408051600180825281830190925273f8af20b210bced918f71899e9f4c26de53e6cce691600091906020808301908036833701905050905060018160008151811061026857610268610a22565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106102b9576102b9610a22565b6001600160a01b0392831660209182029290920101526001546040516349575a9d60e11b81529116906392aeb53a906102f89085908590600401610a7c565b600060405180830381600087803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b5050505050505050565b4661232814801561020c57610343610514565b61034b61020f565b600180546040516315d5220f60e31b815260048101929092526000916001600160a01b039091169063aea9107890602401602060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd9190610adc565b90506103d2816819edefd20c6eaf980061074c565b5050565b4661232814801561020c57610343610166565b60008054610100900460ff16156104095750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561050f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610497917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b30565b60408051601f19818403018152908290526104b191610b54565b6000604051808303816000865af19150503d80600081146104ee576040519150601f19603f3d011682016040523d82523d6000602084013e6104f3565b606091505b509150508080602001905181019061050b9190610b60565b9150505b919050565b4661232814801561020c57600060405161052d90610993565b604051809103906000f080158015610549573d6000803e3d6000fd5b50604051629a8acb60e41b8152600260048201526702c68af0bb14000060248201529091506001600160a01b038216906309a8acb090604401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050505060006040516105c2906109a0565b604051809103906000f0801580156105de573d6000803e3d6000fd5b50604080516001808252818301909252919250600091906020808301908036833701905050905060028160008151811061061a5761061a610a22565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050838160008151811061066b5761066b610a22565b6001600160a01b03928316602091820292909201015260405163882b92a760e01b81529084169063882b92a7906106b2908590859089903090600190600090600401610b82565b600060405180830381600087803b1580156106cc57600080fd5b505af11580156106e0573d6000803e3d6000fd5b505050503060016000808660026040516106f990610986565b610708969594939291906109e8565b604051809103906000f080158015610724573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911790555050505050565b8082146103d2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107bd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16103d2737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109695760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526109089291602001610b30565b60408051601f198184030181529082905261092291610b54565b6000604051808303816000865af19150503d806000811461095f576040519150601f19603f3d011682016040523d82523d6000602084013e610964565b606091505b505050505b6000805461ff001916610100179055565b60c080610c1483390190565b61101780610cd483390190565b61058e80611ceb83390190565b610e968061227983390190565b600080604083850312156109c057600080fd5b50508035926020909101359150565b6000602082840312156109e157600080fd5b5035919050565b6001600160a01b0396871681529415156020860152928516604085015290841660608401528316608083015290911660a082015260c00190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610a715781516001600160a01b031687529582019590820190600101610a4c565b509495945050505050565b604081526000610a8f6040830185610a38565b82810360208481019190915284518083528582019282019060005b81811015610acf5784516001600160a01b031683529383019391830191600101610aaa565b5090979650505050505050565b600060208284031215610aee57600080fd5b5051919050565b6000815160005b81811015610b165760208185018101518683015201610afc565b81811115610b25576000828601525b509290920192915050565b6001600160e01b0319831681526000610b4c6004830184610af5565b949350505050565b600061015f8284610af5565b600060208284031215610b7257600080fd5b8151801515811461015f57600080fd5b60c081526000610b9560c0830189610a38565b82810360208481019190915288518083528982019282019060005b81811015610bd55784516001600160a01b031683529383019391830191600101610bb0565b50506001600160a01b03898116604087015288811660608701528715156080870152861660a08601529250610c08915050565b97965050505050505056fe608060405234801561001057600080fd5b506040516100c03803806100c083398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b60628061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806350d25bcd146037578063ca34364814604d575b600080fd5b6000545b60405190815260200160405180910390f35b603b6000548156fea164736f6c634300080a000a6101206040523480156200001257600080fd5b50604051620010173803806200101783398101604081905262000035916200008b565b600180546001600160a01b0319166001600160a01b0397881617905593151560805291841660a052831660c052821660e052166101005262000123565b6001600160a01b03811681146200008857600080fd5b50565b60008060008060008060c08789031215620000a557600080fd5b8651620000b28162000072565b60208801519096508015158114620000c957600080fd5b6040880151909550620000dc8162000072565b6060880151909450620000ef8162000072565b6080880151909350620001028162000072565b60a0880151909250620001158162000072565b809150509295509295509295565b60805160a05160c05160e05161010051610e8762000190600039600081816101a4015261081001526000818161012e015261083b01526000818160ef015281816107cd015261096c01526000818161015501526106e401526000818160b301526103f60152610e876000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806392aeb53a1161007157806392aeb53a1461018c5780639d23c8121461019f5780639dcb511a146101c6578063aea91078146101ef578063f851a44014610210578063fc57d4df1461022357600080fd5b806319983c85146100ae5780633a750685146100ea5780635381c2ae146101295780635bcf1f76146101505780638f28397014610177575b600080fd5b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e1565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b61018a610185366004610aab565b610236565b005b61018a61019a366004610bae565b6102f1565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6101116101d4366004610aab565b6000602081905290815260409020546001600160a01b031681565b6102026101fd366004610aab565b610524565b6040519081526020016100e1565b600154610111906001600160a01b031681565b610202610231366004610aab565b610535565b6001546001600160a01b031633146102905760405162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b60448201526064015b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a15050565b6001546001600160a01b031633146103465760405162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b6044820152606401610287565b60008251118015610358575080518251145b6103ca5760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e00000000000000006064820152608401610287565b60005b825181101561051f5760008382815181106103ea576103ea610c70565b602002602001015190507f00000000000000000000000000000000000000000000000000000000000000006104c0576001600160a01b0381811660009081526020819052604090205416156104c05760405162461bcd60e51b815260206004820152605060248201527f41646d696e2063616e6e6f74206f7665727772697465206578697374696e672060448201527f61737369676e6d656e7473206f6620707269636520666565647320746f20756e60648201526f3232b9363cb4b733903a37b5b2b7399760811b608482015260a401610287565b8282815181106104d2576104d2610c70565b6020908102919091018101516001600160a01b03928316600090815291829052604090912080546001600160a01b031916929091169190911790558061051781610c9c565b9150506103cd565b505050565b600061052f826106e0565b92915050565b6000816001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105999190610cb7565b156105ad5750670de0b6b3a7640000919050565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106119190610cd9565b9050600061061e826106e0565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610cf6565b60ff16905060128111156106b75761069d601282610d19565b6106a890600a610e14565b6106b29083610e20565b6106d7565b6106c2816012610d19565b6106cd90600a610e14565b6106d79083610e42565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061072957506001600160a01b038216155b1561073d5750670de0b6b3a7640000919050565b6001600160a01b0380831660009081526020819052604090205416806107cb5760405162461bcd60e51b815260206004820152603960248201527f4e6f20466c7578207072696365206665656420666f756e6420666f722074686960448201527f7320756e6465726c79696e6720455243323020746f6b656e2e000000000000006064820152608401610287565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610968576040516315d5220f60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063aea9107890602401602060405180830381865afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190610e61565b905060006108c5826ec097ce7bc90715b34b9f1000000000610e20565b90506000836001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190610e61565b9050600081121561093d57600061095e565b81610954826b204fce5e3e25026110000000610e42565b61095e9190610e20565b9695505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190610e61565b905060008113610a00575060009392505050565b6000826001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a649190610e61565b90506000811215610a765760006106d7565b81610a8982670de0b6b3a7640000610e42565b6106d79190610e20565b6001600160a01b0381168114610aa857600080fd5b50565b600060208284031215610abd57600080fd5b8135610ac881610a93565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b0e57610b0e610acf565b604052919050565b600067ffffffffffffffff821115610b3057610b30610acf565b5060051b60200190565b600082601f830112610b4b57600080fd5b81356020610b60610b5b83610b16565b610ae5565b82815260059290921b84018101918181019086841115610b7f57600080fd5b8286015b84811015610ba3578035610b9681610a93565b8352918301918301610b83565b509695505050505050565b60008060408385031215610bc157600080fd5b823567ffffffffffffffff80821115610bd957600080fd5b818501915085601f830112610bed57600080fd5b81356020610bfd610b5b83610b16565b82815260059290921b84018101918181019089841115610c1c57600080fd5b948201945b83861015610c43578535610c3481610a93565b82529482019490820190610c21565b96505086013592505080821115610c5957600080fd5b50610c6685828601610b3a565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610cb057610cb0610c86565b5060010190565b600060208284031215610cc957600080fd5b81518015158114610ac857600080fd5b600060208284031215610ceb57600080fd5b8151610ac881610a93565b600060208284031215610d0857600080fd5b815160ff81168114610ac857600080fd5b600082821015610d2b57610d2b610c86565b500390565b600181815b80851115610d6b578160001904821115610d5157610d51610c86565b80851615610d5e57918102915b93841c9390800290610d35565b509250929050565b600082610d825750600161052f565b81610d8f5750600061052f565b8160018114610da55760028114610daf57610dcb565b600191505061052f565b60ff841115610dc057610dc0610c86565b50506001821b61052f565b5060208310610133831016604e8410600b8410161715610dee575081810a61052f565b610df88383610d30565b8060001904821115610e0c57610e0c610c86565b029392505050565b6000610ac88383610d73565b600082610e3d57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e5c57610e5c610c86565b500290565b600060208284031215610e7357600080fd5b505191905056fea164736f6c634300080a000a608060405234801561001057600080fd5b5061056e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309a8acb014610067578063127ffda01461007c5780635e9a523c1461008f57806366331bba146100cb578063aea910781461008f578063fc57d4df146100e3575b600080fd5b61007a6100753660046103e5565b6100f6565b005b61007a61008a3660046103e5565b61016f565b6100b861009d366004610411565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100d3600181565b60405190151581526020016100c2565b6100b86100f1366004610411565b61024e565b6001600160a01b03821660008181526020818152604091829020548251938452908301528101829052606081018290527fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79060800160405180910390a16001600160a01b03909116600090815260208190526040902055565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610435565b6001600160a01b03811660008181526020818152604091829020548251938452908301528101849052606081018490529091507fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79060800160405180910390a16001600160a01b031660009081526020819052604090205550565b60006102db826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610291573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b99190810190610498565b604051806040016040528060048152602001630c68aa8960e31b815250610374565b156102ef5750670de0b6b3a7640000919050565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610435565b6001600160a01b0316815260208101919091526040016000205492915050565b6000816040516020016103879190610545565b60405160208183030381529060405280519060200120836040516020016103ae9190610545565b6040516020818303038152906040528051906020012014905092915050565b6001600160a01b03811681146103e257600080fd5b50565b600080604083850312156103f857600080fd5b8235610403816103cd565b946020939093013593505050565b60006020828403121561042357600080fd5b813561042e816103cd565b9392505050565b60006020828403121561044757600080fd5b815161042e816103cd565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048357818101518382015260200161046b565b83811115610492576000848401525b50505050565b6000602082840312156104aa57600080fd5b815167ffffffffffffffff808211156104c257600080fd5b818401915084601f8301126104d657600080fd5b8151818111156104e8576104e8610452565b604051601f8201601f19908116603f0116810190838211818310171561051057610510610452565b8160405282815287602084870101111561052957600080fd5b61053a836020830160208801610468565b979650505050505050565b60008251610557818460208701610468565b919091019291505056fea164736f6c634300080a000a608060405234801561001057600080fd5b50610e76806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639c9192c6116100715780639c9192c614610137578063addd50991461014a578063aea9107814610173578063c44014d214610194578063f851a440146101a7578063fc57d4df146101ba57600080fd5b8063656b0fd1146100ae57806380dce169146100d1578063882b92a7146100fc5780638f283970146101115780639c0591c814610124575b600080fd5b600354600160a01b900460ff161560405190151581526020015b60405180910390f35b6002546100e4906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b61010f61010a366004610b97565b6101cd565b005b61010f61011f366004610c9a565b6103bc565b6004546100e4906001600160a01b031681565b61010f610145366004610d03565b610448565b6100e4610158366004610c9a565b6001602052600090815260409020546001600160a01b031681565b610186610181366004610c9a565b6106a3565b6040519081526020016100c8565b61010f6101a2366004610c9a565b61080f565b6003546100e4906001600160a01b031681565b6101866101c8366004610c9a565b610893565b60006101d960016109f8565b905080156101f1576000805461ff0019166101001790555b85518751146102555760405162461bcd60e51b815260206004820152602560248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201526438bab0b61760d91b60648201526084015b60405180910390fd5b60005b875181101561031d57600088828151811061027557610275610d6f565b60200260200101519050600088838151811061029357610293610d6f565b6020908102919091018101516001600160a01b03848116600081815260018552604080822080546001600160a01b03191694861694851790558051928352948201529283015291507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d31269060600160405180910390a15050808061031590610d85565b915050610258565b50600280546001600160a01b038088166001600160a01b03199283161790925560038054600160a01b8715026001600160a81b031990911688851617179055600480549285169290911691909117905580156103b3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6003546001600160a01b031633146103e65760405162461bcd60e51b815260040161024c90610dae565b600380546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91015b60405180910390a15050565b6003546001600160a01b031633146104725760405162461bcd60e51b815260040161024c90610dae565b821580159061048057508281145b6104f25760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e0000000000000000606482015260840161024c565b60005b8381101561069c57600085858381811061051157610511610d6f565b90506020020160208101906105269190610c9a565b6001600160a01b038181166000908152600160205260409020546003549293501690600160a01b900460ff16156105e9576001600160a01b038116156105e95760405162461bcd60e51b815260206004820152604c60248201527f41646d696e2063616e6e6f74206f7665727772697465206578697374696e672060448201527f61737369676e6d656e7473206f66206f7261636c657320746f20756e6465726c60648201526b3cb4b733903a37b5b2b7399760a11b608482015260a40161024c565b60008585858181106105fd576105fd610d6f565b90506020020160208101906106129190610c9a565b6001600160a01b0384811660008181526001602090815260409182902080546001600160a01b0319168686169081179091558251938452938716908301528101919091529091507f10e7c87bebf274db4de1b5f9fc731d6f83096e550bd871b681314578404d31269060600160405180910390a1505050808061069490610d85565b9150506104f5565b5050505050565b6004546000906001600160a01b03838116911614156106cb5750670de0b6b3a7640000919050565b6001600160a01b0380831660009081526001602052604090205416801561075e576040516315d5220f60e31b81526001600160a01b03848116600483015282169063aea91078906024015b602060405180830381865afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610de5565b9392505050565b6002546001600160a01b0316156107a1576002546040516315d5220f60e31b81526001600160a01b0385811660048301529091169063aea9107890602401610716565b60405162461bcd60e51b815260206004820152603960248201527f5072696365206f7261636c65206e6f7420666f756e6420666f7220746869732060448201527f756e6465726c79696e6720746f6b656e20616464726573732e00000000000000606482015260840161024c565b6003546001600160a01b031633146108395760405162461bcd60e51b815260040161024c90610dae565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f0df2d61fdd201e9633368dca495e2c469e36c48039263448dd8a2a954c19ef1a910161043c565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610dfe565b6004549091506001600160a01b03808316911614156109215750670de0b6b3a764000092915050565b6001600160a01b038082166000908152600160205260409020541680156109b55760405163fc57d4df60e01b81526001600160a01b03858116600483015282169063fc57d4df906024015b602060405180830381865afa158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad9190610de5565b949350505050565b6002546001600160a01b0316156107a15760025460405163fc57d4df60e01b81526001600160a01b0386811660048301529091169063fc57d4df9060240161096c565b60008054610100900460ff1615610a3f578160ff166001148015610a1b5750303b155b610a375760405162461bcd60e51b815260040161024c90610e1b565b506000919050565b60005460ff808416911610610a665760405162461bcd60e51b815260040161024c90610e1b565b506000805460ff191660ff92909216919091179055600190565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ac457610ac4610a85565b604052919050565b600067ffffffffffffffff821115610ae657610ae6610a85565b5060051b60200190565b6001600160a01b0381168114610b0557600080fd5b50565b8035610a8081610af0565b600082601f830112610b2457600080fd5b81356020610b39610b3483610acc565b610a9b565b82815260059290921b84018101918181019086841115610b5857600080fd5b8286015b84811015610b7c578035610b6f81610af0565b8352918301918301610b5c565b509695505050505050565b80358015158114610a8057600080fd5b60008060008060008060c08789031215610bb057600080fd5b863567ffffffffffffffff80821115610bc857600080fd5b818901915089601f830112610bdc57600080fd5b81356020610bec610b3483610acc565b82815260059290921b8401810191818101908d841115610c0b57600080fd5b948201945b83861015610c32578535610c2381610af0565b82529482019490820190610c10565b9a50508a013592505080821115610c4857600080fd5b50610c5589828a01610b13565b955050610c6460408801610b08565b9350610c7260608801610b08565b9250610c8060808801610b87565b9150610c8e60a08801610b08565b90509295509295509295565b600060208284031215610cac57600080fd5b813561075781610af0565b60008083601f840112610cc957600080fd5b50813567ffffffffffffffff811115610ce157600080fd5b6020830191508360208260051b8501011115610cfc57600080fd5b9250929050565b60008060008060408587031215610d1957600080fd5b843567ffffffffffffffff80821115610d3157600080fd5b610d3d88838901610cb7565b90965094506020870135915080821115610d5657600080fd5b50610d6387828801610cb7565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610da757634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526018908201527f53656e646572206973206e6f74207468652061646d696e2e0000000000000000604082015260600190565b600060208284031215610df757600080fd5b5051919050565b600060208284031215610e1057600080fd5b815161075781610af0565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea164736f6c634300080a000aa164736f6c634300080a000a",
    "sourceMap": "721:2008:120:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2965:134:107;;;;;;:::i;:::-;;:::i;:::-;;;432:14:161;;425:22;407:41;;395:2;380:18;2965:134:107;;;;;;;;2864:97;;;;;;:::i;:::-;2936:13;:20;;2864:97;691:40;;1671:64:125;691:40:107;;;;;-1:-1:-1;;;;;933:32:161;;;915:51;;903:2;888:18;691:40:107;757:215:161;801:349:120;;;:::i;:::-;;1848:397;;;:::i;2483:244::-;;;:::i;2249:230::-;;;:::i;1819:584:125:-;;;:::i;1154:690:120:-;;;:::i;1572:26:125:-;;;;;;;;;2965:134:107;3031:4;3067:3;3050:13;:20;:44;;;;3091:3;3074:13;:20;3050:44;3043:51;2965:134;-1:-1:-1;;;2965:134:107:o;801:349:120:-;2936:13:107;851:4;2936:20;2835:3;2831:25;;;881:22:120::1;928:9;906:32;;;;;:::i;:::-;1138:25:161::0;;;1126:2;1111:18;906:32:120::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;881:57;;1011:4;1024;1044:1;1078:4;1118:1;1137::::0;976:169:::1;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;967:6:120::1;:178:::0;;-1:-1:-1;;;;;;967:178:120::1;-1:-1:-1::0;;;;;967:178:120;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2831:25:107;801:349:120;:::o;1848:397::-;2936:13:107;851:4;2936:20;2835:3;2831:25;;;2043:16:120::1;::::0;;2057:1:::1;2043:16:::0;;;;;::::1;::::0;;;1963:42:::1;::::0;1921:23:::1;::::0;2043:16;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;2043:16:120::1;2012:47;;2090:1;2065:11;2077:1;2065:14;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2065:27:120;;;::::1;:14;::::0;;::::1;::::0;;;;;;;:27;2136:24:::1;::::0;;2158:1:::1;2136:24:::0;;;;;::::1;::::0;;;2098:35:::1;::::0;2136:24:::1;;;;;;;;;;;::::0;-1:-1:-1;2136:24:120::1;2098:62;;2182:7;2166:10;2177:1;2166:13;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2166:23:120;;::::1;:13;::::0;;::::1;::::0;;;;;:23;2195:6:::1;::::0;:45:::1;::::0;-1:-1:-1;;;2195:45:120;;:6;::::1;::::0;:20:::1;::::0;:45:::1;::::0;2216:11;;2229:10;;2195:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1915:330;;;1848:397:::0;:::o;2483:244::-;2936:13:107;851:4;2936:20;2835:3;2831:25;;;2584:28:120::1;:26;:28::i;:::-;2618:14;:12;:14::i;:::-;2654:6;::::0;;:24:::1;::::0;-1:-1:-1;;;2654:24:120;;::::1;::::0;::::1;915:51:161::0;;;;2638:13:120::1;::::0;-1:-1:-1;;;;;2654:6:120;;::::1;::::0;:12:::1;::::0;888:18:161;;2654:24:120::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2638:40;;2684:38;2693:5;2700:21;2684:8;:38::i;:::-;2578:149;2483:244:::0;:::o;2249:230::-;2936:13:107;851:4;2936:20;2835:3;2831:25;;;2343:21:120::1;:19;:21::i;1819:584:125:-:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:125;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4020:51:161;;;-1:-1:-1;;;4087:18:161;;;4080:34;2196:43:125;;;;;;;;;3993:18:161;;;2196:43:125;;;-1:-1:-1;;1671:64:125;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:125;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:125:o;1154:690:120:-;2936:13:107;851:4;2936:20;2835:3;2831:25;;;1241:21:120::1;1265:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1294:50:120::1;::::0;-1:-1:-1;;;1294:50:120;;1321:1:::1;1294:50;::::0;::::1;4020:51:161::0;1325:18:120::1;4087::161::0;;;4080:34;1241:47:120;;-1:-1:-1;;;;;;1294:18:120;::::1;::::0;::::1;::::0;3993::161;;1294:50:120::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1386:21;1410:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1470:16:120::1;::::0;;1484:1:::1;1470:16:::0;;;;;::::1;::::0;;;1386:47;;-1:-1:-1;1439:28:120::1;::::0;1470:16;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;1470:16:120::1;1439:47;;1517:1;1492:11;1504:1;1492:14;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1492:27:120;;;::::1;:14;::::0;;::::1;::::0;;;;;;;:27;1557:21:::1;::::0;;1576:1:::1;1557:21:::0;;;;;::::1;::::0;;;1525:29:::1;::::0;1557:21:::1;;;;;;;;;;;::::0;-1:-1:-1;1557:21:120::1;1525:53;;1618:3;1584:7;1592:1;1584:10;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1584:39:120;;::::1;:10;::::0;;::::1;::::0;;;;;:39;1629:97:::1;::::0;-1:-1:-1;;;1629:97:120;;:14;;::::1;::::0;::::1;::::0;:97:::1;::::0;1644:11;;1657:7;;1687:3;;1702:4:::1;::::0;1709::::1;::::0;1723:1:::1;::::0;1629:97:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1769:4;1776;1790:1;1818::::0;1823:3:::1;1836:1;1741:98;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1732:6:120::1;:107:::0;;-1:-1:-1;;;;;;1732:107:120::1;-1:-1:-1::0;;;;;1732:107:120;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;1154:690:120:o;5202:262:125:-;5264:1;5259;:6;5255:203;;5286:41;;;;;6980:2:161;6962:21;;;7019:2;6999:18;;;6992:30;7058:34;7053:2;7038:18;;7031:62;-1:-1:-1;;;7124:2:161;7109:18;;7102:32;7166:3;7151:19;;6778:398;5286:41:125;;;;;;;;5346:31;;;7393:21:161;;;7450:2;7430:18;;;7423:30;-1:-1:-1;;;7484:2:161;7469:18;;7462:40;7569:4;7554:20;;7547:36;;;5346:31:125;;;;;;;7534:3:161;5346:31:125;;;5396;;;7806:21:161;;;7863:2;7843:18;;;7836:30;-1:-1:-1;;;7897:2:161;7882:18;;7875:40;7982:4;7967:20;;7960:36;;;5396:31:125;;;;;;;7947:3:161;5396:31:125;;;5441:6;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;8209:51:161;;;-1:-1:-1;;;8276:18:161;;;8269:34;;;;2705:4:125;8319:18:161;;;8312:34;2482:11:125;;1671:64;2579:43;;8182:18:161;;2645:67:125;;;-1:-1:-1;;2645:67:125;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:125;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:125;2813:7;:14;;-1:-1:-1;;2813:14:125;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:248:161:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:161;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:161:o;459:180::-;518:6;571:2;559:9;550:7;546:23;542:32;539:52;;;587:1;584;577:12;539:52;-1:-1:-1;610:23:161;;459:180;-1:-1:-1;459:180:161:o;1174:680::-;-1:-1:-1;;;;;1563:15:161;;;1545:34;;1622:14;;1615:22;1610:2;1595:18;;1588:50;1674:15;;;1669:2;1654:18;;1647:43;1726:15;;;1721:2;1706:18;;1699:43;1779:15;;1773:3;1758:19;;1751:44;1832:15;;;1525:3;1811:19;;1804:44;1494:3;1479:19;;1174:680::o;1991:127::-;2052:10;2047:3;2043:20;2040:1;2033:31;2083:4;2080:1;2073:15;2107:4;2104:1;2097:15;2123:461;2176:3;2214:5;2208:12;2241:6;2236:3;2229:19;2267:4;2296:2;2291:3;2287:12;2280:19;;2333:2;2326:5;2322:14;2354:1;2364:195;2378:6;2375:1;2372:13;2364:195;;;2443:13;;-1:-1:-1;;;;;2439:39:161;2427:52;;2499:12;;;;2534:15;;;;2475:1;2393:9;2364:195;;;-1:-1:-1;2575:3:161;;2123:461;-1:-1:-1;;;;;2123:461:161:o;2589:855::-;2871:2;2860:9;2853:21;2834:4;2897:56;2949:2;2938:9;2934:18;2926:6;2897:56;:::i;:::-;3010:22;;;2972:2;2990:18;;;2983:50;;;;3082:13;;3104:22;;;3180:15;;;;3142;;;3213:1;3223:195;3237:6;3234:1;3231:13;3223:195;;;3302:13;;-1:-1:-1;;;;;3298:39:161;3286:52;;3393:15;;;;3358:12;;;;3334:1;3252:9;3223:195;;;-1:-1:-1;3435:3:161;;2589:855;-1:-1:-1;;;;;;;2589:855:161:o;3657:184::-;3727:6;3780:2;3768:9;3759:7;3755:23;3751:32;3748:52;;;3796:1;3793;3786:12;3748:52;-1:-1:-1;3819:16:161;;3657:184;-1:-1:-1;3657:184:161:o;4125:336::-;4166:3;4204:5;4198:12;4228:1;4238:128;4252:6;4249:1;4246:13;4238:128;;;4349:4;4334:13;;;4330:24;;4324:31;4311:11;;;4304:52;4267:12;4238:128;;;4384:6;4381:1;4378:13;4375:48;;;4419:1;4410:6;4405:3;4401:16;4394:27;4375:48;-1:-1:-1;4439:16:161;;;;;4125:336;-1:-1:-1;;4125:336:161:o;4466:278::-;-1:-1:-1;;;;;;4651:33:161;;4639:46;;4621:3;4701:37;4735:1;4726:11;;4718:6;4701:37;:::i;:::-;4694:44;4466:278;-1:-1:-1;;;;4466:278:161:o;4749:189::-;4878:3;4903:29;4928:3;4920:6;4903:29;:::i;4943:277::-;5010:6;5063:2;5051:9;5042:7;5038:23;5034:32;5031:52;;;5079:1;5076;5069:12;5031:52;5111:9;5105:16;5164:5;5157:13;5150:21;5143:5;5140:32;5130:60;;5186:1;5183;5176:12;5529:1244;5936:3;5925:9;5918:22;5899:4;5963:57;6015:3;6004:9;6000:19;5992:6;5963:57;:::i;:::-;6077:22;;;6039:2;6057:18;;;6050:50;;;;6149:13;;6171:22;;;6247:15;;;;6209;;;6280:1;6290:195;6304:6;6301:1;6298:13;6290:195;;;6369:13;;-1:-1:-1;;;;;6365:39:161;6353:52;;6460:15;;;;6425:12;;;;6401:1;6319:9;6290:195;;;-1:-1:-1;;;;;;;6579:15:161;;;6574:2;6559:18;;6552:43;6631:15;;;6626:2;6611:18;;6604:43;6691:14;;6684:22;6678:3;6663:19;;6656:51;714:31;;6532:3;6747:19;;702:44;6502:3;-1:-1:-1;6716:51:161;;-1:-1:-1;;644:108:161;6716:51;5529:1244;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/oracles/default/FluxPriceOracleTest.t.sol",
    "id": 50322,
    "exportedSymbols": {
      "AddressUpgradeable": [
        74813
      ],
      "AddressesProvider": [
        50448
      ],
      "AggregatorV3Interface": [
        24644
      ],
      "BasePriceOracle": [
        27982
      ],
      "BaseTest": [
        44968
      ],
      "CLV2V3Interface": [
        25171
      ],
      "ChainlinkPriceOracleV2": [
        28858
      ],
      "ClonesUpgradeable": [
        73490
      ],
      "ContextUpgradeable": [
        74855
      ],
      "CurveLpTokenPriceOracleNoRegistry": [
        29274
      ],
      "DSTest": [
        52915
      ],
      "ERC20Upgradeable": [
        74243
      ],
      "FluxPriceOracle": [
        30161
      ],
      "FluxPriceOracleTest": [
        50321
      ],
      "ICErc20": [
        24668
      ],
      "ICToken": [
        24817
      ],
      "IERC20MetadataUpgradeable": [
        74346
      ],
      "IERC20Upgradeable": [
        74321
      ],
      "IPriceOracle": [
        25007
      ],
      "ISynthereumDeployment": [
        25257
      ],
      "ISynthereumFinder": [
        25277
      ],
      "ISynthereumLiquidityPool": [
        25510
      ],
      "ISynthereumLiquidityPoolGeneral": [
        25516
      ],
      "IUniswapV2Factory": [
        26326
      ],
      "IUniswapV2Pair": [
        26568
      ],
      "Initializable": [
        73632
      ],
      "MasterPriceOracle": [
        28436
      ],
      "MockFluxPriceFeed": [
        50013
      ],
      "OwnableUpgradeable": [
        73410
      ],
      "SimplePriceOracle": [
        30366
      ],
      "UniswapTwapPriceOracleV2": [
        31009
      ],
      "UniswapTwapPriceOracleV2Factory": [
        31160
      ],
      "UniswapTwapPriceOracleV2Root": [
        32114
      ],
      "Vm": [
        56425
      ],
      "WETH": [
        76417
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2691:120",
    "nodes": [
      {
        "id": 49981,
        "nodeType": "PragmaDirective",
        "src": "39:24:120",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 49982,
        "nodeType": "ImportDirective",
        "src": "65:37:120",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/config/BaseTest.t.sol",
        "file": "../../config/BaseTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50322,
        "sourceUnit": 44969,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49984,
        "nodeType": "ImportDirective",
        "src": "103:79:120",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/oracles/default/FluxPriceOracle.sol",
        "file": "../../../oracles/default/FluxPriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50322,
        "sourceUnit": 30162,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49983,
              "name": "FluxPriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "112:15:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49986,
        "nodeType": "ImportDirective",
        "src": "183:77:120",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/external/flux/CLV2V3Interface.sol",
        "file": "../../../external/flux/CLV2V3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50322,
        "sourceUnit": 25172,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49985,
              "name": "CLV2V3Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "192:15:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49988,
        "nodeType": "ImportDirective",
        "src": "261:83:120",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/oracles/default/SimplePriceOracle.sol",
        "file": "../../../oracles/default/SimplePriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50322,
        "sourceUnit": 30367,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49987,
              "name": "SimplePriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "270:17:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49990,
        "nodeType": "ImportDirective",
        "src": "345:75:120",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/oracles/MasterPriceOracle.sol",
        "file": "../../../oracles/MasterPriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50322,
        "sourceUnit": 28437,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49989,
              "name": "MasterPriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "354:17:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49992,
        "nodeType": "ImportDirective",
        "src": "421:75:120",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/external/compound/IPriceOracle.sol",
        "file": "../../../external/compound/IPriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50322,
        "sourceUnit": 25008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49991,
              "name": "IPriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "430:12:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50013,
        "nodeType": "ContractDefinition",
        "src": "498:221:120",
        "nodes": [
          {
            "id": 49994,
            "nodeType": "VariableDeclaration",
            "src": "529:25:120",
            "constant": false,
            "functionSelector": "ca343648",
            "mutability": "mutable",
            "name": "staticPrice",
            "nameLocation": "543:11:120",
            "scope": 50013,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 49993,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "529:6:120",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50004,
            "nodeType": "FunctionDefinition",
            "src": "559:70:120",
            "body": {
              "id": 50003,
              "nodeType": "Block",
              "src": "592:37:120",
              "statements": [
                {
                  "expression": {
                    "id": 50001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49999,
                      "name": "staticPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49994,
                      "src": "598:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50000,
                      "name": "_staticPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49996,
                      "src": "612:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "598:26:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 50002,
                  "nodeType": "ExpressionStatement",
                  "src": "598:26:120"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49996,
                  "mutability": "mutable",
                  "name": "_staticPrice",
                  "nameLocation": "578:12:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 50004,
                  "src": "571:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 49995,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "570:21:120"
            },
            "returnParameters": {
              "id": 49998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:120"
            },
            "scope": 50013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50012,
            "nodeType": "FunctionDefinition",
            "src": "633:84:120",
            "body": {
              "id": 50011,
              "nodeType": "Block",
              "src": "688:29:120",
              "statements": [
                {
                  "expression": {
                    "id": 50009,
                    "name": "staticPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49994,
                    "src": "701:11:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 50008,
                  "id": 50010,
                  "nodeType": "Return",
                  "src": "694:18:120"
                }
              ]
            },
            "functionSelector": "50d25bcd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestAnswer",
            "nameLocation": "642:12:120",
            "parameters": {
              "id": 50005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:2:120"
            },
            "returnParameters": {
              "id": 50008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50012,
                  "src": "680:6:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 50006,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:8:120"
            },
            "scope": 50013,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockFluxPriceFeed",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50013
        ],
        "name": "MockFluxPriceFeed",
        "nameLocation": "507:17:120",
        "scope": 50322,
        "usedErrors": []
      },
      {
        "id": 50321,
        "nodeType": "ContractDefinition",
        "src": "721:2008:120",
        "nodes": [
          {
            "id": 50018,
            "nodeType": "VariableDeclaration",
            "src": "766:30:120",
            "constant": false,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "790:6:120",
            "scope": 50321,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
              "typeString": "contract FluxPriceOracle"
            },
            "typeName": {
              "id": 50017,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50016,
                "name": "FluxPriceOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30161,
                "src": "766:15:120"
              },
              "referencedDeclaration": 30161,
              "src": "766:15:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                "typeString": "contract FluxPriceOracle"
              }
            },
            "visibility": "private"
          },
          {
            "id": 50072,
            "nodeType": "FunctionDefinition",
            "src": "801:349:120",
            "body": {
              "id": 50071,
              "nodeType": "Block",
              "src": "875:275:120",
              "statements": [
                {
                  "assignments": [
                    50028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50028,
                      "mutability": "mutable",
                      "name": "mock",
                      "nameLocation": "899:4:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50071,
                      "src": "881:22:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockFluxPriceFeed_$50013",
                        "typeString": "contract MockFluxPriceFeed"
                      },
                      "typeName": {
                        "id": 50027,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50026,
                          "name": "MockFluxPriceFeed",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50013,
                          "src": "881:17:120"
                        },
                        "referencedDeclaration": 50013,
                        "src": "881:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockFluxPriceFeed_$50013",
                          "typeString": "contract MockFluxPriceFeed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50038,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_500000000_by_1",
                          "typeString": "int_const 500000000"
                        },
                        "id": 50036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "35",
                          "id": 50032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "928:1:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "id": 50035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 50033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "932:2:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "38",
                            "id": 50034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "936:1:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "932:5:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          }
                        },
                        "src": "928:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000_by_1",
                          "typeString": "int_const 500000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500000000_by_1",
                          "typeString": "int_const 500000000"
                        }
                      ],
                      "id": 50031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "906:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_int256_$returns$_t_contract$_MockFluxPriceFeed_$50013_$",
                        "typeString": "function (int256) returns (contract MockFluxPriceFeed)"
                      },
                      "typeName": {
                        "id": 50030,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50029,
                          "name": "MockFluxPriceFeed",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50013,
                          "src": "910:17:120"
                        },
                        "referencedDeclaration": 50013,
                        "src": "910:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockFluxPriceFeed_$50013",
                          "typeString": "contract MockFluxPriceFeed"
                        }
                      }
                    },
                    "id": 50037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:32:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockFluxPriceFeed_$50013",
                      "typeString": "contract MockFluxPriceFeed"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "881:57:120"
                },
                {
                  "expression": {
                    "id": 50069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50039,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50018,
                      "src": "967:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                        "typeString": "contract FluxPriceOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50045,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1011:4:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FluxPriceOracleTest_$50321",
                                "typeString": "contract FluxPriceOracleTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FluxPriceOracleTest_$50321",
                                "typeString": "contract FluxPriceOracleTest"
                              }
                            ],
                            "id": 50044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1003:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50043,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1003:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1003:13:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 50047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1024:4:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1044:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1036:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1036:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1036:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 50055,
                                  "name": "mock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50028,
                                  "src": "1078:4:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockFluxPriceFeed_$50013",
                                    "typeString": "contract MockFluxPriceFeed"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockFluxPriceFeed_$50013",
                                    "typeString": "contract MockFluxPriceFeed"
                                  }
                                ],
                                "id": 50054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1070:7:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50053,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1070:7:120",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1070:13:120",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50052,
                            "name": "CLV2V3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25171,
                            "src": "1054:15:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CLV2V3Interface_$25171_$",
                              "typeString": "type(contract CLV2V3Interface)"
                            }
                          },
                          "id": 50057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1054:30:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                            "typeString": "contract CLV2V3Interface"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 50061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1118:1:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 50060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1110:7:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50059,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1110:7:120",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1110:10:120",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50058,
                            "name": "MasterPriceOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28436,
                            "src": "1092:17:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MasterPriceOracle_$28436_$",
                              "typeString": "type(contract MasterPriceOracle)"
                            }
                          },
                          "id": 50063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1092:29:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                            "typeString": "contract MasterPriceOracle"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1137:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1129:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50064,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1129:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1129:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                            "typeString": "contract CLV2V3Interface"
                          },
                          {
                            "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                            "typeString": "contract MasterPriceOracle"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "976:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bool_$_t_address_$_t_contract$_CLV2V3Interface_$25171_$_t_contract$_MasterPriceOracle_$28436_$_t_address_$returns$_t_contract$_FluxPriceOracle_$30161_$",
                          "typeString": "function (address,bool,address,contract CLV2V3Interface,contract MasterPriceOracle,address) returns (contract FluxPriceOracle)"
                        },
                        "typeName": {
                          "id": 50041,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50040,
                            "name": "FluxPriceOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30161,
                            "src": "980:15:120"
                          },
                          "referencedDeclaration": 30161,
                          "src": "980:15:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                            "typeString": "contract FluxPriceOracle"
                          }
                        }
                      },
                      "id": 50068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "976:169:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                        "typeString": "contract FluxPriceOracle"
                      }
                    },
                    "src": "967:178:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                      "typeString": "contract FluxPriceOracle"
                    }
                  },
                  "id": 50070,
                  "nodeType": "ExpressionStatement",
                  "src": "967:178:120"
                }
              ]
            },
            "functionSelector": "4b1c48d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 50022,
                        "name": "EVMOS_TESTNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44776,
                        "src": "859:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50021,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "849:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 50023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 50024,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50020,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "839:9:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "839:35:120"
              }
            ],
            "name": "setUpWithNativeFeed",
            "nameLocation": "810:19:120",
            "parameters": {
              "id": 50019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:120"
            },
            "returnParameters": {
              "id": 50025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:120"
            },
            "scope": 50321,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50199,
            "nodeType": "FunctionDefinition",
            "src": "1154:690:120",
            "body": {
              "id": 50198,
              "nodeType": "Block",
              "src": "1235:609:120",
              "statements": [
                {
                  "assignments": [
                    50082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50082,
                      "mutability": "mutable",
                      "name": "spo",
                      "nameLocation": "1259:3:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50198,
                      "src": "1241:21:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                        "typeString": "contract SimplePriceOracle"
                      },
                      "typeName": {
                        "id": 50081,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50080,
                          "name": "SimplePriceOracle",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30366,
                          "src": "1241:17:120"
                        },
                        "referencedDeclaration": 30366,
                        "src": "1241:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                          "typeString": "contract SimplePriceOracle"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50087,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1265:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimplePriceOracle_$30366_$",
                        "typeString": "function () returns (contract SimplePriceOracle)"
                      },
                      "typeName": {
                        "id": 50084,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50083,
                          "name": "SimplePriceOracle",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30366,
                          "src": "1269:17:120"
                        },
                        "referencedDeclaration": 30366,
                        "src": "1269:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                          "typeString": "contract SimplePriceOracle"
                        }
                      }
                    },
                    "id": 50086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                      "typeString": "contract SimplePriceOracle"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1241:47:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 50093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1321:1:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 50092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1313:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50091,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1313:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1313:10:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "323030303030303030303030303030303030",
                        "id": 50095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:18:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "200000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 50088,
                        "name": "spo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50082,
                        "src": "1294:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                          "typeString": "contract SimplePriceOracle"
                        }
                      },
                      "id": 50090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDirectPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30311,
                      "src": "1294:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 50096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:50:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50097,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:50:120"
                },
                {
                  "assignments": [
                    50100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50100,
                      "mutability": "mutable",
                      "name": "mpo",
                      "nameLocation": "1404:3:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50198,
                      "src": "1386:21:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                        "typeString": "contract MasterPriceOracle"
                      },
                      "typeName": {
                        "id": 50099,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50098,
                          "name": "MasterPriceOracle",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28436,
                          "src": "1386:17:120"
                        },
                        "referencedDeclaration": 28436,
                        "src": "1386:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                          "typeString": "contract MasterPriceOracle"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50105,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1410:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MasterPriceOracle_$28436_$",
                        "typeString": "function () returns (contract MasterPriceOracle)"
                      },
                      "typeName": {
                        "id": 50102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50101,
                          "name": "MasterPriceOracle",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28436,
                          "src": "1414:17:120"
                        },
                        "referencedDeclaration": 28436,
                        "src": "1414:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                          "typeString": "contract MasterPriceOracle"
                        }
                      }
                    },
                    "id": 50104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                      "typeString": "contract MasterPriceOracle"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1386:47:120"
                },
                {
                  "assignments": [
                    50110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50110,
                      "mutability": "mutable",
                      "name": "underlyings",
                      "nameLocation": "1456:11:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50198,
                      "src": "1439:28:120",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1439:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50109,
                        "nodeType": "ArrayTypeName",
                        "src": "1439:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50116,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1484:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 50113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1470:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:7:120",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50112,
                        "nodeType": "ArrayTypeName",
                        "src": "1474:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 50115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:16:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1439:47:120"
                },
                {
                  "expression": {
                    "id": 50124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50117,
                        "name": "underlyings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50110,
                        "src": "1492:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 50119,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1504:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1492:14:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 50122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1517:1:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 50121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1509:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 50120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:120",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 50123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1509:10:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1492:27:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50125,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:27:120"
                },
                {
                  "assignments": [
                    50130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50130,
                      "mutability": "mutable",
                      "name": "oracles",
                      "nameLocation": "1547:7:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50198,
                      "src": "1525:29:120",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr",
                        "typeString": "contract IPriceOracle[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50128,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50127,
                            "name": "IPriceOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25007,
                            "src": "1525:12:120"
                          },
                          "referencedDeclaration": 25007,
                          "src": "1525:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                            "typeString": "contract IPriceOracle"
                          }
                        },
                        "id": 50129,
                        "nodeType": "ArrayTypeName",
                        "src": "1525:14:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_storage_ptr",
                          "typeString": "contract IPriceOracle[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50137,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1576:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 50134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1557:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract IPriceOracle[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50131,
                            "name": "IPriceOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25007,
                            "src": "1561:12:120"
                          },
                          "referencedDeclaration": 25007,
                          "src": "1561:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                            "typeString": "contract IPriceOracle"
                          }
                        },
                        "id": 50133,
                        "nodeType": "ArrayTypeName",
                        "src": "1561:14:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_storage_ptr",
                          "typeString": "contract IPriceOracle[]"
                        }
                      }
                    },
                    "id": 50136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:21:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr",
                      "typeString": "contract IPriceOracle[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1525:53:120"
                },
                {
                  "expression": {
                    "id": 50147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50138,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50130,
                        "src": "1584:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr",
                          "typeString": "contract IPriceOracle[] memory"
                        }
                      },
                      "id": 50140,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1592:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1584:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                        "typeString": "contract IPriceOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50144,
                              "name": "spo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50082,
                              "src": "1618:3:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                                "typeString": "contract SimplePriceOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                                "typeString": "contract SimplePriceOracle"
                              }
                            ],
                            "id": 50143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1610:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50142,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1610:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1610:12:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50141,
                        "name": "IPriceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25007,
                        "src": "1597:12:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$25007_$",
                          "typeString": "type(contract IPriceOracle)"
                        }
                      },
                      "id": 50146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1597:26:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                        "typeString": "contract IPriceOracle"
                      }
                    },
                    "src": "1584:39:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                      "typeString": "contract IPriceOracle"
                    }
                  },
                  "id": 50148,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:39:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50152,
                        "name": "underlyings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50110,
                        "src": "1644:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 50153,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50130,
                        "src": "1657:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr",
                          "typeString": "contract IPriceOracle[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50157,
                                "name": "spo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50082,
                                "src": "1687:3:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                                  "typeString": "contract SimplePriceOracle"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimplePriceOracle_$30366",
                                  "typeString": "contract SimplePriceOracle"
                                }
                              ],
                              "id": 50156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1679:7:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50155,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1679:7:120",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1679:12:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50154,
                          "name": "IPriceOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25007,
                          "src": "1666:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$25007_$",
                            "typeString": "type(contract IPriceOracle)"
                          }
                        },
                        "id": 50159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1666:26:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                          "typeString": "contract IPriceOracle"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50162,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1702:4:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FluxPriceOracleTest_$50321",
                              "typeString": "contract FluxPriceOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FluxPriceOracleTest_$50321",
                              "typeString": "contract FluxPriceOracleTest"
                            }
                          ],
                          "id": 50161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1694:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1694:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1694:13:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 50164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1709:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1723:1:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1715:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1715:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1715:10:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr",
                          "typeString": "contract IPriceOracle[] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IPriceOracle_$25007",
                          "typeString": "contract IPriceOracle"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50149,
                        "name": "mpo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50100,
                        "src": "1629:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                          "typeString": "contract MasterPriceOracle"
                        }
                      },
                      "id": 50151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28141,
                      "src": "1629:14:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_contract$_IPriceOracle_$25007_$dyn_memory_ptr_$_t_contract$_IPriceOracle_$25007_$_t_address_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (address[] memory,contract IPriceOracle[] memory,contract IPriceOracle,address,bool,address) external"
                      }
                    },
                    "id": 50169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:97:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50170,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:97:120"
                },
                {
                  "expression": {
                    "id": 50196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50171,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50018,
                      "src": "1732:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                        "typeString": "contract FluxPriceOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50177,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1769:4:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FluxPriceOracleTest_$50321",
                                "typeString": "contract FluxPriceOracleTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FluxPriceOracleTest_$50321",
                                "typeString": "contract FluxPriceOracleTest"
                              }
                            ],
                            "id": 50176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1761:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50175,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1761:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1761:13:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 50179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1776:4:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1790:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1782:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50180,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1782:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1782:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 50187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1818:1:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 50186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1810:7:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50185,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1810:7:120",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1810:10:120",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50184,
                            "name": "CLV2V3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25171,
                            "src": "1794:15:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CLV2V3Interface_$25171_$",
                              "typeString": "type(contract CLV2V3Interface)"
                            }
                          },
                          "id": 50189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1794:27:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                            "typeString": "contract CLV2V3Interface"
                          }
                        },
                        {
                          "id": 50190,
                          "name": "mpo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50100,
                          "src": "1823:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                            "typeString": "contract MasterPriceOracle"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 50193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1836:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 50192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1828:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50191,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1828:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                            "typeString": "contract CLV2V3Interface"
                          },
                          {
                            "typeIdentifier": "t_contract$_MasterPriceOracle_$28436",
                            "typeString": "contract MasterPriceOracle"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1741:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bool_$_t_address_$_t_contract$_CLV2V3Interface_$25171_$_t_contract$_MasterPriceOracle_$28436_$_t_address_$returns$_t_contract$_FluxPriceOracle_$30161_$",
                          "typeString": "function (address,bool,address,contract CLV2V3Interface,contract MasterPriceOracle,address) returns (contract FluxPriceOracle)"
                        },
                        "typeName": {
                          "id": 50173,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50172,
                            "name": "FluxPriceOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30161,
                            "src": "1745:15:120"
                          },
                          "referencedDeclaration": 30161,
                          "src": "1745:15:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                            "typeString": "contract FluxPriceOracle"
                          }
                        }
                      },
                      "id": 50195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1741:98:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                        "typeString": "contract FluxPriceOracle"
                      }
                    },
                    "src": "1732:107:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                      "typeString": "contract FluxPriceOracle"
                    }
                  },
                  "id": 50197,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:107:120"
                }
              ]
            },
            "functionSelector": "e4f9c5bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 50076,
                        "name": "EVMOS_TESTNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44776,
                        "src": "1219:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50075,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "1209:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 50077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 50078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50074,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "1199:9:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "1199:35:120"
              }
            ],
            "name": "setUpWithMasterPriceOracle",
            "nameLocation": "1163:26:120",
            "parameters": {
              "id": 50073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:2:120"
            },
            "returnParameters": {
              "id": 50079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:120"
            },
            "scope": 50321,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50260,
            "nodeType": "FunctionDefinition",
            "src": "1848:397:120",
            "body": {
              "id": 50259,
              "nodeType": "Block",
              "src": "1915:330:120",
              "statements": [
                {
                  "assignments": [
                    50209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50209,
                      "mutability": "mutable",
                      "name": "ethPool",
                      "nameLocation": "1937:7:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50259,
                      "src": "1921:23:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                        "typeString": "contract CLV2V3Interface"
                      },
                      "typeName": {
                        "id": 50208,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50207,
                          "name": "CLV2V3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25171,
                          "src": "1921:15:120"
                        },
                        "referencedDeclaration": 25171,
                        "src": "1921:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                          "typeString": "contract CLV2V3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50213,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307866386166323062323130624365643931386637313839394539663463323664453533653663634536",
                        "id": 50211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1963:42:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xf8af20b210bCed918f71899E9f4c26dE53e6ccE6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50210,
                      "name": "CLV2V3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25171,
                      "src": "1947:15:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CLV2V3Interface_$25171_$",
                        "typeString": "type(contract CLV2V3Interface)"
                      }
                    },
                    "id": 50212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:59:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                      "typeString": "contract CLV2V3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1921:85:120"
                },
                {
                  "assignments": [
                    50218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50218,
                      "mutability": "mutable",
                      "name": "underlyings",
                      "nameLocation": "2029:11:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50259,
                      "src": "2012:28:120",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50217,
                        "nodeType": "ArrayTypeName",
                        "src": "2012:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50224,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 50221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2043:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2047:7:120",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50220,
                        "nodeType": "ArrayTypeName",
                        "src": "2047:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 50223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:16:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2012:47:120"
                },
                {
                  "expression": {
                    "id": 50232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50225,
                        "name": "underlyings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50218,
                        "src": "2065:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 50227,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2065:14:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 50230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2090:1:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 50229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2082:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 50228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2082:7:120",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 50231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2082:10:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2065:27:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50233,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:27:120"
                },
                {
                  "assignments": [
                    50238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50238,
                      "mutability": "mutable",
                      "name": "priceFeeds",
                      "nameLocation": "2123:10:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50259,
                      "src": "2098:35:120",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr",
                        "typeString": "contract CLV2V3Interface[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50236,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50235,
                            "name": "CLV2V3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25171,
                            "src": "2098:15:120"
                          },
                          "referencedDeclaration": 25171,
                          "src": "2098:15:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                            "typeString": "contract CLV2V3Interface"
                          }
                        },
                        "id": 50237,
                        "nodeType": "ArrayTypeName",
                        "src": "2098:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_storage_ptr",
                          "typeString": "contract CLV2V3Interface[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50245,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2158:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 50242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2136:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract CLV2V3Interface[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50240,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50239,
                            "name": "CLV2V3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25171,
                            "src": "2140:15:120"
                          },
                          "referencedDeclaration": 25171,
                          "src": "2140:15:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                            "typeString": "contract CLV2V3Interface"
                          }
                        },
                        "id": 50241,
                        "nodeType": "ArrayTypeName",
                        "src": "2140:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_storage_ptr",
                          "typeString": "contract CLV2V3Interface[]"
                        }
                      }
                    },
                    "id": 50244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr",
                      "typeString": "contract CLV2V3Interface[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2098:62:120"
                },
                {
                  "expression": {
                    "id": 50250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50246,
                        "name": "priceFeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50238,
                        "src": "2166:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr",
                          "typeString": "contract CLV2V3Interface[] memory"
                        }
                      },
                      "id": 50248,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2177:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2166:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                        "typeString": "contract CLV2V3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50249,
                      "name": "ethPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50209,
                      "src": "2182:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                        "typeString": "contract CLV2V3Interface"
                      }
                    },
                    "src": "2166:23:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLV2V3Interface_$25171",
                      "typeString": "contract CLV2V3Interface"
                    }
                  },
                  "id": 50251,
                  "nodeType": "ExpressionStatement",
                  "src": "2166:23:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50255,
                        "name": "underlyings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50218,
                        "src": "2216:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 50256,
                        "name": "priceFeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50238,
                        "src": "2229:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr",
                          "typeString": "contract CLV2V3Interface[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr",
                          "typeString": "contract CLV2V3Interface[] memory"
                        }
                      ],
                      "expression": {
                        "id": 50252,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50018,
                        "src": "2195:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                          "typeString": "contract FluxPriceOracle"
                        }
                      },
                      "id": 50254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPriceFeeds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29945,
                      "src": "2195:20:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_contract$_CLV2V3Interface_$25171_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,contract CLV2V3Interface[] memory) external"
                      }
                    },
                    "id": 50257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:45:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50258,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:45:120"
                }
              ]
            },
            "functionSelector": "5be664b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 50203,
                        "name": "EVMOS_TESTNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44776,
                        "src": "1899:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50202,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "1889:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 50204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 50205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50201,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "1879:9:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "1879:35:120"
              }
            ],
            "name": "setUpOracles",
            "nameLocation": "1857:12:120",
            "parameters": {
              "id": 50200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1869:2:120"
            },
            "returnParameters": {
              "id": 50206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1915:0:120"
            },
            "scope": 50321,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50290,
            "nodeType": "FunctionDefinition",
            "src": "2249:230:120",
            "body": {
              "id": 50289,
              "nodeType": "Block",
              "src": "2337:142:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50268,
                      "name": "setUpWithNativeFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50072,
                      "src": "2343:19:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2343:21:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50270,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:21:120"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50271,
                      "name": "setUpOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50260,
                      "src": "2370:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:14:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50273,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:14:120"
                },
                {
                  "assignments": [
                    50275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50275,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2398:5:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50289,
                      "src": "2390:13:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2390:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50283,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 50280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2427:1:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2419:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2419:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2419:10:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50276,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50018,
                        "src": "2406:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                          "typeString": "contract FluxPriceOracle"
                        }
                      },
                      "id": 50277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30086,
                      "src": "2406:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 50282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2390:40:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50285,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50275,
                        "src": "2445:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "343738333133373535313030303030303030303030",
                        "id": 50286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2452:21:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_478313755100000000000_by_1",
                          "typeString": "int_const 478313755100000000000"
                        },
                        "value": "478313755100000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_478313755100000000000_by_1",
                          "typeString": "int_const 478313755100000000000"
                        }
                      ],
                      "id": 50284,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2436:8:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 50287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:38:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50288,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:38:120"
                }
              ]
            },
            "functionSelector": "a90b43a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 50264,
                        "name": "EVMOS_TESTNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44776,
                        "src": "2321:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50263,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "2311:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 50265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 50266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50262,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "2301:9:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "2301:35:120"
              }
            ],
            "name": "testFluxPriceOracleWithNativeFeed",
            "nameLocation": "2258:33:120",
            "parameters": {
              "id": 50261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2291:2:120"
            },
            "returnParameters": {
              "id": 50267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2337:0:120"
            },
            "scope": 50321,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50320,
            "nodeType": "FunctionDefinition",
            "src": "2483:244:120",
            "body": {
              "id": 50319,
              "nodeType": "Block",
              "src": "2578:149:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50298,
                      "name": "setUpWithMasterPriceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50199,
                      "src": "2584:26:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:28:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50300,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:28:120"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50301,
                      "name": "setUpOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50260,
                      "src": "2618:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:14:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50303,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:14:120"
                },
                {
                  "assignments": [
                    50305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50305,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2646:5:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 50319,
                      "src": "2638:13:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2638:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50313,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 50310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2675:1:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2667:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50308,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2667:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2667:10:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50306,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50018,
                        "src": "2654:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FluxPriceOracle_$30161",
                          "typeString": "contract FluxPriceOracle"
                        }
                      },
                      "id": 50307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30086,
                      "src": "2654:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 50312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2638:40:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50315,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50305,
                        "src": "2693:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "343738333133373535313030303030303030303030",
                        "id": 50316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2700:21:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_478313755100000000000_by_1",
                          "typeString": "int_const 478313755100000000000"
                        },
                        "value": "478313755100000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_478313755100000000000_by_1",
                          "typeString": "int_const 478313755100000000000"
                        }
                      ],
                      "id": 50314,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2684:8:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 50317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:38:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50318,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:38:120"
                }
              ]
            },
            "functionSelector": "a4b0f7cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 50294,
                        "name": "EVMOS_TESTNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44776,
                        "src": "2562:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50293,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44947,
                        44967
                      ],
                      "referencedDeclaration": 44947,
                      "src": "2552:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 50295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 50296,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50292,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44934,
                  "src": "2542:9:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "2542:35:120"
              }
            ],
            "name": "testFluxPriceOracleWithMasterPriceOracle",
            "nameLocation": "2492:40:120",
            "parameters": {
              "id": 50291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2532:2:120"
            },
            "returnParameters": {
              "id": 50297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:0:120"
            },
            "scope": 50321,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50014,
              "name": "BaseTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44968,
              "src": "753:8:120"
            },
            "id": 50015,
            "nodeType": "InheritanceSpecifier",
            "src": "753:8:120"
          }
        ],
        "canonicalName": "FluxPriceOracleTest",
        "contractDependencies": [
          28436,
          30161,
          30366,
          50013,
          50448
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50321,
          44968,
          52915
        ],
        "name": "FluxPriceOracleTest",
        "nameLocation": "730:19:120",
        "scope": 50322,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAccumulatingAutoRewardsOnDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAccumulatingAutoRewardsOnWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaimForMultipleUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905568056bc75e2d63100000600755661c6bf526340000600855600a80546001600160a01b03191673f39fd6e51aad88f6f4ce6ab8827279cfffb9226617905542600b5534801561005f57600080fd5b50618f378061006f6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806370bdc855116200007a57806370bdc85514620001305780637f924c4e146200013a578063ba414fa61462000144578063d0e30db0146200015f578063d509b16c1462000169578063fa7626d4146200017357600080fd5b80630a9254e414620000c85780633a76846314620000d45780633af93d191462000108578063466620c9146200011257806351bcd38f146200011c57806358b4d79e1462000126575b600080fd5b620000d262000181565b005b620000eb60008051602062008f0b83398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000d2620007d4565b620000d262000939565b620000d262000acf565b620000d26200125f565b620000d262001667565b620000d2620019e2565b6200014e62001bac565b6040519015158152602001620000ff565b620000d262001cd7565b620000d262001f5a565b6000546200014e9060ff1681565b6012604051620001919062002508565b6060808252600990820152682a32b9ba2a37b5b2b760b91b608082015260a060208201819052600390820152621514d560ea1b60c082015260ff909116604082015260e001604051809103906000f080158015620001f3573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051601290620002259062002508565b60608082526009908201526830baba37aa37b5b2b760b91b608082015260a060208201819052600490820152634155544f60e01b60c082015260ff909116604082015260e001604051809103906000f08015801562000288573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169182179055604051620002b69062002516565b6001600160a01b039091168152602001604051809103906000f080158015620002e3573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b03928316908117909155600354604051921691620003179062002524565b620003249291906200255c565b604051809103906000f08015801562000341573d6000803e3d6000fd5b50600580546001600160a01b0319166001600160a01b03929092169190911790556040516372eb5f8160e11b81526001600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b158015620003ab57600080fd5b505af1158015620003c0573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526001600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b1580156200040d57600080fd5b505af115801562000422573d6000803e3d6000fd5b50505050600460009054906101000a90046001600160a01b0316600080306000604051620004509062002532565b6001600160a01b0395861681529385166020850152918416604084015283166060830152909116608082015260a001604051809103906000f0801580156200049c573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169182178155604051620004ca9062002540565b6001600160a01b03909216825263ffffffff166020820152604001604051809103906000f08015801562000502573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03928316908117909155600154604051638fb0091360e01b8152600481019290925290911690638fb0091390602401600060405180830381600087803b1580156200056257600080fd5b505af115801562000577573d6000803e3d6000fd5b50506003546001546004546006546040516001600160a01b039485169650928416945060009391821692911690620005af906200254e565b6001600160a01b0395861681529385166020850152604084019290925283166060830152909116608082015260a001604051809103906000f080158015620005fb573d6000803e3d6000fd5b506000805462010000600160b01b031916620100006001600160a01b0393841681029190911791829055600980549190920483166001600160a01b031990911681179091556001546040516338ae568b60e11b815260048101929092529091169063715cad1690602401600060405180830381600087803b1580156200068057600080fd5b505af115801562000695573d6000803e3d6000fd5b5050600654600354600554604051630a3d02c960e21b81526001600160a01b039283166004820152600160248201529082166044820152911692506328f40b249150606401600060405180830381600087803b158015620006f557600080fd5b505af11580156200070a573d6000803e3d6000fd5b50506040516372eb5f8160e11b81526002600482015260008051602062008f0b833981519152925063e5d6bf029150602401600060405180830381600087803b1580156200075757600080fd5b505af11580156200076c573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526002600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b158015620007b957600080fd5b505af1158015620007ce573d6000803e3d6000fd5b50505050565b620007de62001cd7565b6040516372eb5f8160e11b81526003600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200082757600080fd5b505af11580156200083c573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b1580156200088957600080fd5b505af11580156200089e573d6000803e3d6000fd5b50505050620008ac62001cd7565b600480546000546040516370a0823160e01b81526001600160a01b036201000090920482169381019390935262000937929116906370a08231906024015b602060405180830381865afa15801562000908573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092e919062002576565b600854620020d3565b565b6200094362001cd7565b6040516372eb5f8160e11b81526003600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200098c57600080fd5b505af1158015620009a1573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b158015620009ee57600080fd5b505af115801562000a03573d6000803e3d6000fd5b5050600054604051632d182be560e21b81526001600482015230602482018190526044820152620100009091046001600160a01b0316925063b460af9491506064016020604051808303816000875af115801562000a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8b919062002576565b50600480546000546040516370a0823160e01b81526001600160a01b036201000090920482169381019390935262000937929116906370a0823190602401620008ea565b62000ad962001cd7565b600a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062008f0b833981519152906306447d5690602401600060405180830381600087803b15801562000b2e57600080fd5b505af115801562000b43573d6000803e3d6000fd5b5050600354600a546007546040516340c10f1960e01b81526001600160a01b0392831660048201526024810191909152911692506340c10f199150604401600060405180830381600087803b15801562000b9c57600080fd5b505af115801562000bb1573d6000803e3d6000fd5b505060035460005460075460405163095ea7b360e01b81526001600160a01b03620100009093048316600482015260248101919091529116925063095ea7b391506044016020604051808303816000875af115801562000c15573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c3b919062002590565b50600054600754600a54604051636e553f6560e01b815260048101929092526001600160a01b0390811660248301526201000090920490911690636e553f65906044016020604051808303816000875af115801562000c9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cc4919062002576565b50604080516390c5013b60e01b8152905160008051602062008f0b833981519152916390c5013b91600480830192600092919082900301818387803b15801562000d0d57600080fd5b505af115801562000d22573d6000803e3d6000fd5b50506040516372eb5f8160e11b81526003600482015260008051602062008f0b833981519152925063e5d6bf029150602401600060405180830381600087803b15801562000d6f57600080fd5b505af115801562000d84573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b15801562000dd157600080fd5b505af115801562000de6573d6000803e3d6000fd5b5050600054604051632d182be560e21b81526001600482015230602482018190526044820152620100009091046001600160a01b0316925063b460af9491506064016020604051808303816000875af115801562000e48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e6e919062002576565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac9262000eaf92620100009091049091169030906004016200255c565b6020604051808303816000875af115801562000ecf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef5919062002576565b506040516372eb5f8160e11b815260048082015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b15801562000f3e57600080fd5b505af115801562000f53573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260048082015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b15801562000f9f57600080fd5b505af115801562000fb4573d6000803e3d6000fd5b5050600154600054600a5460405163cc6bc10160e01b81526001600160a01b03620100009093048316600482015230602482015290821660448201529116925063cc6bc101915060640160408051808303816000875af11580156200101d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010439190620025bb565b5050600154604051633bd73ee360e21b81523060048201526001600160a01b039091169063ef5cfb8c90602401600060405180830381600087803b1580156200108b57600080fd5b505af1158015620010a0573d6000803e3d6000fd5b5050600154600a54604051633bd73ee360e21b81526001600160a01b0391821660048201529116925063ef5cfb8c9150602401600060405180830381600087803b158015620010ee57600080fd5b505af115801562001103573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252620011a293506001600160a01b031691506370a08231906024015b602060405180830381865afa15801562001157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200117d919062002576565b60016002600854620011909190620025e0565b6200119c919062002603565b620020d3565b600480546040516370a0823160e01b81523092810192909252620011db916001600160a01b03909116906370a082319060240162001139565b600480546001546040516370a0823160e01b81526001600160a01b039182169381019390935262000937929116906370a08231906024015b602060405180830381865afa15801562001231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001257919062002576565b6000620020d3565b6200126962001cd7565b6040516372eb5f8160e11b81526003600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b158015620012b257600080fd5b505af1158015620012c7573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b1580156200131457600080fd5b505af115801562001329573d6000803e3d6000fd5b5050600054604051632d182be560e21b81526001600482015230602482018190526044820152620100009091046001600160a01b0316925063b460af9491506064016020604051808303816000875af11580156200138b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013b1919062002576565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac92620013f292620100009091049091169030906004016200255c565b6020604051808303816000875af115801562001412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001438919062002576565b506040516372eb5f8160e11b815260048082015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200148157600080fd5b505af115801562001496573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260048082015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b158015620014e257600080fd5b505af1158015620014f7573d6000803e3d6000fd5b5050600154600054604051632e6f912b60e21b81526001600160a01b03928316945063b9be44ac93506200153b92620100009092049091169030906004016200255c565b6020604051808303816000875af11580156200155b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001581919062002576565b50600154604051633bd73ee360e21b81523060048201526001600160a01b039091169063ef5cfb8c90602401600060405180830381600087803b158015620015c857600080fd5b505af1158015620015dd573d6000803e3d6000fd5b5050600480546040516370a0823160e01b815230928101929092526200093793506001600160a01b031691506370a0823190602401602060405180830381865afa15801562001630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001656919062002576565b60016008546200119c919062002603565b6200171d600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620016bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620016e991908101906200266e565b60405180604001604052806015815260200174135a59185cc815195cdd151bdad95b8815985d5b1d605a1b815250620021ce565b620017c3600060029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562001775573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200179f91908101906200266e565b604051806040016040528060058152602001641b5d9514d560da1b815250620021ce565b62001853600060029054906101000a90046001600160a01b03166001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200181b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200184191906200273d565b6003546001600160a01b031662002305565b620018e3600060029054906101000a90046001600160a01b03166001600160a01b031663465f0fbd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018d191906200273d565b6006546001600160a01b031662002305565b60095460005462001907916001600160a01b03908116916201000090041662002305565b600354600054600654604051636eb1769f60e11b81526200199b936001600160a01b039081169363dd62ed3e936200194e936201000090920483169216906004016200255c565b602060405180830381865afa1580156200196c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001992919062002576565b600019620020d3565b60048054600054600254604051636eb1769f60e11b815262000937946001600160a01b039485169463dd62ed3e946200194e9462010000909104821693911691016200255c565b620019ec62001cd7565b6003546040516370a0823160e01b815230600482015262001a20916001600160a01b0316906370a082319060240162001213565b6003546006546040516370a0823160e01b81526001600160a01b03918216600482015262001a5c9291909116906370a082319060240162001213565b6003546005546040516370a0823160e01b81526001600160a01b03918216600482015262001ae09291909116906370a08231906024015b602060405180830381865afa15801562001ab1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad7919062002576565b600754620020d3565b62001b38600060029054906101000a90046001600160a01b03166001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001ab1573d6000803e3d6000fd5b600054604051633af9e66960e01b815230600482015262001b72916201000090046001600160a01b031690633af9e6699060240162001a93565b6000546040516370a0823160e01b815230600482015262000937916201000090046001600160a01b0316906370a082319060240162001a93565b60008054610100900460ff161562001bcd5750600054610100900460ff1690565b600060008051602062008f0b8339815191523b1562001cd2576040805160008051602062008f0b833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001c54917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200275d565b60408051601f198184030181529082905262001c709162002790565b6000604051808303816000865af19150503d806000811462001caf576040519150601f19603f3d011682016040523d82523d6000602084013e62001cb4565b606091505b509150508080602001905181019062001cce919062002590565b9150505b919050565b6003546007546040516340c10f1960e01b815230600482015260248101919091526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801562001d2857600080fd5b505af115801562001d3d573d6000803e3d6000fd5b505060035460005460075460405163095ea7b360e01b81526001600160a01b03620100009093048316600482015260248101919091529116925063095ea7b391506044016020604051808303816000875af115801562001da1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dc7919062002590565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac9262001e0892620100009091049091169030906004016200255c565b6020604051808303816000875af115801562001e28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e4e919062002576565b50600054600754604051636e553f6560e01b81526004810191909152306024820152620100009091046001600160a01b031690636e553f65906044016020604051808303816000875af115801562001eaa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ed0919062002576565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac9262001f1192620100009091049091169030906004016200255c565b6020604051808303816000875af115801562001f31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f57919062002576565b50565b62001f6462001cd7565b600054600754604051632d182be560e21b8152600481019190915230602482018190526044820152620100009091046001600160a01b03169063b460af94906064016020604051808303816000875af115801562001fc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fec919062002576565b506003546040516370a0823160e01b815230600482015262002021916001600160a01b0316906370a082319060240162001a93565b6003546006546040516370a0823160e01b81526001600160a01b0391821660048201526200205d9291909116906370a082319060240162001213565b6003546005546040516370a0823160e01b81526001600160a01b039182166004820152620020999291909116906370a082319060240162001213565b6000546040516370a0823160e01b815230600482015262000937916201000090046001600160a01b0316906370a082319060240162001213565b808214620021ca577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620021469060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200217f9190620027ae565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620021b89190620027e7565b60405180910390a1620021ca620023ff565b5050565b80604051602001620021e1919062002790565b60405160208183030381529060405280519060200120826040516020016200220a919062002790565b6040516020818303038152906040528051906020012014620021ca577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620022939060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620022cc919062002840565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620021b8919062002875565b806001600160a01b0316826001600160a01b031614620021ca577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200238d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620023c69190620028aa565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620021b89190620028ef565b60008051602062008f0b8339815191523b15620024f7576040805160008051602062008f0b833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200249292916020016200275d565b60408051601f1981840301815290829052620024ae9162002790565b6000604051808303816000865af19150503d8060008114620024ed576040519150601f19603f3d011682016040523d82523d6000602084013e620024f2565b606091505b505050505b6000805461ff001916610100179055565b610fd3806200291b83390190565b6111b780620038ee83390190565b6106408062004aa583390190565b61147b80620050e583390190565b610a8e806200656083390190565b611f1d8062006fee83390190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156200258957600080fd5b5051919050565b600060208284031215620025a357600080fd5b81518015158114620025b457600080fd5b9392505050565b60008060408385031215620025cf57600080fd5b505080516020909101519092909150565b600082620025fe57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156200262457634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200265c57818101518382015260200162002642565b83811115620007ce5750506000910152565b6000602082840312156200268157600080fd5b815167ffffffffffffffff808211156200269a57600080fd5b818401915084601f830112620026af57600080fd5b815181811115620026c457620026c462002629565b604051601f8201601f19908116603f01168101908382118183101715620026ef57620026ef62002629565b816040528281528760208487010111156200270957600080fd5b6200271c8360208301602088016200263f565b979650505050505050565b6001600160a01b038116811462001f5757600080fd5b6000602082840312156200275057600080fd5b8151620025b48162002727565b6001600160e01b0319831681528151600090620027828160048501602087016200263f565b919091016004019392505050565b60008251620027a48184602087016200263f565b9190910192915050565b604081526000620027d960408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000620027d960408301600a815269080808081058dd1d585b60b21b602082015260400190565b600081518084526200282c8160208601602086016200263f565b601f01601f19169290920160200192915050565b604081526009604082015268202056616c7565206160b81b6060820152608060208201526000620025b4608083018462002812565b60408152600960408201526810102b30b63ab2903160b91b6060820152608060208201526000620025b4608083018462002812565b604081526000620028d560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620028d560408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60e06040523480156200001157600080fd5b5060405162000fd338038062000fd383398101604081905262000034916200029a565b82828282600090805190602001906200004f92919062000127565b5081516200006590600190602085019062000127565b5060ff81166080524660a0526200007b6200008b565b60c0525062000400945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000bf91906200035c565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b82805462000135906200031f565b90600052602060002090601f016020900481019282620001595760008555620001a4565b82601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f557600080fd5b81516001600160401b0380821115620002125762000212620001cd565b604051601f8301601f19908116603f011681019082821181831017156200023d576200023d620001cd565b816040528381526020925086838588010111156200025a57600080fd5b600091505b838210156200027e57858201830151818301840152908201906200025f565b83821115620002905760008385830101525b9695505050505050565b600080600060608486031215620002b057600080fd5b83516001600160401b0380821115620002c857600080fd5b620002d687838801620001e3565b94506020860151915080821115620002ed57600080fd5b50620002fc86828701620001e3565b925050604084015160ff811681146200031457600080fd5b809150509250925092565b600181811c908216806200033457607f821691505b602082108114156200035657634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200037957607f831692505b60208084108214156200039a57634e487b7160e01b86526022600452602486fd5b818015620003b15760018114620003c357620003f2565b60ff19861689528489019650620003f2565b60008a81526020902060005b86811015620003ea5781548b820152908501908301620003cf565b505084890196505b509498975050505050505050565b60805160a05160c051610ba362000430600039600061046f0152600061043a0152600061015f0152610ba36000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac146101f8578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806370a08231146101b05780637ecebe00146101d057806395d89b41146101f057600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b60405161010491906108bb565b60405180910390f35b61012061011b36600461092c565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610956565b610356565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b610139610436565b6101ae6101a936600461092c565b610491565b005b6101396101be366004610992565b60036020526000908152604090205481565b6101396101de366004610992565b60056020526000908152604090205481565b6100f761049f565b6101ae61020636600461092c565b6104ac565b61012061021936600461092c565b6104b6565b6101ae61022c3660046109b4565b61051c565b61013961023f366004610a27565b600460209081526000928352604080842090915290825290205481565b6000805461026990610a5a565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610a5a565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103459086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103b25761038d8382610aab565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103da908490610aab565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610b77833981519152906104239087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461046c57610467610765565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61049b82826107ff565b5050565b6001805461026990610a5a565b61049b8282610859565b336000908152600360205260408120805483919083906104d7908490610aab565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610b77833981519152906103459086815260200190565b428410156105715760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161057d610436565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610689573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106bf5750876001600160a01b0316816001600160a01b0316145b6106fc5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610568565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107979190610ac2565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546108119190610b5e565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610b7783398151915291015b60405180910390a35050565b6001600160a01b03821660009081526003602052604081208054839290610881908490610aab565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610b778339815191529060200161084d565b600060208083528351808285015260005b818110156108e8578581018301518582016040015282016108cc565b818111156108fa576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461092757600080fd5b919050565b6000806040838503121561093f57600080fd5b61094883610910565b946020939093013593505050565b60008060006060848603121561096b57600080fd5b61097484610910565b925061098260208501610910565b9150604084013590509250925092565b6000602082840312156109a457600080fd5b6109ad82610910565b9392505050565b600080600080600080600060e0888a0312156109cf57600080fd5b6109d888610910565b96506109e660208901610910565b95506040880135945060608801359350608088013560ff81168114610a0a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a3a57600080fd5b610a4383610910565b9150610a5160208401610910565b90509250929050565b600181811c90821680610a6e57607f821691505b60208210811415610a8f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610abd57610abd610a95565b500390565b600080835481600182811c915080831680610ade57607f831692505b6020808410821415610afe57634e487b7160e01b86526022600452602486fd5b818015610b125760018114610b2357610b50565b60ff19861689528489019650610b50565b60008a81526020902060005b86811015610b485781548b820152908501908301610b2f565b505084890196505b509498975050505050505050565b60008219821115610b7157610b71610a95565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080a000a60806040526910f0cf064dd592000000600355661c6bf526340000600455623b56f860055534801561003057600080fd5b506040516111b73803806111b783398101604081905261004f91610074565b600680546001600160a01b0319166001600160a01b03929092169190911790556100a4565b60006020828403121561008657600080fd5b81516001600160a01b038116811461009d57600080fd5b9392505050565b611104806100b36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806369f94adf1161008c57806393f1a40b1161006657806393f1a40b14610311578063a96fe44314610355578063e2bbb1581461035e578063e7fa1e861461037157600080fd5b806369f94adf146102c05780637b84daec146102eb5780638dbb1e3a146102fe57600080fd5b806328f40b24116100c857806328f40b2414610156578063441a3e701461029157806348cd4cb1146102a457806351eb05a6146102ad57600080fd5b8063081e3eda146100ef5780631526fe271461010657806317caf6f11461014d575b600080fd5b6000545b6040519081526020015b60405180910390f35b610119610114366004610f5b565b61037a565b604080516001600160a01b03968716815260208101959095528401929092526060830152909116608082015260a0016100fd565b6100f360025481565b61028f610164366004610f8c565b60028290556040805160a0810182526001600160a01b0394851681526020810193845243918101918252600060608201818152938616608083019081528154600181018355918052915160059091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180549288166001600160a01b031993841617905594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56486015591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56585015591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56684015590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5679092018054929093169116179055565b005b61028f61029f366004610fce565b6103c8565b6100f360055481565b61028f6102bb366004610f5b565b61089c565b6006546102d3906001600160a01b031681565b6040516001600160a01b0390911681526020016100fd565b6100f36102f9366004610ff0565b610a4d565b6100f361030c366004610fce565b610bd3565b61034061031f366004610ff0565b60016020818152600093845260408085209091529183529120805491015482565b604080519283526020830191909152016100fd565b6100f360035481565b61028f61036c366004610fce565b610c63565b6100f360045481565b6000818154811061038a57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0393841695509193909290911685565b6103d18261089c565b60008083815481106103e5576103e5611020565b60009182526020808320868452600182526040808520338652909252908320835460059093029091019350919081908690811061042457610424611020565b906000526020600020906005020160040160009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104aa9190611036565b905060008086815481106104c0576104c0611020565b906000526020600020906005020160040160009054906101000a90046001600160a01b03166001600160a01b03166344a3955e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190611036565b835490915061058f5760405162461bcd60e51b815260206004820152601060248201526f0757365722e73686172657320697320360841b60448201526064015b60405180910390fd5b600081116105d25760405162461bcd60e51b815260206004820152601060248201526f0736861726573546f74616c20697320360841b6044820152606401610586565b6000836001015464e8d4a51000866003015486600001546105f39190611065565b6105fd9190611084565b61060791906110a6565b905080156106865760065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068491906110bd565b505b6000828486600001546106999190611065565b6106a39190611084565b9050808711156106b1578096505b86156108695760008089815481106106cb576106cb611020565b60009182526020909120600460059092020181015460405163f3fef3a360e01b81523392810192909252602482018a90526001600160a01b03169063f3fef3a3906044016020604051808303816000875af115801561072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107529190611036565b86549091508111156107675760008655610777565b85546107749082906110a6565b86555b86546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190611036565b9050888110156107f1578098505b875460405163a9059cbb60e01b8152336004820152602481018b90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610841573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086591906110bd565b5050505b6003860154855464e8d4a510009161088091611065565b61088a9190611084565b85600101819055505050505050505050565b60008082815481106108b0576108b0611020565b90600052602060002090600502019050806002015443116108cf575050565b60008160040160009054906101000a90046001600160a01b03166001600160a01b03166344a3955e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611036565b90508061095c57504360029091015550565b600061096c836002015443610bd3565b90506000811161097c5750505050565b60006002548460010154600454846109949190611065565b61099e9190611065565b6109a89190611084565b6006546040516340c10f1960e01b8152306004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156109f557600080fd5b505af1158015610a09573d6000803e3d6000fd5b50505050828164e8d4a51000610a1f9190611065565b610a299190611084565b8460030154610a3891906110df565b60038501555050436002909201919091555050565b60008060008481548110610a6357610a63611020565b600091825260208083208784526001825260408085206001600160a01b03808a16875290845281862060046005909602909301858101548351632251caaf60e11b8152935191985093969593909116936344a3955e93838101939192918290030181865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190611036565b90506000808781548110610b1357610b13611020565b906000526020600020906005020160040160009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b999190611036565b905081610bad576000945050505050610bcd565b82548290610bbc908390611065565b610bc69190611084565b9450505050505b92915050565b600354600654604080516318160ddd60e01b81529051600093926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190611036565b10610c5257506000610bcd565b610c5c83836110a6565b9392505050565b610c6c8261089c565b6000808381548110610c8057610c80611020565b60009182526020808320868452600182526040808520338652909252922080546005909202909201925015610d9e576000816001015464e8d4a5100084600301548460000154610cd09190611065565b610cda9190611084565b610ce491906110a6565b90507f63a242a632efe33c0e210e04e4173612a17efa4f16aa4890bc7e46caece80de081604051610d1791815260200190565b60405180910390a18015610d9c5760065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a91906110bd565b505b505b8215610f2f5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610dfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1e91906110bd565b50815460048084015460405163095ea7b360e01b81526001600160a01b0391821692810192909252602482018690529091169063095ea7b3906044016020604051808303816000875af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d91906110bd565b506004828101546040516311f9fbc960e21b81523392810192909252602482018590526000916001600160a01b03909116906347e7ef24906044016020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190611036565b8254909150610f2b9082906110df565b8255505b6003820154815464e8d4a5100091610f4691611065565b610f509190611084565b600190910155505050565b600060208284031215610f6d57600080fd5b5035919050565b6001600160a01b0381168114610f8957600080fd5b50565b600080600060608486031215610fa157600080fd5b8335610fac81610f74565b9250602084013591506040840135610fc381610f74565b809150509250925092565b60008060408385031215610fe157600080fd5b50508035926020909101359150565b6000806040838503121561100357600080fd5b82359150602083013561101581610f74565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561104857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561107f5761107f61104f565b500290565b6000826110a157634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156110b8576110b861104f565b500390565b6000602082840312156110cf57600080fd5b81518015158114610c5c57600080fd5b600082198211156110f2576110f261104f565b50019056fea164736f6c634300080a000a6080604052600160025560016003556001600455600160055534801561002457600080fd5b506040516106403803806106408339810160408190526100439161009a565b60068054610100600160a81b0319166101006001600160a01b0394851602179055600780546001600160a01b031916919092161790556100cd565b80516001600160a01b038116811461009557600080fd5b919050565b600080604083850312156100ad57600080fd5b6100b68361007e565b91506100c46020840161007e565b90509250929050565b610564806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806368f541621161007157806368f54162146100f8578063e5dd455a14610101578063e7a036791461011e578063ee50dc341461014e578063f3fef3a314610157578063fa9748411461016a57600080fd5b80631334903f146100ae57806342da4eb3146100ca57806344a3955e146100d357806347e7ef24146100dc57806367057b6c146100ef575b600080fd5b6100b760025481565b6040519081526020015b60405180910390f35b6100b760005481565b6100b760015481565b6100b76100ea36600461045e565b61017d565b6100b760055481565b6100b760045481565b60065461010e9060ff1681565b60405190151581526020016100c1565b6006546101369061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b6100b760035481565b6100b761016536600461045e565b61028a565b600754610136906001600160a01b031681565b6006546040516323b872dd60e01b81523360048201523060248201526044810183905260009161010090046001600160a01b0316906323b872dd906064016020604051808303816000875af11580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe9190610496565b5060005482901580159061021457506000600154115b156102505760035460005460025460015461022f90876104ce565b61023991906104ce565b61024391906104ed565b61024d91906104ed565b90505b8060015461025e919061050f565b60015560065460ff161561027157610283565b8260005461027f919061050f565b6000555b9392505050565b60008082116102cf5760405162461bcd60e51b815260206004820152600d60248201526c05f77616e74416d74203c3d203609c1b604482015260640160405180910390fd5b600080546001546102e090856104ce565b6102ea91906104ed565b90506001548111156102fb57506001545b806001546103099190610527565b60015560055460045410156103355760055460045461032890856104ce565b61033291906104ed565b92505b6006546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a7919061053e565b9050808411156103b5578093505b8360005410156103c55760005493505b836000546103d39190610527565b60005560065460075460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052610100909204169063a9059cbb906044016020604051808303816000875af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610496565b5090949350505050565b6000806040838503121561047157600080fd5b82356001600160a01b038116811461048857600080fd5b946020939093013593505050565b6000602082840312156104a857600080fd5b8151801515811461028357600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156104e8576104e86104b8565b500290565b60008261050a57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610522576105226104b8565b500190565b600082821015610539576105396104b8565b500390565b60006020828403121561055057600080fd5b505191905056fea164736f6c634300080a000a60a06040523480156200001157600080fd5b506040516200147b3803806200147b833981016040819052620000349162000119565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b0393841660805250600380549284166001600160a01b03199384161790556004805491909316911617905562000199565b6001600160a01b03811681146200011657600080fd5b50565b600080600080600060a086880312156200013257600080fd5b85516200013f8162000100565b6020870151909550620001528162000100565b6040870151909450620001658162000100565b6060870151909350620001788162000100565b60808701519092506200018b8162000100565b809150509295509295909350565b6080516112b1620001ca60003960008181610350015281816105f30152818161067701526108b901526112b16000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b9be44ac116100ad578063dde684a511610071578063dde684a5146102b6578063e1e3dfeb14610312578063ef5cfb8c14610325578063f046ee5c14610338578063f7c618c11461034b57600080fd5b8063b9be44ac14610244578063bf7e214f14610257578063c2ee3a081461026a578063c3b2886414610279578063cc6bc1011461028e57600080fd5b80637a9e5e4b116100f45780637a9e5e4b146101b25780637fb5ad38146101c55780638da5cb5b146101f35780638fb009131461021e578063ab5497d71461023157600080fd5b8063116139d31461012657806313af4035146101775780635a826df31461018c578063715cad161461019f575b600080fd5b61015a610134366004611046565b60076020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b61018a61018536600461107f565b610372565b005b61018a61019a36600461107f565b6103f8565b61018a6101ad36600461107f565b610474565b61018a6101c036600461107f565b6104b2565b6101e56101d336600461107f565b60056020526000908152604090205481565b60405190815260200161016e565b600054610206906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61018a61022c36600461107f565b61059c565b600454610206906001600160a01b031681565b6101e5610252366004611046565b6106ec565b600154610206906001600160a01b031681565b61015a670de0b6b3a764000081565b610281610762565b60405161016e91906110a3565b6102a161029c3660046110f0565b6107c4565b6040805192835260208301919091520161016e565b6102ee6102c436600461107f565b6006602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff90911660208301520161016e565b61020661032036600461113b565b61084d565b61018a61033336600461107f565b610877565b600354610206906001600160a01b031681565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610388336000356001600160e01b03191661092b565b6103ad5760405162461bcd60e51b81526004016103a490611154565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61040e336000356001600160e01b03191661092b565b61042a5760405162461bcd60e51b81526004016103a490611154565b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b61048a336000356001600160e01b03191661092b565b6104a65760405162461bcd60e51b81526004016103a490611154565b6104af816109d5565b50565b6000546001600160a01b0316331480610547575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061050690339030906001600160e01b0319600035169060040161117a565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906111a7565b61055057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6105b2336000356001600160e01b03191661092b565b6105ce5760405162461bcd60e51b81526004016103a490611154565b6003546040516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b905080156106a1576003546106a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b600380546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b6001600160a01b03821660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff16928201929092529061074157600091505061075c565b61074b8482610b95565b9050610758848483610dd7565b9150505b92915050565b606060028054806020026020016040519081016040528092919081815260200182805480156107ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161079c575b5050505050905090565b6001600160a01b03831660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff1692820192909252829161081d576000809250925050610845565b6108278682610b95565b9050610834868683610dd7565b61083f878684610dd7565b92509250505b935093915050565b6002818154811061085d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260409020548015610927576001600160a01b038083166000908152600560205260408120556003546108e3917f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc678260405161091e91815260200190565b60405180910390a25b5050565b6001546000906001600160a01b031680158015906109b5575060405163b700961360e01b81526001600160a01b0382169063b7009613906109749087903090889060040161117a565b602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b591906111a7565b8061075857506000546001600160a01b0385811691161491505092915050565b6001600160a01b0381166000908152600660205260409020546001600160e01b031615610a2f5760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b60448201526064016103a4565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610a5a42611008565b63ffffffff9081169091526001600160a01b038316600081815260066020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355600280546001810182559084527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b8e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103a4565b5050505050565b6040805180820190915260008082526020820152600354602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906111c9565b83925090508015610dd0576004546000906001600160a01b0316610cb457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906111c9565b610d24565b60048054604051631e1932fb60e01b81526001600160a01b0388811693820193909352911690631e1932fb90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906111c9565b905060008115610d5657610d5382610d44670de0b6b3a7640000866111f8565b610d4e9190611217565b61101f565b90505b6040518060400160405280828760000151610d719190611239565b6001600160e01b03168152602001610d8842611008565b63ffffffff9081169091526001600160a01b0388166000908152600660209081526040909120835191840151909216600160e01b026001600160e01b03909116179055935050505b5092915050565b80516001600160a01b038481166000908152600760209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b03198316179092559192911680610e305750670de0b6b3a76400005b6000610e3c8284611264565b6004549091506000906001600160a01b0316610ec1576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906111c9565b610f39565b60048054604051631a50ef2f60e01b81526001600160a01b038b8116938201939093528983166024820152911690631a50ef2f90604401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906111c9565b90506000670de0b6b3a7640000610f596001600160e01b038516846111f8565b610f639190611217565b6001600160a01b03891660009081526005602052604081205491925090610f8b90839061128c565b6001600160a01b03808b16600081815260056020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce90610ff39086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b6000640100000000821061101b57600080fd5b5090565b6000600160e01b821061101b57600080fd5b6001600160a01b03811681146104af57600080fd5b6000806040838503121561105957600080fd5b823561106481611031565b9150602083013561107481611031565b809150509250929050565b60006020828403121561109157600080fd5b813561109c81611031565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110e45783516001600160a01b0316835292840192918401916001016110bf565b50909695505050505050565b60008060006060848603121561110557600080fd5b833561111081611031565b9250602084013561112081611031565b9150604084013561113081611031565b809150509250925092565b60006020828403121561114d57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111b957600080fd5b8151801515811461109c57600080fd5b6000602082840312156111db57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611212576112126111e2565b500290565b60008261123457634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160e01b0382811684821680830382111561125b5761125b6111e2565b01949350505050565b60006001600160e01b0383811690831681811015611284576112846111e2565b039392505050565b6000821982111561129f5761129f6111e2565b50019056fea164736f6c634300080a000a60e060405234801561001057600080fd5b50604051610a8e380380610a8e83398101604081905261002f91610187565b818181806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b091906101ca565b6001600160a01b03811660808190529091506100da90836000196100ee602090811b6104a017901c565b505063ffffffff1660c052506101ee915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806101695760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6001600160a01b038116811461018457600080fd5b50565b6000806040838503121561019a57600080fd5b82516101a58161016f565b602084015190925063ffffffff811681146101bf57600080fd5b809150509250929050565b6000602082840312156101dc57600080fd5b81516101e78161016f565b9392505050565b60805160a05160c051610857610237600039600081816061015261032001526000818160a201526101a20152600081816101020152818161055d01526105dd01526108576000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636fcf5e5f1461005c5780637acf5b921461009d578063b334db7b146100dc578063f7c618c1146100fd578063faa6c3c814610124575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b6100ef6100ea3660046106b1565b610195565b604051908152602001610094565b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6101696101323660046106f1565b60006020819052908152604090205463ffffffff80821691640100000000810490911690600160401b90046001600160c01b031683565b6040805163ffffffff94851681529390921660208401526001600160c01b031690820152606001610094565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101e05760405163739e221160e01b815260040160405180910390fd5b6001600160a01b0383166000908152602081815260408083208151606081018352905463ffffffff808216835264010000000082041693820193909352600160401b9092046001600160c01b0316908201529061023c42610522565b90506000826020015163ffffffff168263ffffffff16101561025e5781610264565b82602001515b90506000836000015163ffffffff168663ffffffff1611156102865785610289565b83515b9050836020015163ffffffff1660001461030557835160208501516102ae9190610729565b63ffffffff166102be8284610729565b63ffffffff1685604001516102d3919061074e565b6102dd9190610793565b6001600160c01b0316945083604001516001600160c01b0316851115610305576103056107b9565b836020015163ffffffff168363ffffffff16106104965760007f00000000000000000000000000000000000000000000000000000000000000008061034a81876107cf565b61035491906107f7565b61035e919061080e565b9050600061036b89610539565b905060405180606001604052808663ffffffff1681526020018363ffffffff168152602001826001600160c01b03168152506000808b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a8154816001600160c01b0302191690836001600160c01b031602179055509050508163ffffffff168563ffffffff167f2bc72eed7f7ea7cb3bf6969b33e204748849532a1f8e4ca68ba1bc97c4cf2e008360405161048b91906001600160c01b0391909116815260200190565b60405180910390a350505b5050505092915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061051c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b6000640100000000821061053557600080fd5b5090565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610831565b90508015610605576106056001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684308461060b565b92915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061068e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610513565b5050505050565b80356001600160a01b03811681146106ac57600080fd5b919050565b600080604083850312156106c457600080fd5b6106cd83610695565b9150602083013563ffffffff811681146106e657600080fd5b809150509250929050565b60006020828403121561070357600080fd5b61070c82610695565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8381169083168181101561074657610746610713565b039392505050565b60006001600160c01b038281168482168115158284048211161561077457610774610713565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b03838116806107ad576107ad61077d565b92169190910492915050565b634e487b7160e01b600052600160045260246000fd5b600063ffffffff8083168185168083038211156107ee576107ee610713565b01949350505050565b600063ffffffff808416806107ad576107ad61077d565b600063ffffffff8083168185168183048111821515161561077457610774610713565b60006020828403121561084357600080fd5b505191905056fea164736f6c634300080a000a6101606040523480156200001257600080fd5b5060405162001f1d38038062001f1d8339810160408190526200003591620004e1565b84856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009f91908101906200059e565b604051602001620000b1919062000656565b604051602081830303815290604052866001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200012991908101906200059e565b6040516020016200013b919062000696565b6040516020818303038152906040528181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b19190620006c2565b8251620001c690600090602086019062000422565b508151620001dc90600190602085019062000422565b5060ff81166080524660a052620001f262000386565b60c052505050506001600160a01b0391821660e08190526101008690528383166101208190529287166101405260405163095ea7b360e01b8152600481019390935260001960248401529163095ea7b391506044016020604051808303816000875af115801562000267573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028d9190620006ee565b50816001600160a01b031663095ea7b3610140516001600160a01b031663f046ee5c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000305919062000712565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037a9190620006ee565b50505050505062000813565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620003ba91906200076f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620004309062000732565b90600052602060002090601f0160209004810192826200045457600085556200049f565b82601f106200046f57805160ff19168380011785556200049f565b828001600101855582156200049f579182015b828111156200049f57825182559160200191906001019062000482565b50620004ad929150620004b1565b5090565b5b80821115620004ad5760008155600101620004b2565b6001600160a01b0381168114620004de57600080fd5b50565b600080600080600060a08688031215620004fa57600080fd5b85516200050781620004c8565b60208701519095506200051a81620004c8565b6040870151606088015191955093506200053481620004c8565b60808701519092506200054781620004c8565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005885781810151838201526020016200056e565b8381111562000598576000848401525b50505050565b600060208284031215620005b157600080fd5b81516001600160401b0380821115620005c957600080fd5b818401915084601f830112620005de57600080fd5b815181811115620005f357620005f362000555565b604051601f8201601f19908116603f011681019083821181831017156200061e576200061e62000555565b816040528281528760208487010111156200063857600080fd5b6200064b8360208301602088016200056b565b979650505050505050565b65026b4b230b9960d51b815260008251620006798160068501602087016200056b565b650815985d5b1d60d21b6006939091019283015250600c01919050565b6136bb60f11b815260008251620006b58160028501602087016200056b565b9190910160020192915050565b600060208284031215620006d557600080fd5b815160ff81168114620006e757600080fd5b9392505050565b6000602082840312156200070157600080fd5b81518015158114620006e757600080fd5b6000602082840312156200072557600080fd5b8151620006e781620004c8565b600181811c908216806200074757607f821691505b602082108114156200076957634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200078c57607f831692505b6020808410821415620007ad57634e487b7160e01b86526022600452602486fd5b818015620007c45760018114620007d65762000805565b60ff1986168952848901965062000805565b60008a81526020902060005b86811015620007fd5781548b820152908501908301620007e2565b505084890196505b509498975050505050505050565b60805160a05160c05160e051610100516101205161014051611669620008b460003960006103cb01526000818161035e015281816105410152818161113b01526111e0015260008181610322015281816105120152818161110e01526111b30152600081816102d0015281816108be0152818161095a01528181610b550152610c9e01526000610815015260006107e50152600061028f01526116696000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063ba087652116100a2578063d505accf11610071578063d505accf14610487578063d905777e1461049c578063dd62ed3e146104c5578063ef8b30f7146104f057600080fd5b8063ba08765214610461578063c63d75b614610344578063c6e6f59214610474578063ce96cb771461030a57600080fd5b806395d89b41116100de57806395d89b4114610420578063a9059cbb14610428578063b3d7f6b91461043b578063b460af941461044e57600080fd5b806370a08231146103a65780637acf5b92146103c65780637ecebe00146103ed57806394bf804d1461040d57600080fd5b80633644e51511610187578063402d267d11610156578063402d267d14610344578063465f0fbd146103595780634cdad506146103805780636e553f651461039357600080fd5b80633644e515146102c357806338d52e0f146102cb5780633af9e6691461030a5780633e0dc34e1461031d57600080fd5b80630a28a477116101c35780630a28a4771461025b57806318160ddd1461026e57806323b872dd14610277578063313ce5671461028a57600080fd5b806301e1d114146101f557806306fdde031461021057806307a2d13a14610225578063095ea7b314610238575b600080fd5b6101fd610503565b6040519081526020015b60405180910390f35b6102186105b9565b60405161020791906112f7565b6101fd61023336600461134c565b610647565b61024b610246366004611381565b610674565b6040519015158152602001610207565b6101fd61026936600461134c565b6106e1565b6101fd60025481565b61024b6102853660046113ab565b610701565b6102b17f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610207565b6101fd6107e1565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610207565b6101fd6103183660046113e7565b610837565b6101fd7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6103523660046113e7565b5060001990565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd61038e36600461134c565b610859565b6101fd6103a1366004611402565b610864565b6101fd6103b43660046113e7565b60036020526000908152604090205481565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6103fb3660046113e7565b60056020526000908152604090205481565b6101fd61041b366004611402565b610940565b6102186109dc565b61024b610436366004611381565b6109e9565b6101fd61044936600461134c565b610a4f565b6101fd61045c36600461142e565b610a6e565b6101fd61046f36600461142e565b610b7c565b6101fd61048236600461134c565b610cc5565b61049a61049536600461146a565b610ce5565b005b6101fd6104aa3660046113e7565b6001600160a01b031660009081526003602052604090205490565b6101fd6104d33660046114dd565b600460209081526000928352604080842090915290825290205481565b6101fd6104fe36600461134c565b610f29565b604051631ee136bb60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637b84daec90604401602060405180830381865afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190611507565b905090565b600080546105c690611520565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290611520565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b505050505081565b600254600090801561066b5761066661065e610503565b849083610f34565b61066d565b825b9392505050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106cf9086815260200190565b60405180910390a35060015b92915050565b600254600090801561066b57610666816106f9610503565b859190610f53565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461075d576107388382611571565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610785908490611571565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061163d833981519152906107ce9087815260200190565b60405180910390a3506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610812576105b4610f81565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b0381166000908152600360205260408120546106db90610647565b60006106db82610647565b600061086f83610f29565b9050806108b15760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064015b60405180910390fd5b6108e66001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661101b565b6108f082826110a5565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106db83826110ff565b600061094b83610a4f565b90506109826001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461101b565b61098c82846110a5565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106db81846110ff565b600180546105c690611520565b33600090815260036020526040812080548391908390610a0a908490611571565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061163d833981519152906106cf9086815260200190565b600254600090801561066b57610666610a66610503565b849083610f53565b6000610a79846106e1565b9050336001600160a01b03831614610ae9576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610ae757610ac28282611571565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610af384826111a4565b610afd8282611217565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461066d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611279565b6000336001600160a01b03831614610bec576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610bea57610bc58582611571565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610bf584610859565b905080610c325760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b60448201526064016108a8565b610c3c81856111a4565b610c468285611217565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461066d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611279565b600254600090801561066b5761066681610cdd610503565b859190610f34565b42841015610d355760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016108a8565b60006001610d416107e1565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e4d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e835750876001600160a01b0316816001600160a01b0316145b610ec05760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016108a8565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006106db82610cc5565b828202811515841585830485141716610f4c57600080fd5b0492915050565b828202811515841585830485141716610f6b57600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610fb39190611588565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061109e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108a8565b5050505050565b80600260008282546110b79190611624565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061163d83398151915291015b60405180910390a35050565b604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb158906044015b600060405180830381600087803b15801561118857600080fd5b505af115801561119c573d6000803e3d6000fd5b505050505050565b604051630441a3e760e41b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e709060440161116e565b6001600160a01b0382166000908152600360205260408120805483929061123f908490611571565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061163d833981519152906020016110f3565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806112f15760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016108a8565b50505050565b600060208083528351808285015260005b8181101561132457858101830151858201604001528201611308565b81811115611336576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561135e57600080fd5b5035919050565b80356001600160a01b038116811461137c57600080fd5b919050565b6000806040838503121561139457600080fd5b61139d83611365565b946020939093013593505050565b6000806000606084860312156113c057600080fd5b6113c984611365565b92506113d760208501611365565b9150604084013590509250925092565b6000602082840312156113f957600080fd5b61066d82611365565b6000806040838503121561141557600080fd5b8235915061142560208401611365565b90509250929050565b60008060006060848603121561144357600080fd5b8335925061145360208501611365565b915061146160408501611365565b90509250925092565b600080600080600080600060e0888a03121561148557600080fd5b61148e88611365565b965061149c60208901611365565b95506040880135945060608801359350608088013560ff811681146114c057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114f057600080fd5b6114f983611365565b915061142560208401611365565b60006020828403121561151957600080fd5b5051919050565b600181811c9082168061153457607f821691505b6020821081141561155557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115835761158361155b565b500390565b600080835481600182811c9150808316806115a457607f831692505b60208084108214156115c457634e487b7160e01b86526022600452602486fd5b8180156115d857600181146115e957611616565b60ff19861689528489019650611616565b60008a81526020902060005b8681101561160e5781548b8201529085019083016115f5565b505084890196505b509498975050505050505050565b600082198211156116375761163761155b565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080a000a0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da164736f6c634300080a000a",
    "sourceMap": "969:5386:90:-:0;;;1572:26:125;;;-1:-1:-1;;1572:26:125;1594:4;1572:26;;;1295:6:90;1271:30;;1329:4;1305:28;;1356:59;;;-1:-1:-1;;;;;;1356:59:90;1373:42;1356:59;;;1437:15;1419:33;;969:5386;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806370bdc855116200007a57806370bdc85514620001305780637f924c4e146200013a578063ba414fa61462000144578063d0e30db0146200015f578063d509b16c1462000169578063fa7626d4146200017357600080fd5b80630a9254e414620000c85780633a76846314620000d45780633af93d191462000108578063466620c9146200011257806351bcd38f146200011c57806358b4d79e1462000126575b600080fd5b620000d262000181565b005b620000eb60008051602062008f0b83398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000d2620007d4565b620000d262000939565b620000d262000acf565b620000d26200125f565b620000d262001667565b620000d2620019e2565b6200014e62001bac565b6040519015158152602001620000ff565b620000d262001cd7565b620000d262001f5a565b6000546200014e9060ff1681565b6012604051620001919062002508565b6060808252600990820152682a32b9ba2a37b5b2b760b91b608082015260a060208201819052600390820152621514d560ea1b60c082015260ff909116604082015260e001604051809103906000f080158015620001f3573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051601290620002259062002508565b60608082526009908201526830baba37aa37b5b2b760b91b608082015260a060208201819052600490820152634155544f60e01b60c082015260ff909116604082015260e001604051809103906000f08015801562000288573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169182179055604051620002b69062002516565b6001600160a01b039091168152602001604051809103906000f080158015620002e3573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b03928316908117909155600354604051921691620003179062002524565b620003249291906200255c565b604051809103906000f08015801562000341573d6000803e3d6000fd5b50600580546001600160a01b0319166001600160a01b03929092169190911790556040516372eb5f8160e11b81526001600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b158015620003ab57600080fd5b505af1158015620003c0573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526001600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b1580156200040d57600080fd5b505af115801562000422573d6000803e3d6000fd5b50505050600460009054906101000a90046001600160a01b0316600080306000604051620004509062002532565b6001600160a01b0395861681529385166020850152918416604084015283166060830152909116608082015260a001604051809103906000f0801580156200049c573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169182178155604051620004ca9062002540565b6001600160a01b03909216825263ffffffff166020820152604001604051809103906000f08015801562000502573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03928316908117909155600154604051638fb0091360e01b8152600481019290925290911690638fb0091390602401600060405180830381600087803b1580156200056257600080fd5b505af115801562000577573d6000803e3d6000fd5b50506003546001546004546006546040516001600160a01b039485169650928416945060009391821692911690620005af906200254e565b6001600160a01b0395861681529385166020850152604084019290925283166060830152909116608082015260a001604051809103906000f080158015620005fb573d6000803e3d6000fd5b506000805462010000600160b01b031916620100006001600160a01b0393841681029190911791829055600980549190920483166001600160a01b031990911681179091556001546040516338ae568b60e11b815260048101929092529091169063715cad1690602401600060405180830381600087803b1580156200068057600080fd5b505af115801562000695573d6000803e3d6000fd5b5050600654600354600554604051630a3d02c960e21b81526001600160a01b039283166004820152600160248201529082166044820152911692506328f40b249150606401600060405180830381600087803b158015620006f557600080fd5b505af11580156200070a573d6000803e3d6000fd5b50506040516372eb5f8160e11b81526002600482015260008051602062008f0b833981519152925063e5d6bf029150602401600060405180830381600087803b1580156200075757600080fd5b505af11580156200076c573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526002600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b158015620007b957600080fd5b505af1158015620007ce573d6000803e3d6000fd5b50505050565b620007de62001cd7565b6040516372eb5f8160e11b81526003600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200082757600080fd5b505af11580156200083c573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b1580156200088957600080fd5b505af11580156200089e573d6000803e3d6000fd5b50505050620008ac62001cd7565b600480546000546040516370a0823160e01b81526001600160a01b036201000090920482169381019390935262000937929116906370a08231906024015b602060405180830381865afa15801562000908573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092e919062002576565b600854620020d3565b565b6200094362001cd7565b6040516372eb5f8160e11b81526003600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200098c57600080fd5b505af1158015620009a1573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b158015620009ee57600080fd5b505af115801562000a03573d6000803e3d6000fd5b5050600054604051632d182be560e21b81526001600482015230602482018190526044820152620100009091046001600160a01b0316925063b460af9491506064016020604051808303816000875af115801562000a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8b919062002576565b50600480546000546040516370a0823160e01b81526001600160a01b036201000090920482169381019390935262000937929116906370a0823190602401620008ea565b62000ad962001cd7565b600a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062008f0b833981519152906306447d5690602401600060405180830381600087803b15801562000b2e57600080fd5b505af115801562000b43573d6000803e3d6000fd5b5050600354600a546007546040516340c10f1960e01b81526001600160a01b0392831660048201526024810191909152911692506340c10f199150604401600060405180830381600087803b15801562000b9c57600080fd5b505af115801562000bb1573d6000803e3d6000fd5b505060035460005460075460405163095ea7b360e01b81526001600160a01b03620100009093048316600482015260248101919091529116925063095ea7b391506044016020604051808303816000875af115801562000c15573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c3b919062002590565b50600054600754600a54604051636e553f6560e01b815260048101929092526001600160a01b0390811660248301526201000090920490911690636e553f65906044016020604051808303816000875af115801562000c9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cc4919062002576565b50604080516390c5013b60e01b8152905160008051602062008f0b833981519152916390c5013b91600480830192600092919082900301818387803b15801562000d0d57600080fd5b505af115801562000d22573d6000803e3d6000fd5b50506040516372eb5f8160e11b81526003600482015260008051602062008f0b833981519152925063e5d6bf029150602401600060405180830381600087803b15801562000d6f57600080fd5b505af115801562000d84573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b15801562000dd157600080fd5b505af115801562000de6573d6000803e3d6000fd5b5050600054604051632d182be560e21b81526001600482015230602482018190526044820152620100009091046001600160a01b0316925063b460af9491506064016020604051808303816000875af115801562000e48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e6e919062002576565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac9262000eaf92620100009091049091169030906004016200255c565b6020604051808303816000875af115801562000ecf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef5919062002576565b506040516372eb5f8160e11b815260048082015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b15801562000f3e57600080fd5b505af115801562000f53573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260048082015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b15801562000f9f57600080fd5b505af115801562000fb4573d6000803e3d6000fd5b5050600154600054600a5460405163cc6bc10160e01b81526001600160a01b03620100009093048316600482015230602482015290821660448201529116925063cc6bc101915060640160408051808303816000875af11580156200101d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010439190620025bb565b5050600154604051633bd73ee360e21b81523060048201526001600160a01b039091169063ef5cfb8c90602401600060405180830381600087803b1580156200108b57600080fd5b505af1158015620010a0573d6000803e3d6000fd5b5050600154600a54604051633bd73ee360e21b81526001600160a01b0391821660048201529116925063ef5cfb8c9150602401600060405180830381600087803b158015620010ee57600080fd5b505af115801562001103573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252620011a293506001600160a01b031691506370a08231906024015b602060405180830381865afa15801562001157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200117d919062002576565b60016002600854620011909190620025e0565b6200119c919062002603565b620020d3565b600480546040516370a0823160e01b81523092810192909252620011db916001600160a01b03909116906370a082319060240162001139565b600480546001546040516370a0823160e01b81526001600160a01b039182169381019390935262000937929116906370a08231906024015b602060405180830381865afa15801562001231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001257919062002576565b6000620020d3565b6200126962001cd7565b6040516372eb5f8160e11b81526003600482015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b158015620012b257600080fd5b505af1158015620012c7573d6000803e3d6000fd5b50506040516301f7b4f360e41b81526003600482015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b1580156200131457600080fd5b505af115801562001329573d6000803e3d6000fd5b5050600054604051632d182be560e21b81526001600482015230602482018190526044820152620100009091046001600160a01b0316925063b460af9491506064016020604051808303816000875af11580156200138b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013b1919062002576565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac92620013f292620100009091049091169030906004016200255c565b6020604051808303816000875af115801562001412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001438919062002576565b506040516372eb5f8160e11b815260048082015260008051602062008f0b8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200148157600080fd5b505af115801562001496573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260048082015260008051602062008f0b8339815191529250631f7b4f309150602401600060405180830381600087803b158015620014e257600080fd5b505af1158015620014f7573d6000803e3d6000fd5b5050600154600054604051632e6f912b60e21b81526001600160a01b03928316945063b9be44ac93506200153b92620100009092049091169030906004016200255c565b6020604051808303816000875af11580156200155b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001581919062002576565b50600154604051633bd73ee360e21b81523060048201526001600160a01b039091169063ef5cfb8c90602401600060405180830381600087803b158015620015c857600080fd5b505af1158015620015dd573d6000803e3d6000fd5b5050600480546040516370a0823160e01b815230928101929092526200093793506001600160a01b031691506370a0823190602401602060405180830381865afa15801562001630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001656919062002576565b60016008546200119c919062002603565b6200171d600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620016bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620016e991908101906200266e565b60405180604001604052806015815260200174135a59185cc815195cdd151bdad95b8815985d5b1d605a1b815250620021ce565b620017c3600060029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562001775573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200179f91908101906200266e565b604051806040016040528060058152602001641b5d9514d560da1b815250620021ce565b62001853600060029054906101000a90046001600160a01b03166001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200181b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200184191906200273d565b6003546001600160a01b031662002305565b620018e3600060029054906101000a90046001600160a01b03166001600160a01b031663465f0fbd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018d191906200273d565b6006546001600160a01b031662002305565b60095460005462001907916001600160a01b03908116916201000090041662002305565b600354600054600654604051636eb1769f60e11b81526200199b936001600160a01b039081169363dd62ed3e936200194e936201000090920483169216906004016200255c565b602060405180830381865afa1580156200196c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001992919062002576565b600019620020d3565b60048054600054600254604051636eb1769f60e11b815262000937946001600160a01b039485169463dd62ed3e946200194e9462010000909104821693911691016200255c565b620019ec62001cd7565b6003546040516370a0823160e01b815230600482015262001a20916001600160a01b0316906370a082319060240162001213565b6003546006546040516370a0823160e01b81526001600160a01b03918216600482015262001a5c9291909116906370a082319060240162001213565b6003546005546040516370a0823160e01b81526001600160a01b03918216600482015262001ae09291909116906370a08231906024015b602060405180830381865afa15801562001ab1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad7919062002576565b600754620020d3565b62001b38600060029054906101000a90046001600160a01b03166001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001ab1573d6000803e3d6000fd5b600054604051633af9e66960e01b815230600482015262001b72916201000090046001600160a01b031690633af9e6699060240162001a93565b6000546040516370a0823160e01b815230600482015262000937916201000090046001600160a01b0316906370a082319060240162001a93565b60008054610100900460ff161562001bcd5750600054610100900460ff1690565b600060008051602062008f0b8339815191523b1562001cd2576040805160008051602062008f0b833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001c54917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200275d565b60408051601f198184030181529082905262001c709162002790565b6000604051808303816000865af19150503d806000811462001caf576040519150601f19603f3d011682016040523d82523d6000602084013e62001cb4565b606091505b509150508080602001905181019062001cce919062002590565b9150505b919050565b6003546007546040516340c10f1960e01b815230600482015260248101919091526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801562001d2857600080fd5b505af115801562001d3d573d6000803e3d6000fd5b505060035460005460075460405163095ea7b360e01b81526001600160a01b03620100009093048316600482015260248101919091529116925063095ea7b391506044016020604051808303816000875af115801562001da1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dc7919062002590565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac9262001e0892620100009091049091169030906004016200255c565b6020604051808303816000875af115801562001e28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e4e919062002576565b50600054600754604051636e553f6560e01b81526004810191909152306024820152620100009091046001600160a01b031690636e553f65906044016020604051808303816000875af115801562001eaa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ed0919062002576565b50600154600054604051632e6f912b60e21b81526001600160a01b039283169263b9be44ac9262001f1192620100009091049091169030906004016200255c565b6020604051808303816000875af115801562001f31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f57919062002576565b50565b62001f6462001cd7565b600054600754604051632d182be560e21b8152600481019190915230602482018190526044820152620100009091046001600160a01b03169063b460af94906064016020604051808303816000875af115801562001fc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fec919062002576565b506003546040516370a0823160e01b815230600482015262002021916001600160a01b0316906370a082319060240162001a93565b6003546006546040516370a0823160e01b81526001600160a01b0391821660048201526200205d9291909116906370a082319060240162001213565b6003546005546040516370a0823160e01b81526001600160a01b039182166004820152620020999291909116906370a082319060240162001213565b6000546040516370a0823160e01b815230600482015262000937916201000090046001600160a01b0316906370a082319060240162001213565b808214620021ca577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620021469060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200217f9190620027ae565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620021b89190620027e7565b60405180910390a1620021ca620023ff565b5050565b80604051602001620021e1919062002790565b60405160208183030381529060405280519060200120826040516020016200220a919062002790565b6040516020818303038152906040528051906020012014620021ca577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620022939060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620022cc919062002840565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620021b8919062002875565b806001600160a01b0316826001600160a01b031614620021ca577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200238d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620023c69190620028aa565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620021b89190620028ef565b60008051602062008f0b8339815191523b15620024f7576040805160008051602062008f0b833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200249292916020016200275d565b60408051601f1981840301815290829052620024ae9162002790565b6000604051808303816000865af19150503d8060008114620024ed576040519150601f19603f3d011682016040523d82523d6000602084013e620024f2565b606091505b505050505b6000805461ff001916610100179055565b610fd3806200291b83390190565b6111b780620038ee83390190565b6106408062004aa583390190565b61147b80620050e583390190565b610a8e806200656083390190565b611f1d8062006fee83390190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156200258957600080fd5b5051919050565b600060208284031215620025a357600080fd5b81518015158114620025b457600080fd5b9392505050565b60008060408385031215620025cf57600080fd5b505080516020909101519092909150565b600082620025fe57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156200262457634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200265c57818101518382015260200162002642565b83811115620007ce5750506000910152565b6000602082840312156200268157600080fd5b815167ffffffffffffffff808211156200269a57600080fd5b818401915084601f830112620026af57600080fd5b815181811115620026c457620026c462002629565b604051601f8201601f19908116603f01168101908382118183101715620026ef57620026ef62002629565b816040528281528760208487010111156200270957600080fd5b6200271c8360208301602088016200263f565b979650505050505050565b6001600160a01b038116811462001f5757600080fd5b6000602082840312156200275057600080fd5b8151620025b48162002727565b6001600160e01b0319831681528151600090620027828160048501602087016200263f565b919091016004019392505050565b60008251620027a48184602087016200263f565b9190910192915050565b604081526000620027d960408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000620027d960408301600a815269080808081058dd1d585b60b21b602082015260400190565b600081518084526200282c8160208601602086016200263f565b601f01601f19169290920160200192915050565b604081526009604082015268202056616c7565206160b81b6060820152608060208201526000620025b4608083018462002812565b60408152600960408201526810102b30b63ab2903160b91b6060820152608060208201526000620025b4608083018462002812565b604081526000620028d560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620028d560408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60e06040523480156200001157600080fd5b5060405162000fd338038062000fd383398101604081905262000034916200029a565b82828282600090805190602001906200004f92919062000127565b5081516200006590600190602085019062000127565b5060ff81166080524660a0526200007b6200008b565b60c0525062000400945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000bf91906200035c565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b82805462000135906200031f565b90600052602060002090601f016020900481019282620001595760008555620001a4565b82601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f557600080fd5b81516001600160401b0380821115620002125762000212620001cd565b604051601f8301601f19908116603f011681019082821181831017156200023d576200023d620001cd565b816040528381526020925086838588010111156200025a57600080fd5b600091505b838210156200027e57858201830151818301840152908201906200025f565b83821115620002905760008385830101525b9695505050505050565b600080600060608486031215620002b057600080fd5b83516001600160401b0380821115620002c857600080fd5b620002d687838801620001e3565b94506020860151915080821115620002ed57600080fd5b50620002fc86828701620001e3565b925050604084015160ff811681146200031457600080fd5b809150509250925092565b600181811c908216806200033457607f821691505b602082108114156200035657634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200037957607f831692505b60208084108214156200039a57634e487b7160e01b86526022600452602486fd5b818015620003b15760018114620003c357620003f2565b60ff19861689528489019650620003f2565b60008a81526020902060005b86811015620003ea5781548b820152908501908301620003cf565b505084890196505b509498975050505050505050565b60805160a05160c051610ba362000430600039600061046f0152600061043a0152600061015f0152610ba36000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac146101f8578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806370a08231146101b05780637ecebe00146101d057806395d89b41146101f057600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b60405161010491906108bb565b60405180910390f35b61012061011b36600461092c565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610956565b610356565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b610139610436565b6101ae6101a936600461092c565b610491565b005b6101396101be366004610992565b60036020526000908152604090205481565b6101396101de366004610992565b60056020526000908152604090205481565b6100f761049f565b6101ae61020636600461092c565b6104ac565b61012061021936600461092c565b6104b6565b6101ae61022c3660046109b4565b61051c565b61013961023f366004610a27565b600460209081526000928352604080842090915290825290205481565b6000805461026990610a5a565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610a5a565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103459086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103b25761038d8382610aab565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103da908490610aab565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610b77833981519152906104239087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461046c57610467610765565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61049b82826107ff565b5050565b6001805461026990610a5a565b61049b8282610859565b336000908152600360205260408120805483919083906104d7908490610aab565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610b77833981519152906103459086815260200190565b428410156105715760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161057d610436565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610689573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106bf5750876001600160a01b0316816001600160a01b0316145b6106fc5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610568565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107979190610ac2565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546108119190610b5e565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610b7783398151915291015b60405180910390a35050565b6001600160a01b03821660009081526003602052604081208054839290610881908490610aab565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610b778339815191529060200161084d565b600060208083528351808285015260005b818110156108e8578581018301518582016040015282016108cc565b818111156108fa576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461092757600080fd5b919050565b6000806040838503121561093f57600080fd5b61094883610910565b946020939093013593505050565b60008060006060848603121561096b57600080fd5b61097484610910565b925061098260208501610910565b9150604084013590509250925092565b6000602082840312156109a457600080fd5b6109ad82610910565b9392505050565b600080600080600080600060e0888a0312156109cf57600080fd5b6109d888610910565b96506109e660208901610910565b95506040880135945060608801359350608088013560ff81168114610a0a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a3a57600080fd5b610a4383610910565b9150610a5160208401610910565b90509250929050565b600181811c90821680610a6e57607f821691505b60208210811415610a8f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610abd57610abd610a95565b500390565b600080835481600182811c915080831680610ade57607f831692505b6020808410821415610afe57634e487b7160e01b86526022600452602486fd5b818015610b125760018114610b2357610b50565b60ff19861689528489019650610b50565b60008a81526020902060005b86811015610b485781548b820152908501908301610b2f565b505084890196505b509498975050505050505050565b60008219821115610b7157610b71610a95565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080a000a60806040526910f0cf064dd592000000600355661c6bf526340000600455623b56f860055534801561003057600080fd5b506040516111b73803806111b783398101604081905261004f91610074565b600680546001600160a01b0319166001600160a01b03929092169190911790556100a4565b60006020828403121561008657600080fd5b81516001600160a01b038116811461009d57600080fd5b9392505050565b611104806100b36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806369f94adf1161008c57806393f1a40b1161006657806393f1a40b14610311578063a96fe44314610355578063e2bbb1581461035e578063e7fa1e861461037157600080fd5b806369f94adf146102c05780637b84daec146102eb5780638dbb1e3a146102fe57600080fd5b806328f40b24116100c857806328f40b2414610156578063441a3e701461029157806348cd4cb1146102a457806351eb05a6146102ad57600080fd5b8063081e3eda146100ef5780631526fe271461010657806317caf6f11461014d575b600080fd5b6000545b6040519081526020015b60405180910390f35b610119610114366004610f5b565b61037a565b604080516001600160a01b03968716815260208101959095528401929092526060830152909116608082015260a0016100fd565b6100f360025481565b61028f610164366004610f8c565b60028290556040805160a0810182526001600160a01b0394851681526020810193845243918101918252600060608201818152938616608083019081528154600181018355918052915160059091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180549288166001600160a01b031993841617905594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56486015591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56585015591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56684015590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5679092018054929093169116179055565b005b61028f61029f366004610fce565b6103c8565b6100f360055481565b61028f6102bb366004610f5b565b61089c565b6006546102d3906001600160a01b031681565b6040516001600160a01b0390911681526020016100fd565b6100f36102f9366004610ff0565b610a4d565b6100f361030c366004610fce565b610bd3565b61034061031f366004610ff0565b60016020818152600093845260408085209091529183529120805491015482565b604080519283526020830191909152016100fd565b6100f360035481565b61028f61036c366004610fce565b610c63565b6100f360045481565b6000818154811061038a57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0393841695509193909290911685565b6103d18261089c565b60008083815481106103e5576103e5611020565b60009182526020808320868452600182526040808520338652909252908320835460059093029091019350919081908690811061042457610424611020565b906000526020600020906005020160040160009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104aa9190611036565b905060008086815481106104c0576104c0611020565b906000526020600020906005020160040160009054906101000a90046001600160a01b03166001600160a01b03166344a3955e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190611036565b835490915061058f5760405162461bcd60e51b815260206004820152601060248201526f0757365722e73686172657320697320360841b60448201526064015b60405180910390fd5b600081116105d25760405162461bcd60e51b815260206004820152601060248201526f0736861726573546f74616c20697320360841b6044820152606401610586565b6000836001015464e8d4a51000866003015486600001546105f39190611065565b6105fd9190611084565b61060791906110a6565b905080156106865760065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068491906110bd565b505b6000828486600001546106999190611065565b6106a39190611084565b9050808711156106b1578096505b86156108695760008089815481106106cb576106cb611020565b60009182526020909120600460059092020181015460405163f3fef3a360e01b81523392810192909252602482018a90526001600160a01b03169063f3fef3a3906044016020604051808303816000875af115801561072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107529190611036565b86549091508111156107675760008655610777565b85546107749082906110a6565b86555b86546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190611036565b9050888110156107f1578098505b875460405163a9059cbb60e01b8152336004820152602481018b90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610841573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086591906110bd565b5050505b6003860154855464e8d4a510009161088091611065565b61088a9190611084565b85600101819055505050505050505050565b60008082815481106108b0576108b0611020565b90600052602060002090600502019050806002015443116108cf575050565b60008160040160009054906101000a90046001600160a01b03166001600160a01b03166344a3955e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611036565b90508061095c57504360029091015550565b600061096c836002015443610bd3565b90506000811161097c5750505050565b60006002548460010154600454846109949190611065565b61099e9190611065565b6109a89190611084565b6006546040516340c10f1960e01b8152306004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156109f557600080fd5b505af1158015610a09573d6000803e3d6000fd5b50505050828164e8d4a51000610a1f9190611065565b610a299190611084565b8460030154610a3891906110df565b60038501555050436002909201919091555050565b60008060008481548110610a6357610a63611020565b600091825260208083208784526001825260408085206001600160a01b03808a16875290845281862060046005909602909301858101548351632251caaf60e11b8152935191985093969593909116936344a3955e93838101939192918290030181865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190611036565b90506000808781548110610b1357610b13611020565b906000526020600020906005020160040160009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b999190611036565b905081610bad576000945050505050610bcd565b82548290610bbc908390611065565b610bc69190611084565b9450505050505b92915050565b600354600654604080516318160ddd60e01b81529051600093926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190611036565b10610c5257506000610bcd565b610c5c83836110a6565b9392505050565b610c6c8261089c565b6000808381548110610c8057610c80611020565b60009182526020808320868452600182526040808520338652909252922080546005909202909201925015610d9e576000816001015464e8d4a5100084600301548460000154610cd09190611065565b610cda9190611084565b610ce491906110a6565b90507f63a242a632efe33c0e210e04e4173612a17efa4f16aa4890bc7e46caece80de081604051610d1791815260200190565b60405180910390a18015610d9c5760065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a91906110bd565b505b505b8215610f2f5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610dfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1e91906110bd565b50815460048084015460405163095ea7b360e01b81526001600160a01b0391821692810192909252602482018690529091169063095ea7b3906044016020604051808303816000875af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d91906110bd565b506004828101546040516311f9fbc960e21b81523392810192909252602482018590526000916001600160a01b03909116906347e7ef24906044016020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190611036565b8254909150610f2b9082906110df565b8255505b6003820154815464e8d4a5100091610f4691611065565b610f509190611084565b600190910155505050565b600060208284031215610f6d57600080fd5b5035919050565b6001600160a01b0381168114610f8957600080fd5b50565b600080600060608486031215610fa157600080fd5b8335610fac81610f74565b9250602084013591506040840135610fc381610f74565b809150509250925092565b60008060408385031215610fe157600080fd5b50508035926020909101359150565b6000806040838503121561100357600080fd5b82359150602083013561101581610f74565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561104857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561107f5761107f61104f565b500290565b6000826110a157634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156110b8576110b861104f565b500390565b6000602082840312156110cf57600080fd5b81518015158114610c5c57600080fd5b600082198211156110f2576110f261104f565b50019056fea164736f6c634300080a000a6080604052600160025560016003556001600455600160055534801561002457600080fd5b506040516106403803806106408339810160408190526100439161009a565b60068054610100600160a81b0319166101006001600160a01b0394851602179055600780546001600160a01b031916919092161790556100cd565b80516001600160a01b038116811461009557600080fd5b919050565b600080604083850312156100ad57600080fd5b6100b68361007e565b91506100c46020840161007e565b90509250929050565b610564806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806368f541621161007157806368f54162146100f8578063e5dd455a14610101578063e7a036791461011e578063ee50dc341461014e578063f3fef3a314610157578063fa9748411461016a57600080fd5b80631334903f146100ae57806342da4eb3146100ca57806344a3955e146100d357806347e7ef24146100dc57806367057b6c146100ef575b600080fd5b6100b760025481565b6040519081526020015b60405180910390f35b6100b760005481565b6100b760015481565b6100b76100ea36600461045e565b61017d565b6100b760055481565b6100b760045481565b60065461010e9060ff1681565b60405190151581526020016100c1565b6006546101369061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b6100b760035481565b6100b761016536600461045e565b61028a565b600754610136906001600160a01b031681565b6006546040516323b872dd60e01b81523360048201523060248201526044810183905260009161010090046001600160a01b0316906323b872dd906064016020604051808303816000875af11580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe9190610496565b5060005482901580159061021457506000600154115b156102505760035460005460025460015461022f90876104ce565b61023991906104ce565b61024391906104ed565b61024d91906104ed565b90505b8060015461025e919061050f565b60015560065460ff161561027157610283565b8260005461027f919061050f565b6000555b9392505050565b60008082116102cf5760405162461bcd60e51b815260206004820152600d60248201526c05f77616e74416d74203c3d203609c1b604482015260640160405180910390fd5b600080546001546102e090856104ce565b6102ea91906104ed565b90506001548111156102fb57506001545b806001546103099190610527565b60015560055460045410156103355760055460045461032890856104ce565b61033291906104ed565b92505b6006546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a7919061053e565b9050808411156103b5578093505b8360005410156103c55760005493505b836000546103d39190610527565b60005560065460075460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052610100909204169063a9059cbb906044016020604051808303816000875af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610496565b5090949350505050565b6000806040838503121561047157600080fd5b82356001600160a01b038116811461048857600080fd5b946020939093013593505050565b6000602082840312156104a857600080fd5b8151801515811461028357600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156104e8576104e86104b8565b500290565b60008261050a57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610522576105226104b8565b500190565b600082821015610539576105396104b8565b500390565b60006020828403121561055057600080fd5b505191905056fea164736f6c634300080a000a60a06040523480156200001157600080fd5b506040516200147b3803806200147b833981016040819052620000349162000119565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b0393841660805250600380549284166001600160a01b03199384161790556004805491909316911617905562000199565b6001600160a01b03811681146200011657600080fd5b50565b600080600080600060a086880312156200013257600080fd5b85516200013f8162000100565b6020870151909550620001528162000100565b6040870151909450620001658162000100565b6060870151909350620001788162000100565b60808701519092506200018b8162000100565b809150509295509295909350565b6080516112b1620001ca60003960008181610350015281816105f30152818161067701526108b901526112b16000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b9be44ac116100ad578063dde684a511610071578063dde684a5146102b6578063e1e3dfeb14610312578063ef5cfb8c14610325578063f046ee5c14610338578063f7c618c11461034b57600080fd5b8063b9be44ac14610244578063bf7e214f14610257578063c2ee3a081461026a578063c3b2886414610279578063cc6bc1011461028e57600080fd5b80637a9e5e4b116100f45780637a9e5e4b146101b25780637fb5ad38146101c55780638da5cb5b146101f35780638fb009131461021e578063ab5497d71461023157600080fd5b8063116139d31461012657806313af4035146101775780635a826df31461018c578063715cad161461019f575b600080fd5b61015a610134366004611046565b60076020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b61018a61018536600461107f565b610372565b005b61018a61019a36600461107f565b6103f8565b61018a6101ad36600461107f565b610474565b61018a6101c036600461107f565b6104b2565b6101e56101d336600461107f565b60056020526000908152604090205481565b60405190815260200161016e565b600054610206906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61018a61022c36600461107f565b61059c565b600454610206906001600160a01b031681565b6101e5610252366004611046565b6106ec565b600154610206906001600160a01b031681565b61015a670de0b6b3a764000081565b610281610762565b60405161016e91906110a3565b6102a161029c3660046110f0565b6107c4565b6040805192835260208301919091520161016e565b6102ee6102c436600461107f565b6006602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff90911660208301520161016e565b61020661032036600461113b565b61084d565b61018a61033336600461107f565b610877565b600354610206906001600160a01b031681565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610388336000356001600160e01b03191661092b565b6103ad5760405162461bcd60e51b81526004016103a490611154565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61040e336000356001600160e01b03191661092b565b61042a5760405162461bcd60e51b81526004016103a490611154565b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b61048a336000356001600160e01b03191661092b565b6104a65760405162461bcd60e51b81526004016103a490611154565b6104af816109d5565b50565b6000546001600160a01b0316331480610547575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061050690339030906001600160e01b0319600035169060040161117a565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906111a7565b61055057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6105b2336000356001600160e01b03191661092b565b6105ce5760405162461bcd60e51b81526004016103a490611154565b6003546040516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b905080156106a1576003546106a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b600380546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b6001600160a01b03821660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff16928201929092529061074157600091505061075c565b61074b8482610b95565b9050610758848483610dd7565b9150505b92915050565b606060028054806020026020016040519081016040528092919081815260200182805480156107ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161079c575b5050505050905090565b6001600160a01b03831660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff1692820192909252829161081d576000809250925050610845565b6108278682610b95565b9050610834868683610dd7565b61083f878684610dd7565b92509250505b935093915050565b6002818154811061085d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260409020548015610927576001600160a01b038083166000908152600560205260408120556003546108e3917f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc678260405161091e91815260200190565b60405180910390a25b5050565b6001546000906001600160a01b031680158015906109b5575060405163b700961360e01b81526001600160a01b0382169063b7009613906109749087903090889060040161117a565b602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b591906111a7565b8061075857506000546001600160a01b0385811691161491505092915050565b6001600160a01b0381166000908152600660205260409020546001600160e01b031615610a2f5760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b60448201526064016103a4565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610a5a42611008565b63ffffffff9081169091526001600160a01b038316600081815260066020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355600280546001810182559084527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b8e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103a4565b5050505050565b6040805180820190915260008082526020820152600354602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906111c9565b83925090508015610dd0576004546000906001600160a01b0316610cb457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906111c9565b610d24565b60048054604051631e1932fb60e01b81526001600160a01b0388811693820193909352911690631e1932fb90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906111c9565b905060008115610d5657610d5382610d44670de0b6b3a7640000866111f8565b610d4e9190611217565b61101f565b90505b6040518060400160405280828760000151610d719190611239565b6001600160e01b03168152602001610d8842611008565b63ffffffff9081169091526001600160a01b0388166000908152600660209081526040909120835191840151909216600160e01b026001600160e01b03909116179055935050505b5092915050565b80516001600160a01b038481166000908152600760209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b03198316179092559192911680610e305750670de0b6b3a76400005b6000610e3c8284611264565b6004549091506000906001600160a01b0316610ec1576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906111c9565b610f39565b60048054604051631a50ef2f60e01b81526001600160a01b038b8116938201939093528983166024820152911690631a50ef2f90604401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906111c9565b90506000670de0b6b3a7640000610f596001600160e01b038516846111f8565b610f639190611217565b6001600160a01b03891660009081526005602052604081205491925090610f8b90839061128c565b6001600160a01b03808b16600081815260056020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce90610ff39086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b6000640100000000821061101b57600080fd5b5090565b6000600160e01b821061101b57600080fd5b6001600160a01b03811681146104af57600080fd5b6000806040838503121561105957600080fd5b823561106481611031565b9150602083013561107481611031565b809150509250929050565b60006020828403121561109157600080fd5b813561109c81611031565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110e45783516001600160a01b0316835292840192918401916001016110bf565b50909695505050505050565b60008060006060848603121561110557600080fd5b833561111081611031565b9250602084013561112081611031565b9150604084013561113081611031565b809150509250925092565b60006020828403121561114d57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111b957600080fd5b8151801515811461109c57600080fd5b6000602082840312156111db57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611212576112126111e2565b500290565b60008261123457634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160e01b0382811684821680830382111561125b5761125b6111e2565b01949350505050565b60006001600160e01b0383811690831681811015611284576112846111e2565b039392505050565b6000821982111561129f5761129f6111e2565b50019056fea164736f6c634300080a000a60e060405234801561001057600080fd5b50604051610a8e380380610a8e83398101604081905261002f91610187565b818181806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b091906101ca565b6001600160a01b03811660808190529091506100da90836000196100ee602090811b6104a017901c565b505063ffffffff1660c052506101ee915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806101695760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6001600160a01b038116811461018457600080fd5b50565b6000806040838503121561019a57600080fd5b82516101a58161016f565b602084015190925063ffffffff811681146101bf57600080fd5b809150509250929050565b6000602082840312156101dc57600080fd5b81516101e78161016f565b9392505050565b60805160a05160c051610857610237600039600081816061015261032001526000818160a201526101a20152600081816101020152818161055d01526105dd01526108576000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636fcf5e5f1461005c5780637acf5b921461009d578063b334db7b146100dc578063f7c618c1146100fd578063faa6c3c814610124575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b6100ef6100ea3660046106b1565b610195565b604051908152602001610094565b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6101696101323660046106f1565b60006020819052908152604090205463ffffffff80821691640100000000810490911690600160401b90046001600160c01b031683565b6040805163ffffffff94851681529390921660208401526001600160c01b031690820152606001610094565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101e05760405163739e221160e01b815260040160405180910390fd5b6001600160a01b0383166000908152602081815260408083208151606081018352905463ffffffff808216835264010000000082041693820193909352600160401b9092046001600160c01b0316908201529061023c42610522565b90506000826020015163ffffffff168263ffffffff16101561025e5781610264565b82602001515b90506000836000015163ffffffff168663ffffffff1611156102865785610289565b83515b9050836020015163ffffffff1660001461030557835160208501516102ae9190610729565b63ffffffff166102be8284610729565b63ffffffff1685604001516102d3919061074e565b6102dd9190610793565b6001600160c01b0316945083604001516001600160c01b0316851115610305576103056107b9565b836020015163ffffffff168363ffffffff16106104965760007f00000000000000000000000000000000000000000000000000000000000000008061034a81876107cf565b61035491906107f7565b61035e919061080e565b9050600061036b89610539565b905060405180606001604052808663ffffffff1681526020018363ffffffff168152602001826001600160c01b03168152506000808b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a8154816001600160c01b0302191690836001600160c01b031602179055509050508163ffffffff168563ffffffff167f2bc72eed7f7ea7cb3bf6969b33e204748849532a1f8e4ca68ba1bc97c4cf2e008360405161048b91906001600160c01b0391909116815260200190565b60405180910390a350505b5050505092915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061051c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b6000640100000000821061053557600080fd5b5090565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610831565b90508015610605576106056001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684308461060b565b92915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061068e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610513565b5050505050565b80356001600160a01b03811681146106ac57600080fd5b919050565b600080604083850312156106c457600080fd5b6106cd83610695565b9150602083013563ffffffff811681146106e657600080fd5b809150509250929050565b60006020828403121561070357600080fd5b61070c82610695565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8381169083168181101561074657610746610713565b039392505050565b60006001600160c01b038281168482168115158284048211161561077457610774610713565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b03838116806107ad576107ad61077d565b92169190910492915050565b634e487b7160e01b600052600160045260246000fd5b600063ffffffff8083168185168083038211156107ee576107ee610713565b01949350505050565b600063ffffffff808416806107ad576107ad61077d565b600063ffffffff8083168185168183048111821515161561077457610774610713565b60006020828403121561084357600080fd5b505191905056fea164736f6c634300080a000a6101606040523480156200001257600080fd5b5060405162001f1d38038062001f1d8339810160408190526200003591620004e1565b84856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009f91908101906200059e565b604051602001620000b1919062000656565b604051602081830303815290604052866001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200012991908101906200059e565b6040516020016200013b919062000696565b6040516020818303038152906040528181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b19190620006c2565b8251620001c690600090602086019062000422565b508151620001dc90600190602085019062000422565b5060ff81166080524660a052620001f262000386565b60c052505050506001600160a01b0391821660e08190526101008690528383166101208190529287166101405260405163095ea7b360e01b8152600481019390935260001960248401529163095ea7b391506044016020604051808303816000875af115801562000267573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028d9190620006ee565b50816001600160a01b031663095ea7b3610140516001600160a01b031663f046ee5c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000305919062000712565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037a9190620006ee565b50505050505062000813565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620003ba91906200076f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620004309062000732565b90600052602060002090601f0160209004810192826200045457600085556200049f565b82601f106200046f57805160ff19168380011785556200049f565b828001600101855582156200049f579182015b828111156200049f57825182559160200191906001019062000482565b50620004ad929150620004b1565b5090565b5b80821115620004ad5760008155600101620004b2565b6001600160a01b0381168114620004de57600080fd5b50565b600080600080600060a08688031215620004fa57600080fd5b85516200050781620004c8565b60208701519095506200051a81620004c8565b6040870151606088015191955093506200053481620004c8565b60808701519092506200054781620004c8565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005885781810151838201526020016200056e565b8381111562000598576000848401525b50505050565b600060208284031215620005b157600080fd5b81516001600160401b0380821115620005c957600080fd5b818401915084601f830112620005de57600080fd5b815181811115620005f357620005f362000555565b604051601f8201601f19908116603f011681019083821181831017156200061e576200061e62000555565b816040528281528760208487010111156200063857600080fd5b6200064b8360208301602088016200056b565b979650505050505050565b65026b4b230b9960d51b815260008251620006798160068501602087016200056b565b650815985d5b1d60d21b6006939091019283015250600c01919050565b6136bb60f11b815260008251620006b58160028501602087016200056b565b9190910160020192915050565b600060208284031215620006d557600080fd5b815160ff81168114620006e757600080fd5b9392505050565b6000602082840312156200070157600080fd5b81518015158114620006e757600080fd5b6000602082840312156200072557600080fd5b8151620006e781620004c8565b600181811c908216806200074757607f821691505b602082108114156200076957634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200078c57607f831692505b6020808410821415620007ad57634e487b7160e01b86526022600452602486fd5b818015620007c45760018114620007d65762000805565b60ff1986168952848901965062000805565b60008a81526020902060005b86811015620007fd5781548b820152908501908301620007e2565b505084890196505b509498975050505050505050565b60805160a05160c05160e051610100516101205161014051611669620008b460003960006103cb01526000818161035e015281816105410152818161113b01526111e0015260008181610322015281816105120152818161110e01526111b30152600081816102d0015281816108be0152818161095a01528181610b550152610c9e01526000610815015260006107e50152600061028f01526116696000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063ba087652116100a2578063d505accf11610071578063d505accf14610487578063d905777e1461049c578063dd62ed3e146104c5578063ef8b30f7146104f057600080fd5b8063ba08765214610461578063c63d75b614610344578063c6e6f59214610474578063ce96cb771461030a57600080fd5b806395d89b41116100de57806395d89b4114610420578063a9059cbb14610428578063b3d7f6b91461043b578063b460af941461044e57600080fd5b806370a08231146103a65780637acf5b92146103c65780637ecebe00146103ed57806394bf804d1461040d57600080fd5b80633644e51511610187578063402d267d11610156578063402d267d14610344578063465f0fbd146103595780634cdad506146103805780636e553f651461039357600080fd5b80633644e515146102c357806338d52e0f146102cb5780633af9e6691461030a5780633e0dc34e1461031d57600080fd5b80630a28a477116101c35780630a28a4771461025b57806318160ddd1461026e57806323b872dd14610277578063313ce5671461028a57600080fd5b806301e1d114146101f557806306fdde031461021057806307a2d13a14610225578063095ea7b314610238575b600080fd5b6101fd610503565b6040519081526020015b60405180910390f35b6102186105b9565b60405161020791906112f7565b6101fd61023336600461134c565b610647565b61024b610246366004611381565b610674565b6040519015158152602001610207565b6101fd61026936600461134c565b6106e1565b6101fd60025481565b61024b6102853660046113ab565b610701565b6102b17f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610207565b6101fd6107e1565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610207565b6101fd6103183660046113e7565b610837565b6101fd7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6103523660046113e7565b5060001990565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd61038e36600461134c565b610859565b6101fd6103a1366004611402565b610864565b6101fd6103b43660046113e7565b60036020526000908152604090205481565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6103fb3660046113e7565b60056020526000908152604090205481565b6101fd61041b366004611402565b610940565b6102186109dc565b61024b610436366004611381565b6109e9565b6101fd61044936600461134c565b610a4f565b6101fd61045c36600461142e565b610a6e565b6101fd61046f36600461142e565b610b7c565b6101fd61048236600461134c565b610cc5565b61049a61049536600461146a565b610ce5565b005b6101fd6104aa3660046113e7565b6001600160a01b031660009081526003602052604090205490565b6101fd6104d33660046114dd565b600460209081526000928352604080842090915290825290205481565b6101fd6104fe36600461134c565b610f29565b604051631ee136bb60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637b84daec90604401602060405180830381865afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190611507565b905090565b600080546105c690611520565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290611520565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b505050505081565b600254600090801561066b5761066661065e610503565b849083610f34565b61066d565b825b9392505050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106cf9086815260200190565b60405180910390a35060015b92915050565b600254600090801561066b57610666816106f9610503565b859190610f53565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461075d576107388382611571565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610785908490611571565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061163d833981519152906107ce9087815260200190565b60405180910390a3506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610812576105b4610f81565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b0381166000908152600360205260408120546106db90610647565b60006106db82610647565b600061086f83610f29565b9050806108b15760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064015b60405180910390fd5b6108e66001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661101b565b6108f082826110a5565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106db83826110ff565b600061094b83610a4f565b90506109826001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461101b565b61098c82846110a5565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106db81846110ff565b600180546105c690611520565b33600090815260036020526040812080548391908390610a0a908490611571565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061163d833981519152906106cf9086815260200190565b600254600090801561066b57610666610a66610503565b849083610f53565b6000610a79846106e1565b9050336001600160a01b03831614610ae9576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610ae757610ac28282611571565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610af384826111a4565b610afd8282611217565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461066d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611279565b6000336001600160a01b03831614610bec576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610bea57610bc58582611571565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610bf584610859565b905080610c325760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b60448201526064016108a8565b610c3c81856111a4565b610c468285611217565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461066d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611279565b600254600090801561066b5761066681610cdd610503565b859190610f34565b42841015610d355760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016108a8565b60006001610d416107e1565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e4d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e835750876001600160a01b0316816001600160a01b0316145b610ec05760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016108a8565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006106db82610cc5565b828202811515841585830485141716610f4c57600080fd5b0492915050565b828202811515841585830485141716610f6b57600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610fb39190611588565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061109e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108a8565b5050505050565b80600260008282546110b79190611624565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061163d83398151915291015b60405180910390a35050565b604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb158906044015b600060405180830381600087803b15801561118857600080fd5b505af115801561119c573d6000803e3d6000fd5b505050505050565b604051630441a3e760e41b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e709060440161116e565b6001600160a01b0382166000908152600360205260408120805483929061123f908490611571565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061163d833981519152906020016110f3565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806112f15760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016108a8565b50505050565b600060208083528351808285015260005b8181101561132457858101830151858201604001528201611308565b81811115611336576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561135e57600080fd5b5035919050565b80356001600160a01b038116811461137c57600080fd5b919050565b6000806040838503121561139457600080fd5b61139d83611365565b946020939093013593505050565b6000806000606084860312156113c057600080fd5b6113c984611365565b92506113d760208501611365565b9150604084013590509250925092565b6000602082840312156113f957600080fd5b61066d82611365565b6000806040838503121561141557600080fd5b8235915061142560208401611365565b90509250929050565b60008060006060848603121561144357600080fd5b8335925061145360208501611365565b915061146160408501611365565b90509250925092565b600080600080600080600060e0888a03121561148557600080fd5b61148e88611365565b965061149c60208901611365565b95506040880135945060608801359350608088013560ff811681146114c057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114f057600080fd5b6114f983611365565b915061142560208401611365565b60006020828403121561151957600080fd5b5051919050565b600181811c9082168061153457607f821691505b6020821081141561155557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115835761158361155b565b500390565b600080835481600182811c9150808316806115a457607f831692505b60208084108214156115c457634e487b7160e01b86526022600452602486fd5b8180156115d857600181146115e957611616565b60ff19861689528489019650611616565b60008a81526020902060005b8681101561160e5781548b8201529085019083016115f5565b505084890196505b509498975050505050505050565b600082198211156116375761163761155b565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080a000a0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da164736f6c634300080a000a",
    "sourceMap": "969:5386:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:1028;;;:::i;:::-;;1012:40;;-1:-1:-1;;;;;;;;;;;1012:40:90;;;;;-1:-1:-1;;;;;190:32:161;;;172:51;;160:2;145:18;1012:40:90;;;;;;;;4595:200;;;:::i;4799:251::-;;;:::i;5542:811::-;;;:::i;5054:484::-;;;:::i;2489:568::-;;;:::i;3515:597::-;;;:::i;1819:584:125:-;;;:::i;:::-;;;399:14:161;;392:22;374:41;;362:2;347:18;1819:584:125;234:187:161;3061:450:90;;;:::i;4116:475::-;;;:::i;1572:26:125:-;;;;;;;;;1457:1028:90;1533:2;1499:37;;;;;:::i;:::-;764:2:161;746:21;;;803:1;783:18;;;776:29;-1:-1:-1;;;836:3:161;821:19;;814:40;892:3;885:4;870:20;;863:33;;;933:1;912:19;;;905:30;-1:-1:-1;;;966:3:161;951:19;;944:34;1062:4;1050:17;;;-1:-1:-1;1030:18:161;;1023:45;1010:3;995:19;1499:37:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1487:9:90;:49;;-1:-1:-1;;;;;;1487:49:90;-1:-1:-1;;;;;1487:49:90;;;;;;;;;;1554:38;;1589:2;;1554:38;;;:::i;:::-;1417:2:161;1399:21;;;1456:1;1436:18;;;1429:29;-1:-1:-1;;;1489:3:161;1474:19;;1467:40;1545:3;1538:4;1523:20;;1516:33;;;1586:1;1565:19;;;1558:30;-1:-1:-1;;;1619:3:161;1604:19;;1597:35;1716:4;1704:17;;;-1:-1:-1;1684:18:161;;1677:45;1664:3;1649:19;1554:38:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1542:9:90;:50;;-1:-1:-1;;;;;;1542:50:90;-1:-1:-1;;;;;1542:50:90;;;;;;;;;1613:38;;;;;:::i;:::-;-1:-1:-1;;;;;190:32:161;;;172:51;;160:2;145:18;1613:38:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1598:12:90;:53;;-1:-1:-1;;;;;;1598:53:90;-1:-1:-1;;;;;1598:53:90;;;;;;;;;1697:9;;1672:59;;1697:9;;;1672:59;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:12:90;:74;;-1:-1:-1;;;;;;1657:74:90;-1:-1:-1;;;;;1657:74:90;;;;;;;;;;1737:10;;-1:-1:-1;;;1737:10:90;;-1:-1:-1;1737:10:90;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;1737:7:90;;2377:18:161;;1737:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1753:10:90;;-1:-1:-1;;;1753:10:90;;1761:1;1753:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;1753:7:90;;-1:-1:-1;2377:18:161;;1753:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1805:9;;;;;;;;;-1:-1:-1;;;;;1805:9:90;1853:1;1889;1908:4;1939:1;1781:167;;;;;:::i;:::-;-1:-1:-1;;;;;2851:15:161;;;2833:34;;2903:15;;;2898:2;2883:18;;2876:43;2955:15;;;2950:2;2935:18;;2928:43;3007:15;;3002:2;2987:18;;2980:43;3060:15;;;3054:3;3039:19;;3032:44;2782:3;2767:19;1781:167:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1770:8:90;:178;;-1:-1:-1;;;;;;1770:178:90;-1:-1:-1;;;;;1770:178:90;;;;;;;;;1973:43;;;;;:::i;:::-;-1:-1:-1;;;;;3308:32:161;;;3290:51;;3389:10;3377:23;3372:2;3357:18;;3350:51;3278:2;3263:18;1973:43:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1955:15:90;:61;;-1:-1:-1;;;;;;1955:61:90;-1:-1:-1;;;;;1955:61:90;;;;;;;;;-1:-1:-1;2022:8:90;:44;;-1:-1:-1;;;2022:44:90;;;;;172:51:161;;;;2022:8:90;;;;:27;;145:18:161;;2022:44:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2118:9:90;;;2156:8;2183:9;;2220:12;;2091:149;;-1:-1:-1;;;;;2118:9:90;;;;-1:-1:-1;2156:8:90;;;;-1:-1:-1;2118:9:90;;2183;;;;2220:12;;;2091:149;;;:::i;:::-;-1:-1:-1;;;;;4060:15:161;;;4042:34;;4112:15;;;4107:2;4092:18;;4085:43;4159:2;4144:18;;4137:34;;;;4207:15;;4202:2;4187:18;;4180:43;4260:15;;;4254:3;4239:19;;4232:44;3991:3;3976:19;2091:149:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2073:15:90;:167;;-1:-1:-1;;;;;;2073:167:90;;-1:-1:-1;;;;;2073:167:90;;;;;;;;;;;;;2246:9;:43;;2272:15;;;;;;-1:-1:-1;;;;;;2246:43:90;;;;;;;;-1:-1:-1;2295:8:90;:41;;-1:-1:-1;;;2295:41:90;;;;;172:51:161;;;;2295:8:90;;;;:30;;145:18:161;;2295:41:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2379:12:90;;2410:9;;2434:12;;2379:69;;-1:-1:-1;;;2379:69:90;;-1:-1:-1;;;;;2410:9:90;;;2379:69;;;4773:34:161;2379:12:90;4823:18:161;;;4816:34;2434:12:90;;;4866:18:161;;;4859:43;2379:12:90;;;-1:-1:-1;2379:16:90;;-1:-1:-1;4708:18:161;;2379:69:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2454:10:90;;-1:-1:-1;;;2454:10:90;;2462:1;2454:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;2454:7:90;;-1:-1:-1;2377:18:161;;2454:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2470:10:90;;-1:-1:-1;;;2470:10:90;;2478:1;2470:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;2470:7:90;;-1:-1:-1;2377:18:161;;2470:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:1028::o;4595:200::-;4656:9;:7;:9::i;:::-;4672:10;;-1:-1:-1;;;4672:10:90;;4680:1;4672:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;4672:7:90;;2377:18:161;;4672:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4688:10:90;;-1:-1:-1;;;4688:10:90;;4696:1;4688:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;4688:7:90;;-1:-1:-1;2377:18:161;;4688:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4705:9;:7;:9::i;:::-;4729;;;;4757:15;4729:45;;-1:-1:-1;;;4729:45:90;;-1:-1:-1;;;;;4757:15:90;;;;;;4729:45;;;172:51:161;;;;4720:70:90;;4729:9;;;:19;;145:18:161;;4729:45:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4776:13;;4720:8;:70::i;:::-;4595:200::o;4799:251::-;4863:9;:7;:9::i;:::-;4878:10;;-1:-1:-1;;;4878:10:90;;4886:1;4878:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;4878:7:90;;2377:18:161;;4878:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4894:10:90;;-1:-1:-1;;;4894:10:90;;4902:1;4894:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;4894:7:90;;-1:-1:-1;2377:18:161;;4894:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:15:90;;:57;;-1:-1:-1;;;4911:57:90;;4936:1;4911:57;;;5692:25:161;4947:4:90;5771:18:161;;;5764:43;;;5823:18;;;5816:43;4911:15:90;;;;-1:-1:-1;;;;;4911:15:90;;-1:-1:-1;4911:24:90;;-1:-1:-1;5665:18:161;;4911:57:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4984:9:90;;;;5012:15;4984:45;;-1:-1:-1;;;4984:45:90;;-1:-1:-1;;;;;5012:15:90;;;;;;4984:45;;;172:51:161;;;;4975:70:90;;4984:9;;;:19;;145:18:161;;4984:45:90;14:215:161;5542:811:90;5591:9;:7;:9::i;:::-;5620:6;;5606:21;;-1:-1:-1;;;5606:21:90;;-1:-1:-1;;;;;5620:6:90;;;5606:21;;;172:51:161;-1:-1:-1;;;;;;;;;;;1671:64:125;5606:13:90;;145:18:161;;5606:21:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5633:9:90;;5648:6;;5656:13;;5633:37;;-1:-1:-1;;;5633:37:90;;-1:-1:-1;;;;;5648:6:90;;;5633:37;;;6044:51:161;6111:18;;;6104:34;;;;5633:9:90;;;-1:-1:-1;5633:14:90;;-1:-1:-1;6017:18:161;;5633:37:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5676:9:90;;;5702:15;5720:13;;5676:58;;-1:-1:-1;;;5676:58:90;;-1:-1:-1;;;;;5702:15:90;;;;;;5676:58;;;6044:51:161;6111:18;;;6104:34;;;;5676:9:90;;;-1:-1:-1;5676:17:90;;-1:-1:-1;6017:18:161;;5676:58:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5740:15:90;;5764:13;;5779:6;;5740:46;;-1:-1:-1;;;5740:46:90;;;;;6605:25:161;;;;-1:-1:-1;;;;;5779:6:90;;;6646:18:161;;;6639:60;5740:15:90;;;;;;;;:23;;6578:18:161;;5740:46:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5792:14:90;;;-1:-1:-1;;;5792:14:90;;;;-1:-1:-1;;;;;;;;;;;1671:64:125;5792:12:90;;:14;;;;;1695:37:125;;5792:14:90;;;;;;;1695:37:125;1671:64;5792:14:90;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5812:10:90;;-1:-1:-1;;;5812:10:90;;5820:1;5812:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;5812:7:90;;-1:-1:-1;2377:18:161;;5812:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5828:10:90;;-1:-1:-1;;;5828:10:90;;5836:1;5828:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;5828:7:90;;-1:-1:-1;2377:18:161;;5828:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5845:15:90;;:57;;-1:-1:-1;;;5845:57:90;;5870:1;5845:57;;;5692:25:161;5881:4:90;5771:18:161;;;5764:43;;;5823:18;;;5816:43;5845:15:90;;;;-1:-1:-1;;;;;5845:15:90;;-1:-1:-1;5845:24:90;;-1:-1:-1;5665:18:161;;5845:57:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5908:8:90;;;5930:15;5908:54;;-1:-1:-1;;;5908:54:90;;-1:-1:-1;;;;;5908:8:90;;;;:15;;:54;;5930:15;;;;;;;;5956:4;;5908:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5968:10:90;;-1:-1:-1;;;5968:10:90;;5976:1;5968:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;5968:7:90;;2377:18:161;;5968:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5984:10:90;;-1:-1:-1;;;5984:10:90;;5992:1;5984:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;5984:7:90;;-1:-1:-1;2377:18:161;;5984:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6001:8:90;;;6023:15;6056:6;;6001:62;;-1:-1:-1;;;6001:62:90;;-1:-1:-1;;;;;6023:15:90;;;;;;6001:62;;;7479:34:161;6049:4:90;7529:18:161;;;7522:43;6056:6:90;;;7581:18:161;;;7574:43;6001:8:90;;;-1:-1:-1;6001:15:90;;-1:-1:-1;7414:18:161;;6001:62:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6069:8:90;;:36;;-1:-1:-1;;;6069:36:90;;6099:4;6069:36;;;172:51:161;-1:-1:-1;;;;;6069:8:90;;;;:21;;145:18:161;;6069:36:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6111:8:90;;6133:6;;6111:29;;-1:-1:-1;;;6111:29:90;;-1:-1:-1;;;;;6133:6:90;;;6111:29;;;172:51:161;6111:8:90;;;-1:-1:-1;6111:21:90;;-1:-1:-1;145:18:161;;6111:29:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6156:9:90;;;:34;;-1:-1:-1;;;6156:34:90;;6184:4;6156:34;;;172:51:161;;;;6147:69:90;;-1:-1:-1;;;;;;6156:9:90;;-1:-1:-1;6156:19:90;;145:18:161;;6156:34:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6214:1;6209;6193:13;;:17;;;;:::i;:::-;6192:23;;;;:::i;:::-;6147:8;:69::i;:::-;6231:9;;;:34;;-1:-1:-1;;;6231:34:90;;6259:4;6231:34;;;172:51:161;;;;6222:69:90;;-1:-1:-1;;;;;6231:9:90;;;;:19;;145:18:161;;6231:34:90;14:215:161;6222:69:90;6306:9;;;;6334:8;6306:38;;-1:-1:-1;;;6306:38:90;;-1:-1:-1;;;;;6334:8:90;;;6306:38;;;172:51:161;;;;6297::90;;6306:9;;;:19;;145:18:161;;6306:38:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6346:1;6297:8;:51::i;5054:484::-;5131:9;:7;:9::i;:::-;5146:10;;-1:-1:-1;;;5146:10:90;;5154:1;5146:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;5146:7:90;;2377:18:161;;5146:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5162:10:90;;-1:-1:-1;;;5162:10:90;;5170:1;5162:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;5162:7:90;;-1:-1:-1;2377:18:161;;5162:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5179:15:90;;:57;;-1:-1:-1;;;5179:57:90;;5204:1;5179:57;;;5692:25:161;5215:4:90;5771:18:161;;;5764:43;;;5823:18;;;5816:43;5179:15:90;;;;-1:-1:-1;;;;;5179:15:90;;-1:-1:-1;5179:24:90;;-1:-1:-1;5665:18:161;;5179:57:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5275:8:90;;;5297:15;5275:54;;-1:-1:-1;;;5275:54:90;;-1:-1:-1;;;;;5275:8:90;;;;:15;;:54;;5297:15;;;;;;;;5323:4;;5275:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5335:10:90;;-1:-1:-1;;;5335:10:90;;5343:1;5335:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;5335:7:90;;2377:18:161;;5335:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5351:10:90;;-1:-1:-1;;;5351:10:90;;5359:1;5351:10;;;2404:25:161;-1:-1:-1;;;;;;;;;;;1671:64:125;-1:-1:-1;5351:7:90;;-1:-1:-1;2377:18:161;;5351:10:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5368:8:90;;;5390:15;5368:54;;-1:-1:-1;;;5368:54:90;;-1:-1:-1;;;;;5368:8:90;;;;-1:-1:-1;5368:15:90;;-1:-1:-1;5368:54:90;;5390:15;;;;;;;;5416:4;;5368:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5428:8:90;;:36;;-1:-1:-1;;;5428:36:90;;5458:4;5428:36;;;172:51:161;-1:-1:-1;;;;;5428:8:90;;;;:21;;145:18:161;;5428:36:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5479:9:90;;;:34;;-1:-1:-1;;;5479:34:90;;5507:4;5479:34;;;172:51:161;;;;5470:63:90;;-1:-1:-1;;;;;;5479:9:90;;-1:-1:-1;5479:19:90;;145:18:161;;5479:34:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5531:1;5515:13;;:17;;;;:::i;2489:568::-;2535:57;2544:15;;;;;;;;;-1:-1:-1;;;;;2544:15:90;-1:-1:-1;;;;;2544:20:90;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2544:22:90;;;;;;;;;;;;:::i;:::-;2535:57;;;;;;;;;;;;;-1:-1:-1;;;2535:57:90;;;:8;:57::i;:::-;2598:43;2607:15;;;;;;;;;-1:-1:-1;;;;;2607:15:90;-1:-1:-1;;;;;2607:22:90;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2607:24:90;;;;;;;;;;;;:::i;:::-;2598:43;;;;;;;;;;;;;-1:-1:-1;;;2598:43:90;;;:8;:43::i;:::-;2647:62;2664:15;;;;;;;;;-1:-1:-1;;;;;2664:15:90;-1:-1:-1;;;;;2664:21:90;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2698:9;;-1:-1:-1;;;;;2698:9:90;2647:8;:62::i;:::-;2715:68;2732:15;;;;;;;;;-1:-1:-1;;;;;2732:15:90;-1:-1:-1;;;;;2732:24:90;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2769:12;;-1:-1:-1;;;;;2769:12:90;2715:8;:68::i;:::-;2806:9;;;2826:15;2789:54;;-1:-1:-1;;;;;2806:9:90;;;;2826:15;;;;2789:8;:54::i;:::-;2858:9;;;2886:15;2912:12;;2858:68;;-1:-1:-1;;;2858:68:90;;2849:97;;-1:-1:-1;;;;;2858:9:90;;;;:19;;:68;;2886:15;;;;;;;2912:12;;2858:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2849:8:90;:97::i;:::-;2961:9;;;;2989:15;;3015;2961:71;;-1:-1:-1;;;2961:71:90;;2952:100;;-1:-1:-1;;;;;2961:9:90;;;;:19;;:71;;2989:15;;;;;;;3015;;;2961:71;;:::i;3515:597::-;3551:9;:7;:9::i;:::-;3619;;:34;;-1:-1:-1;;;3619:34:90;;3647:4;3619:34;;;172:51:161;3610:47:90;;-1:-1:-1;;;;;3619:9:90;;:19;;145:18:161;;3619:34:90;14:215:161;3610:47:90;3672:9;;3700:12;;3672:42;;-1:-1:-1;;;3672:42:90;;-1:-1:-1;;;;;3700:12:90;;;3672:42;;;172:51:161;3663:55:90;;3672:9;;;;;:19;;145:18:161;;3672:42:90;14:215:161;3663:55:90;3733:9;;3761:12;;3733:42;;-1:-1:-1;;;3733:42:90;;-1:-1:-1;;;;;3761:12:90;;;3733:42;;;172:51:161;3724:67:90;;3733:9;;;;;:19;;145:18:161;;3733:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3777:13;;3724:8;:67::i;:::-;3845:54;3854:15;;;;;;;;;-1:-1:-1;;;;;3854:15:90;-1:-1:-1;;;;;3854:27:90;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3845:54;3914:15;;:50;;-1:-1:-1;;;3914:50:90;;3958:4;3914:50;;;172:51:161;3905:75:90;;3914:15;;;-1:-1:-1;;;;;3914:15:90;;:35;;145:18:161;;3914:50:90;14:215:161;3905:75:90;4051:15;;:40;;-1:-1:-1;;;4051:40:90;;4085:4;4051:40;;;172:51:161;4042:65:90;;4051:15;;;-1:-1:-1;;;;;4051:15:90;;:25;;145:18:161;;4051:40:90;14:215:161;1819:584:125;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:125;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:125;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:125;;;6044:51:161;;;-1:-1:-1;;;6111:18:161;;;6104:34;2196:43:125;;;;;;;;;6017:18:161;;;2196:43:125;;;-1:-1:-1;;1671:64:125;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:125;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:125:o;3061:450:90:-;3093:9;;3123:13;;3093:44;;-1:-1:-1;;;3093:44:90;;3116:4;3093:44;;;6044:51:161;6111:18;;;6104:34;;;;-1:-1:-1;;;;;3093:9:90;;;;:14;;6017:18:161;;3093:44:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3143:9:90;;;3169:15;3187:13;;3143:58;;-1:-1:-1;;;3143:58:90;;-1:-1:-1;;;;;3169:15:90;;;;;;3143:58;;;6044:51:161;6111:18;;;6104:34;;;;3143:9:90;;;-1:-1:-1;3143:17:90;;-1:-1:-1;6017:18:161;;3143:58:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3300:8:90;;;3322:15;3300:54;;-1:-1:-1;;;3300:54:90;;-1:-1:-1;;;;;3300:8:90;;;;:15;;:54;;3322:15;;;;;;;;3348:4;;3300:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3360:15:90;;3384:13;;3360:53;;-1:-1:-1;;;3360:53:90;;;;;6605:25:161;;;;3407:4:90;6646:18:161;;;6639:60;3360:15:90;;;;-1:-1:-1;;;;;3360:15:90;;:23;;6578:18:161;;3360:53:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3452:8:90;;;3474:15;3452:54;;-1:-1:-1;;;3452:54:90;;-1:-1:-1;;;;;3452:8:90;;;;:15;;:54;;3474:15;;;;;;;;3500:4;;3452:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3061:450::o;4116:475::-;4153:9;:7;:9::i;:::-;4168:15;;4193:13;;4168:69;;-1:-1:-1;;;4168:69:90;;;;;5692:25:161;;;;4216:4:90;5771:18:161;;;5764:43;;;5823:18;;;5816:43;4168:15:90;;;;-1:-1:-1;;;;;4168:15:90;;:24;;5665:18:161;;4168:69:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4297:9:90;;:34;;-1:-1:-1;;;4297:34:90;;4325:4;4297:34;;;172:51:161;4288:59:90;;-1:-1:-1;;;;;4297:9:90;;:19;;145:18:161;;4297:34:90;14:215:161;4288:59:90;4362:9;;4390:12;;4362:42;;-1:-1:-1;;;4362:42:90;;-1:-1:-1;;;;;4390:12:90;;;4362:42;;;172:51:161;4353:55:90;;4362:9;;;;;:19;;145:18:161;;4362:42:90;14:215:161;4353:55:90;4423:9;;4451:12;;4423:42;;-1:-1:-1;;;4423:42:90;;-1:-1:-1;;;;;4451:12:90;;;4423:42;;;172:51:161;4414:55:90;;4423:9;;;;;:19;;145:18:161;;4423:42:90;14:215:161;4414:55:90;4542:15;;:40;;-1:-1:-1;;;4542:40:90;;4576:4;4542:40;;;172:51:161;4533:53:90;;4542:15;;;-1:-1:-1;;;;;4542:15:90;;:25;;145:18:161;;4542:40:90;14:215:161;5202:262:125;5264:1;5259;:6;5255:203;;5286:41;;;;;11832:2:161;11814:21;;;11871:2;11851:18;;;11844:30;11910:34;11905:2;11890:18;;11883:62;-1:-1:-1;;;11976:2:161;11961:18;;11954:32;12018:3;12003:19;;11630:398;5286:41:125;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;14688:342::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:265;;14848:43;;;;;13550:2:161;13532:21;;;13589:2;13569:18;;;13562:30;13628:34;13623:2;13608:18;;13601:62;-1:-1:-1;;;13694:2:161;13679:18;;13672:34;13738:3;13723:19;;13348:400;14848:43:125;;;;;;;;14910:32;14940:1;14910:32;;;;;;:::i;:::-;;;;;;;;14961;14991:1;14961:32;;;;;;:::i;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:125;:1;-1:-1:-1;;;;;3678:6:125;;3674:212;;3705:44;;;;;15128:2:161;15110:21;;;15167:2;15147:18;;;15140:30;15206:34;15201:2;15186:18;;15179:62;-1:-1:-1;;;15272:2:161;15257:18;;15250:35;15317:3;15302:19;;14926:401;3705:44:125;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:125;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:125;;;16292:51:161;;;-1:-1:-1;;;16359:18:161;;;16352:34;;;;2705:4:125;16402:18:161;;;16395:34;2482:11:125;;1671:64;2579:43;;16265:18:161;;2645:67:125;;;-1:-1:-1;;2645:67:125;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:125;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:125;2813:7;:14;;-1:-1:-1;;2813:14:125;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1941:304:161:-;-1:-1:-1;;;;;2171:15:161;;;2153:34;;2223:15;;2218:2;2203:18;;2196:43;2103:2;2088:18;;1941:304::o;5293:184::-;5363:6;5416:2;5404:9;5395:7;5391:23;5387:32;5384:52;;;5432:1;5429;5422:12;5384:52;-1:-1:-1;5455:16:161;;5293:184;-1:-1:-1;5293:184:161:o;6149:277::-;6216:6;6269:2;6257:9;6248:7;6244:23;6240:32;6237:52;;;6285:1;6282;6275:12;6237:52;6317:9;6311:16;6370:5;6363:13;6356:21;6349:5;6346:32;6336:60;;6392:1;6389;6382:12;6336:60;6415:5;6149:277;-1:-1:-1;;;6149:277:161:o;7628:245::-;7707:6;7715;7768:2;7756:9;7747:7;7743:23;7739:32;7736:52;;;7784:1;7781;7774:12;7736:52;-1:-1:-1;;7807:16:161;;7863:2;7848:18;;;7842:25;7807:16;;7842:25;;-1:-1:-1;7628:245:161:o;7878:217::-;7918:1;7944;7934:132;;7988:10;7983:3;7979:20;7976:1;7969:31;8023:4;8020:1;8013:15;8051:4;8048:1;8041:15;7934:132;-1:-1:-1;8080:9:161;;7878:217::o;8100:222::-;8140:4;8168:1;8165;8162:8;8159:131;;;8212:10;8207:3;8203:20;8200:1;8193:31;8247:4;8244:1;8237:15;8275:4;8272:1;8265:15;8159:131;-1:-1:-1;8307:9:161;;8100:222::o;8327:127::-;8388:10;8383:3;8379:20;8376:1;8369:31;8419:4;8416:1;8409:15;8443:4;8440:1;8433:15;8459:258;8531:1;8541:113;8555:6;8552:1;8549:13;8541:113;;;8631:11;;;8625:18;8612:11;;;8605:39;8577:2;8570:10;8541:113;;;8672:6;8669:1;8666:13;8663:48;;;-1:-1:-1;;8707:1:161;8689:16;;8682:27;8459:258::o;8722:884::-;8802:6;8855:2;8843:9;8834:7;8830:23;8826:32;8823:52;;;8871:1;8868;8861:12;8823:52;8904:9;8898:16;8933:18;8974:2;8966:6;8963:14;8960:34;;;8990:1;8987;8980:12;8960:34;9028:6;9017:9;9013:22;9003:32;;9073:7;9066:4;9062:2;9058:13;9054:27;9044:55;;9095:1;9092;9085:12;9044:55;9124:2;9118:9;9146:2;9142;9139:10;9136:36;;;9152:18;;:::i;:::-;9227:2;9221:9;9195:2;9281:13;;-1:-1:-1;;9277:22:161;;;9301:2;9273:31;9269:40;9257:53;;;9325:18;;;9345:22;;;9322:46;9319:72;;;9371:18;;:::i;:::-;9411:10;9407:2;9400:22;9446:2;9438:6;9431:18;9486:7;9481:2;9476;9472;9468:11;9464:20;9461:33;9458:53;;;9507:1;9504;9497:12;9458:53;9520:55;9572:2;9567;9559:6;9555:15;9550:2;9546;9542:11;9520:55;:::i;:::-;9594:6;8722:884;-1:-1:-1;;;;;;;8722:884:161:o;9611:138::-;-1:-1:-1;;;;;9693:31:161;;9683:42;;9673:70;;9739:1;9736;9729:12;9754:273;9839:6;9892:2;9880:9;9871:7;9867:23;9863:32;9860:52;;;9908:1;9905;9898:12;9860:52;9940:9;9934:16;9959:38;9991:5;9959:38;:::i;10595:371::-;-1:-1:-1;;;;;;10780:33:161;;10768:46;;10837:13;;10750:3;;10859:61;10837:13;10909:1;10900:11;;10893:4;10881:17;;10859:61;:::i;:::-;10940:16;;;;10958:1;10936:24;;10595:371;-1:-1:-1;;;10595:371:161:o;10971:274::-;11100:3;11138:6;11132:13;11154:53;11200:6;11195:3;11188:4;11180:6;11176:17;11154:53;:::i;:::-;11223:16;;;;;10971:274;-1:-1:-1;;10971:274:161:o;12197:348::-;12427:2;12416:9;12409:21;12390:4;12447:49;12492:2;12481:9;12477:18;12110:2;12098:15;;-1:-1:-1;;;12138:4:161;12129:14;;12122:36;12183:2;12174:12;;12033:159;12447:49;12439:57;;12532:6;12527:2;12516:9;12512:18;12505:34;12197:348;;;;:::o;12714:::-;12944:2;12933:9;12926:21;12907:4;12964:49;13009:2;12998:9;12994:18;12627:2;12615:15;;-1:-1:-1;;;12655:4:161;12646:14;;12639:36;12700:2;12691:12;;12550:159;13753:258;13795:3;13833:5;13827:12;13860:6;13855:3;13848:19;13876:63;13932:6;13925:4;13920:3;13916:14;13909:4;13902:5;13898:16;13876:63;:::i;:::-;13993:2;13972:15;-1:-1:-1;;13968:29:161;13959:39;;;;14000:4;13955:50;;13753:258;-1:-1:-1;;13753:258:161:o;14016:450::-;14266:2;14255:9;14248:21;14305:1;14300:2;14289:9;14285:18;14278:29;-1:-1:-1;;;14338:2:161;14327:9;14323:18;14316:39;14393:3;14386:4;14375:9;14371:20;14364:33;14229:4;14414:46;14455:3;14444:9;14440:19;14432:6;14414:46;:::i;14471:450::-;14721:2;14710:9;14703:21;14760:1;14755:2;14744:9;14740:18;14733:29;-1:-1:-1;;;14793:2:161;14782:9;14778:18;14771:39;14848:3;14841:4;14830:9;14826:20;14819:33;14684:4;14869:46;14910:3;14899:9;14895:19;14887:6;14869:46;:::i;15332:374::-;15562:2;15551:9;15544:21;15525:4;15582:49;15627:2;15616:9;15612:18;12110:2;12098:15;;-1:-1:-1;;;12138:4:161;12129:14;;12122:36;12183:2;12174:12;;12033:159;15582:49;-1:-1:-1;;;;;15667:32:161;;;;15662:2;15647:18;;;;15640:60;;;;-1:-1:-1;15574:57:161;15332:374::o;15711:::-;15941:2;15930:9;15923:21;15904:4;15961:49;16006:2;15995:9;15991:18;12627:2;12615:15;;-1:-1:-1;;;12655:4:161;12646:14;;12639:36;12700:2;12691:12;;12550:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/AutofarmERC4626Test.t.sol",
    "id": 35389,
    "exportedSymbols": {
      "Authority": [
        75902
      ],
      "AutofarmERC4626": [
        23292
      ],
      "AutofarmERC4626Test": [
        35388
      ],
      "DSTest": [
        52915
      ],
      "ERC20": [
        76338
      ],
      "FlywheelCore": [
        53519
      ],
      "FlywheelDynamicRewards": [
        53845
      ],
      "FuseFlywheelDynamicRewards": [
        73286
      ],
      "IAutofarmV2": [
        23123
      ],
      "IFlywheelBooster": [
        53545
      ],
      "IStrategy": [
        45922
      ],
      "MockAutofarmV2": [
        46555
      ],
      "MockERC20": [
        75950
      ],
      "MockStrategy": [
        46776
      ],
      "Vm": [
        56425
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6317:90",
    "nodes": [
      {
        "id": 34527,
        "nodeType": "PragmaDirective",
        "src": "39:25:90",
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 34528,
        "nodeType": "ImportDirective",
        "src": "66:26:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 52916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34529,
        "nodeType": "ImportDirective",
        "src": "93:26:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 56426,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34531,
        "nodeType": "ImportDirective",
        "src": "121:49:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 76339,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34530,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "130:5:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34533,
        "nodeType": "ImportDirective",
        "src": "171:67:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 75951,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34532,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "180:9:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34535,
        "nodeType": "ImportDirective",
        "src": "239:50:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 75903,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34534,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "248:9:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34538,
        "nodeType": "ImportDirective",
        "src": "291:90:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/compound/strategies/AutofarmERC4626.sol",
        "file": "../compound/strategies/AutofarmERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 23293,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34536,
              "name": "AutofarmERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "300:15:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34537,
              "name": "IAutofarmV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "317:11:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34540,
        "nodeType": "ImportDirective",
        "src": "382:60:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/FlywheelCore.sol",
        "file": "flywheel-v2/FlywheelCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 53520,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34539,
              "name": "FlywheelCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "391:12:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34542,
        "nodeType": "ImportDirective",
        "src": "443:88:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/rewards/FlywheelDynamicRewards.sol",
        "file": "flywheel-v2/rewards/FlywheelDynamicRewards.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 53846,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34541,
              "name": "FlywheelDynamicRewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "452:22:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34544,
        "nodeType": "ImportDirective",
        "src": "532:79:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/interfaces/IFlywheelBooster.sol",
        "file": "flywheel-v2/interfaces/IFlywheelBooster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 53546,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34543,
              "name": "IFlywheelBooster",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "541:16:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34546,
        "nodeType": "ImportDirective",
        "src": "612:60:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/FlywheelCore.sol",
        "file": "flywheel-v2/FlywheelCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 53520,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34545,
              "name": "FlywheelCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "621:12:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34548,
        "nodeType": "ImportDirective",
        "src": "673:65:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/autofarm/MockStrategy.sol",
        "file": "./mocks/autofarm/MockStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 46777,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34547,
              "name": "MockStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "682:12:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34550,
        "nodeType": "ImportDirective",
        "src": "739:69:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/autofarm/MockAutofarmV2.sol",
        "file": "./mocks/autofarm/MockAutofarmV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 46556,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34549,
              "name": "MockAutofarmV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "748:14:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34552,
        "nodeType": "ImportDirective",
        "src": "809:59:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/autofarm/IStrategy.sol",
        "file": "./mocks/autofarm/IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 45923,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34551,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "818:9:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34554,
        "nodeType": "ImportDirective",
        "src": "869:98:90",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/fuse-flywheel/src/rewards/FuseFlywheelDynamicRewards.sol",
        "file": "fuse-flywheel/rewards/FuseFlywheelDynamicRewards.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35389,
        "sourceUnit": 73287,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34553,
              "name": "FuseFlywheelDynamicRewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "878:26:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35388,
        "nodeType": "ContractDefinition",
        "src": "969:5386:90",
        "nodes": [
          {
            "id": 34562,
            "nodeType": "VariableDeclaration",
            "src": "1012:40:90",
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "1031:2:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$56425",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 34558,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34557,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56425,
                "src": "1012:2:90"
              },
              "referencedDeclaration": 56425,
              "src": "1012:2:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$56425",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 34560,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 51236,
                  "src": "1039:12:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 34559,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 56425,
                "src": "1036:2:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$56425_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 34561,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1036:16:90",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$56425",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34565,
            "nodeType": "VariableDeclaration",
            "src": "1057:31:90",
            "constant": false,
            "mutability": "mutable",
            "name": "autofarmERC4626",
            "nameLocation": "1073:15:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
              "typeString": "contract AutofarmERC4626"
            },
            "typeName": {
              "id": 34564,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34563,
                "name": "AutofarmERC4626",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23292,
                "src": "1057:15:90"
              },
              "referencedDeclaration": 23292,
              "src": "1057:15:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                "typeString": "contract AutofarmERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34568,
            "nodeType": "VariableDeclaration",
            "src": "1092:21:90",
            "constant": false,
            "mutability": "mutable",
            "name": "flywheel",
            "nameLocation": "1105:8:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FlywheelCore_$53519",
              "typeString": "contract FlywheelCore"
            },
            "typeName": {
              "id": 34567,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34566,
                "name": "FlywheelCore",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53519,
                "src": "1092:12:90"
              },
              "referencedDeclaration": 53519,
              "src": "1092:12:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                "typeString": "contract FlywheelCore"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34571,
            "nodeType": "VariableDeclaration",
            "src": "1117:42:90",
            "constant": false,
            "mutability": "mutable",
            "name": "flywheelRewards",
            "nameLocation": "1144:15:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
              "typeString": "contract FuseFlywheelDynamicRewards"
            },
            "typeName": {
              "id": 34570,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34569,
                "name": "FuseFlywheelDynamicRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73286,
                "src": "1117:26:90"
              },
              "referencedDeclaration": 73286,
              "src": "1117:26:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                "typeString": "contract FuseFlywheelDynamicRewards"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34574,
            "nodeType": "VariableDeclaration",
            "src": "1164:19:90",
            "constant": false,
            "mutability": "mutable",
            "name": "testToken",
            "nameLocation": "1174:9:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$75950",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 34573,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34572,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 75950,
                "src": "1164:9:90"
              },
              "referencedDeclaration": 75950,
              "src": "1164:9:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$75950",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34577,
            "nodeType": "VariableDeclaration",
            "src": "1187:19:90",
            "constant": false,
            "mutability": "mutable",
            "name": "autoToken",
            "nameLocation": "1197:9:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$75950",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 34576,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34575,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 75950,
                "src": "1187:9:90"
              },
              "referencedDeclaration": 75950,
              "src": "1187:9:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$75950",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34580,
            "nodeType": "VariableDeclaration",
            "src": "1210:25:90",
            "constant": false,
            "mutability": "mutable",
            "name": "mockStrategy",
            "nameLocation": "1223:12:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockStrategy_$46776",
              "typeString": "contract MockStrategy"
            },
            "typeName": {
              "id": 34579,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34578,
                "name": "MockStrategy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46776,
                "src": "1210:12:90"
              },
              "referencedDeclaration": 46776,
              "src": "1210:12:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockStrategy_$46776",
                "typeString": "contract MockStrategy"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34583,
            "nodeType": "VariableDeclaration",
            "src": "1239:27:90",
            "constant": false,
            "mutability": "mutable",
            "name": "mockAutofarm",
            "nameLocation": "1254:12:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
              "typeString": "contract MockAutofarmV2"
            },
            "typeName": {
              "id": 34582,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34581,
                "name": "MockAutofarmV2",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46555,
                "src": "1239:14:90"
              },
              "referencedDeclaration": 46555,
              "src": "1239:14:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                "typeString": "contract MockAutofarmV2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34586,
            "nodeType": "VariableDeclaration",
            "src": "1271:30:90",
            "constant": false,
            "mutability": "mutable",
            "name": "depositAmount",
            "nameLocation": "1279:13:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1271:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030653138",
              "id": 34585,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1295:6:90",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100e18"
            },
            "visibility": "internal"
          },
          {
            "id": 34589,
            "nodeType": "VariableDeclaration",
            "src": "1305:28:90",
            "constant": false,
            "mutability": "mutable",
            "name": "rewardsStream",
            "nameLocation": "1313:13:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34587,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1305:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38653135",
              "id": 34588,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1329:4:90",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000000000000000_by_1",
                "typeString": "int_const 8000000000000000"
              },
              "value": "8e15"
            },
            "visibility": "internal"
          },
          {
            "id": 34592,
            "nodeType": "VariableDeclaration",
            "src": "1337:15:90",
            "constant": false,
            "mutability": "mutable",
            "name": "marketKey",
            "nameLocation": "1343:9:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$76338",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 34591,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34590,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76338,
                "src": "1337:5:90"
              },
              "referencedDeclaration": 76338,
              "src": "1337:5:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$76338",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34595,
            "nodeType": "VariableDeclaration",
            "src": "1356:59:90",
            "constant": false,
            "mutability": "mutable",
            "name": "tester",
            "nameLocation": "1364:6:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34593,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1356:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866333946643665353161616438384636463463653661423838323732373963666646623932323636",
              "id": 34594,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1373:42:90",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
            },
            "visibility": "internal"
          },
          {
            "id": 34599,
            "nodeType": "VariableDeclaration",
            "src": "1419:33:90",
            "constant": false,
            "mutability": "mutable",
            "name": "startTs",
            "nameLocation": "1427:7:90",
            "scope": 35388,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34596,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1419:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 34597,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "1437:5:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 34598,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "1437:15:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34771,
            "nodeType": "FunctionDefinition",
            "src": "1457:1028:90",
            "body": {
              "id": 34770,
              "nodeType": "Block",
              "src": "1481:1004:90",
              "statements": [
                {
                  "expression": {
                    "id": 34610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34602,
                      "name": "testToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34574,
                      "src": "1487:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$75950",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374546f6b656e",
                          "id": 34606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1513:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          "value": "TestToken"
                        },
                        {
                          "hexValue": "545354",
                          "id": 34607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1526:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          "value": "TST"
                        },
                        {
                          "hexValue": "3138",
                          "id": 34608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1533:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 34605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1499:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$75950_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 34604,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34603,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 75950,
                            "src": "1503:9:90"
                          },
                          "referencedDeclaration": 75950,
                          "src": "1503:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 34609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1499:37:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$75950",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1487:49:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$75950",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 34611,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:49:90"
                },
                {
                  "expression": {
                    "id": 34620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34612,
                      "name": "autoToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34577,
                      "src": "1542:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$75950",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6175746f546f6b656e",
                          "id": 34616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1568:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c2d9b983045ff5784501afc2eba58da12fb7cf167d2b14b1d293a535e99f8062",
                            "typeString": "literal_string \"autoToken\""
                          },
                          "value": "autoToken"
                        },
                        {
                          "hexValue": "4155544f",
                          "id": 34617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1581:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cb3a7987b23544459706f9cda94de4e4e745a8ac6e2135b7cb303d467ce01231",
                            "typeString": "literal_string \"AUTO\""
                          },
                          "value": "AUTO"
                        },
                        {
                          "hexValue": "3138",
                          "id": 34618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1589:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c2d9b983045ff5784501afc2eba58da12fb7cf167d2b14b1d293a535e99f8062",
                            "typeString": "literal_string \"autoToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_cb3a7987b23544459706f9cda94de4e4e745a8ac6e2135b7cb303d467ce01231",
                            "typeString": "literal_string \"AUTO\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 34615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1554:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$75950_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 34614,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34613,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 75950,
                            "src": "1558:9:90"
                          },
                          "referencedDeclaration": 75950,
                          "src": "1558:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 34619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1554:38:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$75950",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1542:50:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$75950",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 34621,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:50:90"
                },
                {
                  "expression": {
                    "id": 34631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34622,
                      "name": "mockAutofarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34583,
                      "src": "1598:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                        "typeString": "contract MockAutofarmV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 34628,
                              "name": "autoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34577,
                              "src": "1640:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$75950",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$75950",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 34627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1632:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1632:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1632:18:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1613:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MockAutofarmV2_$46555_$",
                          "typeString": "function (address) returns (contract MockAutofarmV2)"
                        },
                        "typeName": {
                          "id": 34624,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34623,
                            "name": "MockAutofarmV2",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46555,
                            "src": "1617:14:90"
                          },
                          "referencedDeclaration": 46555,
                          "src": "1617:14:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                            "typeString": "contract MockAutofarmV2"
                          }
                        }
                      },
                      "id": 34630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1613:38:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                        "typeString": "contract MockAutofarmV2"
                      }
                    },
                    "src": "1598:53:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                      "typeString": "contract MockAutofarmV2"
                    }
                  },
                  "id": 34632,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:53:90"
                },
                {
                  "expression": {
                    "id": 34646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34633,
                      "name": "mockStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34580,
                      "src": "1657:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStrategy_$46776",
                        "typeString": "contract MockStrategy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 34639,
                              "name": "testToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34574,
                              "src": "1697:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$75950",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$75950",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 34638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1689:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34637,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1689:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1689:18:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 34643,
                              "name": "mockAutofarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34583,
                              "src": "1717:12:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                "typeString": "contract MockAutofarmV2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                "typeString": "contract MockAutofarmV2"
                              }
                            ],
                            "id": 34642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1709:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34641,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1709:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1709:21:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1672:16:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockStrategy_$46776_$",
                          "typeString": "function (address,address) returns (contract MockStrategy)"
                        },
                        "typeName": {
                          "id": 34635,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34634,
                            "name": "MockStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46776,
                            "src": "1676:12:90"
                          },
                          "referencedDeclaration": 46776,
                          "src": "1676:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStrategy_$46776",
                            "typeString": "contract MockStrategy"
                          }
                        }
                      },
                      "id": 34645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1672:59:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStrategy_$46776",
                        "typeString": "contract MockStrategy"
                      }
                    },
                    "src": "1657:74:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockStrategy_$46776",
                      "typeString": "contract MockStrategy"
                    }
                  },
                  "id": 34647,
                  "nodeType": "ExpressionStatement",
                  "src": "1657:74:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 34651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1745:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 34648,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "1737:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "1737:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1737:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34653,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 34657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1761:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 34654,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "1753:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "1753:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34659,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:10:90"
                },
                {
                  "expression": {
                    "id": 34688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34660,
                      "name": "flywheel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34568,
                      "src": "1770:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                        "typeString": "contract FlywheelCore"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34664,
                          "name": "autoToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34577,
                          "src": "1805:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 34668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1853:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 34667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1845:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34666,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1845:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1845:10:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34665,
                            "name": "FlywheelDynamicRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53845,
                            "src": "1822:22:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FlywheelDynamicRewards_$53845_$",
                              "typeString": "type(contract FlywheelDynamicRewards)"
                            }
                          },
                          "id": 34670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1822:34:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelDynamicRewards_$53845",
                            "typeString": "contract FlywheelDynamicRewards"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 34674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1889:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 34673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1881:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34672,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1881:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1881:10:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34671,
                            "name": "IFlywheelBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53545,
                            "src": "1864:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFlywheelBooster_$53545_$",
                              "typeString": "type(contract IFlywheelBooster)"
                            }
                          },
                          "id": 34676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1864:28:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlywheelBooster_$53545",
                            "typeString": "contract IFlywheelBooster"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 34679,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1908:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                "typeString": "contract AutofarmERC4626Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                "typeString": "contract AutofarmERC4626Test"
                              }
                            ],
                            "id": 34678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1900:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34677,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1900:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1900:13:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 34684,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1939:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 34683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1931:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34682,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1931:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1931:10:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34681,
                            "name": "Authority",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75902,
                            "src": "1921:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Authority_$75902_$",
                              "typeString": "type(contract Authority)"
                            }
                          },
                          "id": 34686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1921:21:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Authority_$75902",
                            "typeString": "contract Authority"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_FlywheelDynamicRewards_$53845",
                            "typeString": "contract FlywheelDynamicRewards"
                          },
                          {
                            "typeIdentifier": "t_contract$_IFlywheelBooster_$53545",
                            "typeString": "contract IFlywheelBooster"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_Authority_$75902",
                            "typeString": "contract Authority"
                          }
                        ],
                        "id": 34663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1781:16:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$76338_$_t_contract$_IFlywheelRewards_$53578_$_t_contract$_IFlywheelBooster_$53545_$_t_address_$_t_contract$_Authority_$75902_$returns$_t_contract$_FlywheelCore_$53519_$",
                          "typeString": "function (contract ERC20,contract IFlywheelRewards,contract IFlywheelBooster,address,contract Authority) returns (contract FlywheelCore)"
                        },
                        "typeName": {
                          "id": 34662,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34661,
                            "name": "FlywheelCore",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53519,
                            "src": "1785:12:90"
                          },
                          "referencedDeclaration": 53519,
                          "src": "1785:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                            "typeString": "contract FlywheelCore"
                          }
                        }
                      },
                      "id": 34687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1781:167:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                        "typeString": "contract FlywheelCore"
                      }
                    },
                    "src": "1770:178:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                      "typeString": "contract FlywheelCore"
                    }
                  },
                  "id": 34689,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:178:90"
                },
                {
                  "expression": {
                    "id": 34697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34690,
                      "name": "flywheelRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34571,
                      "src": "1955:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                        "typeString": "contract FuseFlywheelDynamicRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34694,
                          "name": "flywheel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34568,
                          "src": "2004:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                            "typeString": "contract FlywheelCore"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 34695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2014:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                            "typeString": "contract FlywheelCore"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 34693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1973:30:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_FlywheelCore_$53519_$_t_uint32_$returns$_t_contract$_FuseFlywheelDynamicRewards_$73286_$",
                          "typeString": "function (contract FlywheelCore,uint32) returns (contract FuseFlywheelDynamicRewards)"
                        },
                        "typeName": {
                          "id": 34692,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34691,
                            "name": "FuseFlywheelDynamicRewards",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 73286,
                            "src": "1977:26:90"
                          },
                          "referencedDeclaration": 73286,
                          "src": "1977:26:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                            "typeString": "contract FuseFlywheelDynamicRewards"
                          }
                        }
                      },
                      "id": 34696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1973:43:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                        "typeString": "contract FuseFlywheelDynamicRewards"
                      }
                    },
                    "src": "1955:61:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                      "typeString": "contract FuseFlywheelDynamicRewards"
                    }
                  },
                  "id": 34698,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:61:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34702,
                        "name": "flywheelRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34571,
                        "src": "2050:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                          "typeString": "contract FuseFlywheelDynamicRewards"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                          "typeString": "contract FuseFlywheelDynamicRewards"
                        }
                      ],
                      "expression": {
                        "id": 34699,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "2022:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 34701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFlywheelRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53271,
                      "src": "2022:27:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IFlywheelRewards_$53578_$returns$__$",
                        "typeString": "function (contract IFlywheelRewards) external"
                      }
                    },
                    "id": 34703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:44:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34704,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:44:90"
                },
                {
                  "expression": {
                    "id": 34725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34705,
                      "name": "autofarmERC4626",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34565,
                      "src": "2073:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                        "typeString": "contract AutofarmERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34709,
                          "name": "testToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34574,
                          "src": "2118:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 34713,
                                  "name": "flywheel",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34568,
                                  "src": "2156:8:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                                    "typeString": "contract FlywheelCore"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                                    "typeString": "contract FlywheelCore"
                                  }
                                ],
                                "id": 34712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2148:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34711,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2148:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2148:17:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34710,
                            "name": "FlywheelCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53519,
                            "src": "2135:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FlywheelCore_$53519_$",
                              "typeString": "type(contract FlywheelCore)"
                            }
                          },
                          "id": 34715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:31:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                            "typeString": "contract FlywheelCore"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 34716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2174:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 34717,
                          "name": "autoToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34577,
                          "src": "2183:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 34721,
                                  "name": "mockAutofarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34583,
                                  "src": "2220:12:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                    "typeString": "contract MockAutofarmV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                    "typeString": "contract MockAutofarmV2"
                                  }
                                ],
                                "id": 34720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2212:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34719,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2212:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2212:21:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34718,
                            "name": "IAutofarmV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23123,
                            "src": "2200:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAutofarmV2_$23123_$",
                              "typeString": "type(contract IAutofarmV2)"
                            }
                          },
                          "id": 34723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2200:34:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAutofarmV2_$23123",
                            "typeString": "contract IAutofarmV2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                            "typeString": "contract FlywheelCore"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$75950",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IAutofarmV2_$23123",
                            "typeString": "contract IAutofarmV2"
                          }
                        ],
                        "id": 34708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2091:19:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$76338_$_t_contract$_FlywheelCore_$53519_$_t_uint256_$_t_contract$_ERC20_$76338_$_t_contract$_IAutofarmV2_$23123_$returns$_t_contract$_AutofarmERC4626_$23292_$",
                          "typeString": "function (contract ERC20,contract FlywheelCore,uint256,contract ERC20,contract IAutofarmV2) returns (contract AutofarmERC4626)"
                        },
                        "typeName": {
                          "id": 34707,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34706,
                            "name": "AutofarmERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23292,
                            "src": "2095:15:90"
                          },
                          "referencedDeclaration": 23292,
                          "src": "2095:15:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                            "typeString": "contract AutofarmERC4626"
                          }
                        }
                      },
                      "id": 34724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2091:149:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                        "typeString": "contract AutofarmERC4626"
                      }
                    },
                    "src": "2073:167:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                      "typeString": "contract AutofarmERC4626"
                    }
                  },
                  "id": 34726,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:167:90"
                },
                {
                  "expression": {
                    "id": 34734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34727,
                      "name": "marketKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34592,
                      "src": "2246:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$76338",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 34731,
                              "name": "autofarmERC4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34565,
                              "src": "2272:15:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                "typeString": "contract AutofarmERC4626"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                "typeString": "contract AutofarmERC4626"
                              }
                            ],
                            "id": 34730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2264:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2264:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2264:24:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34728,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76338,
                        "src": "2258:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 34733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2258:31:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$76338",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2246:43:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$76338",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 34735,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:43:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34739,
                        "name": "marketKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34592,
                        "src": "2326:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "id": 34736,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "2295:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 34738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addStrategyForRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53164,
                      "src": "2295:30:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 34740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:41:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34741,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:41:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34748,
                                "name": "testToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34574,
                                "src": "2410:9:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$75950",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$75950",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 34747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2402:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34746,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2402:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2402:18:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34745,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "2396:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 34750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2396:25:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 34751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2423:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 34754,
                            "name": "mockStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34580,
                            "src": "2434:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStrategy_$46776",
                              "typeString": "contract MockStrategy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStrategy_$46776",
                              "typeString": "contract MockStrategy"
                            }
                          ],
                          "id": 34753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2426:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34752,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2426:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2426:21:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34742,
                        "name": "mockAutofarm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34583,
                        "src": "2379:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                          "typeString": "contract MockAutofarmV2"
                        }
                      },
                      "id": 34744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46022,
                      "src": "2379:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,uint256,address) external"
                      }
                    },
                    "id": 34756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:69:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34757,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:69:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 34761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 34758,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "2454:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "2454:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34763,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 34767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2478:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 34764,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "2470:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "2470:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34769,
                  "nodeType": "ExpressionStatement",
                  "src": "2470:10:90"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1466:5:90",
            "parameters": {
              "id": 34600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:2:90"
            },
            "returnParameters": {
              "id": 34601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1481:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34864,
            "nodeType": "FunctionDefinition",
            "src": "2489:568:90",
            "body": {
              "id": 34863,
              "nodeType": "Block",
              "src": "2529:528:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34775,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "2544:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          },
                          "id": 34776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75971,
                          "src": "2544:20:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 34777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2544:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d696461732054657374546f6b656e205661756c74",
                        "id": 34778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2568:23:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        },
                        "value": "Midas TestToken Vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        }
                      ],
                      "id": 34774,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 52768,
                      "src": "2535:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:57:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34780,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:57:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34782,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "2607:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          },
                          "id": 34783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75973,
                          "src": "2607:22:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 34784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2607:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6d76545354",
                        "id": 34785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2633:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        },
                        "value": "mvTST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        }
                      ],
                      "id": 34781,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 52768,
                      "src": "2598:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34787,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:43:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34791,
                                "name": "autofarmERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34565,
                                "src": "2664:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              },
                              "id": 34792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50491,
                              "src": "2664:21:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$76338_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 34793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2664:23:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$76338",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$76338",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 34790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2656:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34789,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2656:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2656:32:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34797,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "2698:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 34796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2690:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2690:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2690:18:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34788,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "2647:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 34799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2647:62:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34800,
                  "nodeType": "ExpressionStatement",
                  "src": "2647:62:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34804,
                                "name": "autofarmERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34565,
                                "src": "2732:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              },
                              "id": 34805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "autofarm",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23138,
                              "src": "2732:24:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAutofarmV2_$23123_$",
                                "typeString": "function () view external returns (contract IAutofarmV2)"
                              }
                            },
                            "id": 34806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2732:26:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAutofarmV2_$23123",
                              "typeString": "contract IAutofarmV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAutofarmV2_$23123",
                              "typeString": "contract IAutofarmV2"
                            }
                          ],
                          "id": 34803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2724:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34802,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2724:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2724:35:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34810,
                            "name": "mockAutofarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34583,
                            "src": "2769:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                              "typeString": "contract MockAutofarmV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                              "typeString": "contract MockAutofarmV2"
                            }
                          ],
                          "id": 34809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2761:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2761:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2761:21:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34801,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "2715:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 34812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2715:68:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34813,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:68:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34817,
                            "name": "marketKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34592,
                            "src": "2806:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$76338",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$76338",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 34816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2798:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2798:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2798:18:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34821,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "2826:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 34820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2818:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2818:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2818:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34814,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51449,
                      "src": "2789:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 34823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34824,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:54:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34830,
                                "name": "autofarmERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34565,
                                "src": "2886:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              ],
                              "id": 34829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2878:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34828,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2878:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2878:24:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 34834,
                                "name": "mockAutofarm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34583,
                                "src": "2912:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                  "typeString": "contract MockAutofarmV2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                  "typeString": "contract MockAutofarmV2"
                                }
                              ],
                              "id": 34833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2904:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34832,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2904:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2904:21:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34826,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "2858:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75987,
                          "src": "2858:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 34836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2858:68:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2933:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 34838,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2933:7:90",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 34837,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2928:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2928:13:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 34841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2928:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34825,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2849:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2849:97:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34843,
                  "nodeType": "ExpressionStatement",
                  "src": "2849:97:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34849,
                                "name": "autofarmERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34565,
                                "src": "2989:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              ],
                              "id": 34848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2981:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34847,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2981:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2981:24:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 34853,
                                "name": "flywheelRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34571,
                                "src": "3015:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                                  "typeString": "contract FuseFlywheelDynamicRewards"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$73286",
                                  "typeString": "contract FuseFlywheelDynamicRewards"
                                }
                              ],
                              "id": 34852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3007:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34851,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3007:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3007:24:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34845,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "2961:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75987,
                          "src": "2961:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 34855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2961:71:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3039:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 34857,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3039:7:90",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 34856,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3034:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3034:13:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 34860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3034:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "2952:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:100:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34862,
                  "nodeType": "ExpressionStatement",
                  "src": "2952:100:90"
                }
              ]
            },
            "functionSelector": "70bdc855",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitializedValues",
            "nameLocation": "2498:21:90",
            "parameters": {
              "id": 34772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2519:2:90"
            },
            "returnParameters": {
              "id": 34773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2529:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34922,
            "nodeType": "FunctionDefinition",
            "src": "3061:450:90",
            "body": {
              "id": 34921,
              "nodeType": "Block",
              "src": "3087:424:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34872,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3116:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 34871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3108:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3108:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3108:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34874,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "3123:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34867,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34574,
                        "src": "3093:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$75950",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75936,
                      "src": "3093:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:44:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34876,
                  "nodeType": "ExpressionStatement",
                  "src": "3093:44:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34882,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "3169:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 34881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3161:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34880,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3161:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3161:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34884,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "3187:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34877,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34574,
                        "src": "3143:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$75950",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76055,
                      "src": "3143:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 34885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34886,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:58:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34891,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "3322:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 34890,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "3316:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 34892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3316:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34895,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3348:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 34894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3340:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3340:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3340:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34887,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "3300:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 34889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53054,
                      "src": "3300:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 34897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3300:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34898,
                  "nodeType": "ExpressionStatement",
                  "src": "3300:54:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34902,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "3384:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34905,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3407:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 34904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3399:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34903,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3399:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3399:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34899,
                        "name": "autofarmERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34565,
                        "src": "3360:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                          "typeString": "contract AutofarmERC4626"
                        }
                      },
                      "id": 34901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50565,
                      "src": "3360:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 34907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:53:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34908,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:53:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34913,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "3474:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 34912,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "3468:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 34914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3468:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34917,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3500:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 34916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3492:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34915,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3492:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3492:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34909,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "3452:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 34911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53054,
                      "src": "3452:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 34919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3452:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34920,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:54:90"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3070:7:90",
            "parameters": {
              "id": 34865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:90"
            },
            "returnParameters": {
              "id": 34866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34991,
            "nodeType": "FunctionDefinition",
            "src": "3515:597:90",
            "body": {
              "id": 34990,
              "nodeType": "Block",
              "src": "3545:567:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34925,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "3551:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34927,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34933,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3647:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 34932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3639:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34931,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3639:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3639:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34929,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "3619:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "3619:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3619:34:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3655:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34928,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "3610:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34938,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34944,
                                "name": "mockAutofarm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34583,
                                "src": "3700:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                  "typeString": "contract MockAutofarmV2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                  "typeString": "contract MockAutofarmV2"
                                }
                              ],
                              "id": 34943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3692:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34942,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3692:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3692:21:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34940,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "3672:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "3672:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3672:42:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3716:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34939,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "3663:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:55:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34949,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:55:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34955,
                                "name": "mockStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34580,
                                "src": "3761:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStrategy_$46776",
                                  "typeString": "contract MockStrategy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStrategy_$46776",
                                  "typeString": "contract MockStrategy"
                                }
                              ],
                              "id": 34954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3753:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3753:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3753:21:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34951,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "3733:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "3733:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:42:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34958,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "3777:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34950,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "3724:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3724:67:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34960,
                  "nodeType": "ExpressionStatement",
                  "src": "3724:67:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34962,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "3854:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          },
                          "id": 34963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3854:27:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 34964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3854:29:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34965,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "3885:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "3845:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34967,
                  "nodeType": "ExpressionStatement",
                  "src": "3845:54:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34973,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3958:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 34972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3950:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34971,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3950:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3950:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34969,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "3914:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          },
                          "id": 34970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOfUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23258,
                          "src": "3914:35:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3914:50:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34976,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "3966:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34968,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "3905:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:75:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34978,
                  "nodeType": "ExpressionStatement",
                  "src": "3905:75:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34984,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4085:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 34983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4077:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34982,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4077:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4077:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34980,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "4051:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          },
                          "id": 34981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4051:25:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4051:40:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34987,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "4093:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34979,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4042:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:65:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34989,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:65:90"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "3524:11:90",
            "parameters": {
              "id": 34923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3535:2:90"
            },
            "returnParameters": {
              "id": 34924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3545:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35056,
            "nodeType": "FunctionDefinition",
            "src": "4116:475:90",
            "body": {
              "id": 35055,
              "nodeType": "Block",
              "src": "4147:444:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34994,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "4153:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4153:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34996,
                  "nodeType": "ExpressionStatement",
                  "src": "4153:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35000,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "4193:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35003,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4216:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4208:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35001,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4208:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4208:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35007,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4231:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4223:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35005,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4223:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4223:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34997,
                        "name": "autofarmERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34565,
                        "src": "4168:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                          "typeString": "contract AutofarmERC4626"
                        }
                      },
                      "id": 34999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50689,
                      "src": "4168:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 35009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4168:69:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35010,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:69:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35016,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4325:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 35015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4317:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35014,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4317:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4317:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35012,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "4297:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4297:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4297:34:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35019,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "4333:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35011,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4288:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4288:59:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35021,
                  "nodeType": "ExpressionStatement",
                  "src": "4288:59:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35027,
                                "name": "mockAutofarm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34583,
                                "src": "4390:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                  "typeString": "contract MockAutofarmV2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAutofarmV2_$46555",
                                  "typeString": "contract MockAutofarmV2"
                                }
                              ],
                              "id": 35026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4382:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4382:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4382:21:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35023,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "4362:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4362:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4362:42:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 35030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4406:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 35022,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4353:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:55:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35032,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:55:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35038,
                                "name": "mockStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34580,
                                "src": "4451:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStrategy_$46776",
                                  "typeString": "contract MockStrategy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStrategy_$46776",
                                  "typeString": "contract MockStrategy"
                                }
                              ],
                              "id": 35037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4443:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35036,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4443:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4443:21:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35034,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34574,
                            "src": "4423:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4423:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4423:42:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 35041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4467:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 35033,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4414:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4414:55:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35043,
                  "nodeType": "ExpressionStatement",
                  "src": "4414:55:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35049,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4576:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 35048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4568:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35047,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4568:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4568:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35045,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "4542:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          },
                          "id": 35046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4542:25:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4542:40:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 35052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4584:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 35044,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4533:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:53:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35054,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:53:90"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "4125:12:90",
            "parameters": {
              "id": 34992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4137:2:90"
            },
            "returnParameters": {
              "id": 34993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4147:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35089,
            "nodeType": "FunctionDefinition",
            "src": "4595:200:90",
            "body": {
              "id": 35088,
              "nodeType": "Block",
              "src": "4650:145:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35059,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "4656:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 35060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4656:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35061,
                  "nodeType": "ExpressionStatement",
                  "src": "4656:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4680:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35062,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "4672:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "4672:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4672:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35067,
                  "nodeType": "ExpressionStatement",
                  "src": "4672:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4696:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35068,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "4688:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "4688:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35073,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:10:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35074,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "4705:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 35075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35076,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35082,
                                "name": "autofarmERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34565,
                                "src": "4757:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              ],
                              "id": 35081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4749:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35080,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4749:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4749:24:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35078,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "4729:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4729:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4729:45:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35085,
                        "name": "rewardsStream",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34589,
                        "src": "4776:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35077,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4720:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4720:70:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35087,
                  "nodeType": "ExpressionStatement",
                  "src": "4720:70:90"
                }
              ]
            },
            "functionSelector": "3af93d19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAccumulatingAutoRewardsOnDeposit",
            "nameLocation": "4604:36:90",
            "parameters": {
              "id": 35057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4640:2:90"
            },
            "returnParameters": {
              "id": 35058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4650:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35133,
            "nodeType": "FunctionDefinition",
            "src": "4799:251:90",
            "body": {
              "id": 35132,
              "nodeType": "Block",
              "src": "4857:193:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35092,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "4863:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 35093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4863:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35094,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4886:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35095,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "4878:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "4878:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4878:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35100,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4902:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35101,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "4894:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "4894:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4894:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35106,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 35110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4936:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 35113,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4947:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4939:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35111,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4939:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4939:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35117,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4962:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4954:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4954:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4954:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35107,
                        "name": "autofarmERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34565,
                        "src": "4911:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                          "typeString": "contract AutofarmERC4626"
                        }
                      },
                      "id": 35109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50689,
                      "src": "4911:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 35119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4911:57:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35120,
                  "nodeType": "ExpressionStatement",
                  "src": "4911:57:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35126,
                                "name": "autofarmERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34565,
                                "src": "5012:15:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                                  "typeString": "contract AutofarmERC4626"
                                }
                              ],
                              "id": 35125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5004:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35124,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5004:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5004:24:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35122,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "4984:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "4984:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4984:45:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35129,
                        "name": "rewardsStream",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34589,
                        "src": "5031:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35121,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "4975:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4975:70:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35131,
                  "nodeType": "ExpressionStatement",
                  "src": "4975:70:90"
                }
              ]
            },
            "functionSelector": "466620c9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAccumulatingAutoRewardsOnWithdrawal",
            "nameLocation": "4808:39:90",
            "parameters": {
              "id": 35090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4847:2:90"
            },
            "returnParameters": {
              "id": 35091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4857:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35224,
            "nodeType": "FunctionDefinition",
            "src": "5054:484:90",
            "body": {
              "id": 35223,
              "nodeType": "Block",
              "src": "5089:449:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35136,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "5131:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 35137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5131:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35138,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5154:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35139,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5146:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "5146:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5146:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35144,
                  "nodeType": "ExpressionStatement",
                  "src": "5146:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5170:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35145,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5162:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "5162:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5162:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35150,
                  "nodeType": "ExpressionStatement",
                  "src": "5162:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 35154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5204:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 35157,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5215:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5207:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5207:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5207:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35161,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5230:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5222:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35159,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5222:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5222:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35151,
                        "name": "autofarmERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34565,
                        "src": "5179:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                          "typeString": "contract AutofarmERC4626"
                        }
                      },
                      "id": 35153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50689,
                      "src": "5179:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 35163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5179:57:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35164,
                  "nodeType": "ExpressionStatement",
                  "src": "5179:57:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35169,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "5297:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 35168,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "5291:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 35170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5291:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35173,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5323:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5315:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5315:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5315:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35165,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "5275:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53054,
                      "src": "5275:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 35175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5275:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35176,
                  "nodeType": "ExpressionStatement",
                  "src": "5275:54:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 35180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5343:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "id": 35177,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5335:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "5335:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5335:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35182,
                  "nodeType": "ExpressionStatement",
                  "src": "5335:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 35186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5359:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "id": 35183,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5351:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "5351:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5351:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35188,
                  "nodeType": "ExpressionStatement",
                  "src": "5351:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35193,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "5390:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 35192,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "5384:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 35194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5384:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35197,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5416:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5408:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5408:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5408:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35189,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "5368:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53054,
                      "src": "5368:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 35199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5368:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35200,
                  "nodeType": "ExpressionStatement",
                  "src": "5368:54:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35206,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5458:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5450:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5450:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5450:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35201,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "5428:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53145,
                      "src": "5428:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 35208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5428:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35209,
                  "nodeType": "ExpressionStatement",
                  "src": "5428:36:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35215,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5507:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 35214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5499:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35213,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5499:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5499:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35211,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "5479:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "5479:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5479:34:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35218,
                          "name": "rewardsStream",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34589,
                          "src": "5515:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 35219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5531:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5515:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35210,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "5470:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5470:63:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35222,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:63:90"
                }
              ]
            },
            "functionSelector": "58b4d79e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaimRewards",
            "nameLocation": "5063:16:90",
            "parameters": {
              "id": 35134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5079:2:90"
            },
            "returnParameters": {
              "id": 35135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5089:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35387,
            "nodeType": "FunctionDefinition",
            "src": "5542:811:90",
            "body": {
              "id": 35386,
              "nodeType": "Block",
              "src": "5585:768:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35227,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34922,
                      "src": "5591:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 35228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5591:9:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35229,
                  "nodeType": "ExpressionStatement",
                  "src": "5591:9:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35233,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34595,
                        "src": "5620:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35230,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5606:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56317,
                      "src": "5606:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 35234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5606:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35235,
                  "nodeType": "ExpressionStatement",
                  "src": "5606:21:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35239,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34595,
                        "src": "5648:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35240,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "5656:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 35236,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34574,
                        "src": "5633:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$75950",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 35238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75936,
                      "src": "5633:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 35241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5633:37:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35242,
                  "nodeType": "ExpressionStatement",
                  "src": "5633:37:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35248,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "5702:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 35247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5694:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35246,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5694:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5694:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35250,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "5720:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 35243,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34574,
                        "src": "5676:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$75950",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 35245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76055,
                      "src": "5676:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 35251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5676:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35252,
                  "nodeType": "ExpressionStatement",
                  "src": "5676:58:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35256,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34586,
                        "src": "5764:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35257,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34595,
                        "src": "5779:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35253,
                        "name": "autofarmERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34565,
                        "src": "5740:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                          "typeString": "contract AutofarmERC4626"
                        }
                      },
                      "id": 35255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50565,
                      "src": "5740:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 35258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:46:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35259,
                  "nodeType": "ExpressionStatement",
                  "src": "5740:46:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35260,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5792:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56334,
                      "src": "5792:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 35263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5792:14:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35264,
                  "nodeType": "ExpressionStatement",
                  "src": "5792:14:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5820:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35265,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5812:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "5812:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5812:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35270,
                  "nodeType": "ExpressionStatement",
                  "src": "5812:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 35274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5836:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 35271,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5828:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "5828:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5828:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35276,
                  "nodeType": "ExpressionStatement",
                  "src": "5828:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 35280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5870:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 35283,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5881:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5873:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5873:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5873:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35287,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5896:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5888:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5888:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5888:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35277,
                        "name": "autofarmERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34565,
                        "src": "5845:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                          "typeString": "contract AutofarmERC4626"
                        }
                      },
                      "id": 35279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50689,
                      "src": "5845:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 35289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5845:57:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35290,
                  "nodeType": "ExpressionStatement",
                  "src": "5845:57:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35295,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "5930:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 35294,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "5924:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 35296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5924:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35299,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5956:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5948:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5948:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5948:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35291,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "5908:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53054,
                      "src": "5908:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 35301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5908:54:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35302,
                  "nodeType": "ExpressionStatement",
                  "src": "5908:54:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 35306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5976:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "id": 35303,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5968:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56232,
                      "src": "5968:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5968:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35308,
                  "nodeType": "ExpressionStatement",
                  "src": "5968:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 35312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5992:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "id": 35309,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34562,
                        "src": "5984:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$56425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56237,
                      "src": "5984:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5984:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35314,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35319,
                            "name": "autofarmERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34565,
                            "src": "6023:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626_$23292",
                              "typeString": "contract AutofarmERC4626"
                            }
                          ],
                          "id": 35318,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76338,
                          "src": "6017:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$76338_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 35320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6017:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6049:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6041:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6041:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6041:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35325,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34595,
                        "src": "6056:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$76338",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35315,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "6001:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53105,
                      "src": "6001:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$76338_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract ERC20,address,address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 35326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6001:62:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 35327,
                  "nodeType": "ExpressionStatement",
                  "src": "6001:62:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35333,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6099:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                              "typeString": "contract AutofarmERC4626Test"
                            }
                          ],
                          "id": 35332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6091:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6091:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6091:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35328,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "6069:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53145,
                      "src": "6069:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 35335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6069:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35336,
                  "nodeType": "ExpressionStatement",
                  "src": "6069:36:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35340,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34595,
                        "src": "6133:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35337,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34568,
                        "src": "6111:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 35339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53145,
                      "src": "6111:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 35341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35342,
                  "nodeType": "ExpressionStatement",
                  "src": "6111:29:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35348,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6184:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 35347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6176:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35346,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6176:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6176:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35344,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "6156:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "6156:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6156:34:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 35351,
                                "name": "rewardsStream",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34589,
                                "src": "6193:13:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 35352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6209:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "6193:17:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 35354,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6192:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 35355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6214:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6192:23:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35343,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "6147:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6147:69:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35358,
                  "nodeType": "ExpressionStatement",
                  "src": "6147:69:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35364,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6259:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AutofarmERC4626Test_$35388",
                                  "typeString": "contract AutofarmERC4626Test"
                                }
                              ],
                              "id": 35363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6251:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35362,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6251:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6251:13:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35360,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "6231:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "6231:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6231:34:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 35367,
                                "name": "rewardsStream",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34589,
                                "src": "6268:13:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 35368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6284:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "6268:17:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 35370,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6267:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 35371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6289:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6267:23:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35359,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "6222:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6222:69:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35374,
                  "nodeType": "ExpressionStatement",
                  "src": "6222:69:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35380,
                                "name": "flywheel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34568,
                                "src": "6334:8:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                                  "typeString": "contract FlywheelCore"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FlywheelCore_$53519",
                                  "typeString": "contract FlywheelCore"
                                }
                              ],
                              "id": 35379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6326:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35378,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6326:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6326:17:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35376,
                            "name": "autoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "6306:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$75950",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 35377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75981,
                          "src": "6306:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 35382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6306:38:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 35383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6346:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 35375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51449,
                        51474,
                        51504,
                        51529,
                        51588,
                        51613,
                        51643,
                        51668,
                        52768,
                        52803
                      ],
                      "referencedDeclaration": 51643,
                      "src": "6297:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 35384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6297:51:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35385,
                  "nodeType": "ExpressionStatement",
                  "src": "6297:51:90"
                }
              ]
            },
            "functionSelector": "51bcd38f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaimForMultipleUser",
            "nameLocation": "5551:24:90",
            "parameters": {
              "id": 35225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5575:2:90"
            },
            "returnParameters": {
              "id": 35226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5585:0:90"
            },
            "scope": 35388,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34555,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52915,
              "src": "1001:6:90"
            },
            "id": 34556,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:6:90"
          }
        ],
        "canonicalName": "AutofarmERC4626Test",
        "contractDependencies": [
          23292,
          46555,
          46776,
          53519,
          73286,
          75950
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35388,
          52915
        ],
        "name": "AutofarmERC4626Test",
        "nameLocation": "978:19:90",
        "scope": 35389,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}
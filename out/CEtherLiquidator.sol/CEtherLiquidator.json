{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "strategyData",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610324806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806310badf4e14610030575b600080fd5b61004361003e3660046101fc565b610066565b604080516001600160a01b03909316835260208301919091520160405180910390f35b60405163db006a7560e01b8152600481018390526000908190859082906001600160a01b0383169063db006a75906024016020604051808303816000875af11580156100b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100da91906102d5565b90508015610156576040805162461bcd60e51b81526020600482015260248101919091527f4572726f722063616c6c696e672072656465656d696e67207365697a6564206360448201527f45746865723a206572726f7220636f6465206e6f7420657175616c20746f2030606482015260840160405180910390fd5b6000935047925073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b505050505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc293505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561021157600080fd5b83356001600160a01b038116811461022857600080fd5b925060208401359150604084013567ffffffffffffffff8082111561024c57600080fd5b818601915086601f83011261026057600080fd5b813581811115610272576102726101e6565b604051601f8201601f19908116603f0116810190838211818310171561029a5761029a6101e6565b816040528281528960208487010111156102b357600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156102e757600080fd5b505191905056fea264697066735822122055c7670c62ec02713d390c0ebc3d3d04da7d6549a705f739f942f03394b167c364736f6c634300080a0033",
    "sourceMap": "497:1585:131:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806310badf4e14610030575b600080fd5b61004361003e3660046101fc565b610066565b604080516001600160a01b03909316835260208301919091520160405180910390f35b60405163db006a7560e01b8152600481018390526000908190859082906001600160a01b0383169063db006a75906024016020604051808303816000875af11580156100b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100da91906102d5565b90508015610156576040805162461bcd60e51b81526020600482015260248101919091527f4572726f722063616c6c696e672072656465656d696e67207365697a6564206360448201527f45746865723a206572726f7220636f6465206e6f7420657175616c20746f2030606482015260840160405180910390fd5b6000935047925073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b505050505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc293505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561021157600080fd5b83356001600160a01b038116811461022857600080fd5b925060208401359150604084013567ffffffffffffffff8082111561024c57600080fd5b818601915086601f83011261026057600080fd5b813581811115610272576102726101e6565b604051601f8201601f19908116603f0116810190838211818310171561029a5761029a6101e6565b816040528281528960208487010111156102b357600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156102e757600080fd5b505191905056fea264697066735822122055c7670c62ec02713d390c0ebc3d3d04da7d6549a705f739f942f03394b167c364736f6c634300080a0033",
    "sourceMap": "497:1585:131:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:888;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1560:32:278;;;1542:51;;1624:2;1609:18;;1602:34;;;;1515:18;1192:888:131;;;;;;;;1539:26;;-1:-1:-1;;;1539:26:131;;;;;1793:25:278;;;1329:29:131;;;;1498:10;;1329:29;;-1:-1:-1;;;;;1539:13:131;;;;;1766:18:278;;1539:26:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1516:49;-1:-1:-1;1579:17:131;;1571:94;;;;;-1:-1:-1;;;1571:94:131;;2220:2:278;1571:94:131;;;2202:21:278;2239:18;;;2232:30;;;;2298:34;2278:18;;;2271:62;2369:34;2349:18;;;2342:62;2421:19;;1571:94:131;;;;;;;;1711:1;1671:43;;1735:21;1720:36;;646:42;-1:-1:-1;;;;;1969:16:131;;1994:12;1969:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:42;2016:59;;;;1192:888;;;;;;:::o;14:127:278:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1190;259:6;267;275;328:2;316:9;307:7;303:23;299:32;296:52;;;344:1;341;334:12;296:52;370:23;;-1:-1:-1;;;;;422:31:278;;412:42;;402:70;;468:1;465;458:12;402:70;491:5;-1:-1:-1;543:2:278;528:18;;515:32;;-1:-1:-1;598:2:278;583:18;;570:32;621:18;651:14;;;648:34;;;678:1;675;668:12;648:34;716:6;705:9;701:22;691:32;;761:7;754:4;750:2;746:13;742:27;732:55;;783:1;780;773:12;732:55;819:2;806:16;841:2;837;834:10;831:36;;;847:18;;:::i;:::-;922:2;916:9;890:2;976:13;;-1:-1:-1;;972:22:278;;;996:2;968:31;964:40;952:53;;;1020:18;;;1040:22;;;1017:46;1014:72;;;1066:18;;:::i;:::-;1106:10;1102:2;1095:22;1141:2;1133:6;1126:18;1181:7;1176:2;1171;1167;1163:11;1159:20;1156:33;1153:53;;;1202:1;1199;1192:12;1153:53;1258:2;1253;1249;1245:11;1240:2;1232:6;1228:15;1215:46;1303:1;1298:2;1293;1285:6;1281:15;1277:24;1270:35;1324:6;1314:16;;;;;;;146:1190;;;;;:::o;1829:184::-;1899:6;1952:2;1940:9;1931:7;1927:23;1923:32;1920:52;;;1968:1;1965;1958:12;1920:52;-1:-1:-1;1991:16:278;;1829:184;-1:-1:-1;1829:184:278:o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/peet/git/contracts/contracts/liquidators/CEtherLiquidator.sol",
    "id": 37549,
    "exportedSymbols": {
      "CEtherLiquidator": [
        37548
      ],
      "ICEther": [
        33180
      ],
      "ICToken": [
        33314
      ],
      "IERC20Upgradeable": [
        89465
      ],
      "IRedemptionStrategy": [
        39008
      ],
      "IW_NATIVE": [
        65587
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2044:131",
    "nodes": [
      {
        "id": 37458,
        "nodeType": "PragmaDirective",
        "src": "39:24:131",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 37459,
        "nodeType": "ImportDirective",
        "src": "65:88:131",
        "absolutePath": "/Users/peet/git/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37549,
        "sourceUnit": 89466,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37460,
        "nodeType": "ImportDirective",
        "src": "155:42:131",
        "absolutePath": "/Users/peet/git/contracts/contracts/external/compound/ICEther.sol",
        "file": "../external/compound/ICEther.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37549,
        "sourceUnit": 33181,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37461,
        "nodeType": "ImportDirective",
        "src": "199:32:131",
        "absolutePath": "/Users/peet/git/contracts/contracts/utils/IW_NATIVE.sol",
        "file": "../utils/IW_NATIVE.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37549,
        "sourceUnit": 65588,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37462,
        "nodeType": "ImportDirective",
        "src": "233:35:131",
        "absolutePath": "/Users/peet/git/contracts/contracts/liquidators/IRedemptionStrategy.sol",
        "file": "./IRedemptionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37549,
        "sourceUnit": 39009,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37548,
        "nodeType": "ContractDefinition",
        "src": "497:1585:131",
        "nodes": [
          {
            "id": 37472,
            "nodeType": "VariableDeclaration",
            "src": "598:91:131",
            "constant": true,
            "documentation": {
              "id": 37466,
              "nodeType": "StructuredDocumentation",
              "src": "550:45:131",
              "text": " @dev W_NATIVE contract object."
            },
            "mutability": "constant",
            "name": "W_NATIVE",
            "nameLocation": "625:8:131",
            "scope": 37548,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IW_NATIVE_$65587",
              "typeString": "contract IW_NATIVE"
            },
            "typeName": {
              "id": 37468,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37467,
                "name": "IW_NATIVE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65587,
                "src": "598:9:131"
              },
              "referencedDeclaration": 65587,
              "src": "598:9:131",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IW_NATIVE_$65587",
                "typeString": "contract IW_NATIVE"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 37470,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "646:42:131",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 37469,
                "name": "IW_NATIVE",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 65587,
                "src": "636:9:131",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IW_NATIVE_$65587_$",
                  "typeString": "type(contract IW_NATIVE)"
                }
              },
              "id": 37471,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "636:53:131",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IW_NATIVE_$65587",
                "typeString": "contract IW_NATIVE"
              }
            },
            "visibility": "private"
          },
          {
            "id": 37547,
            "nodeType": "FunctionDefinition",
            "src": "1192:888:131",
            "baseFunctions": [
              39007
            ],
            "body": {
              "id": 37546,
              "nodeType": "Block",
              "src": "1382:698:131",
              "statements": [
                {
                  "assignments": [
                    37491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37491,
                      "mutability": "mutable",
                      "name": "cEther",
                      "nameLocation": "1473:6:131",
                      "nodeType": "VariableDeclaration",
                      "scope": 37546,
                      "src": "1465:14:131",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICEther_$33180",
                        "typeString": "contract ICEther"
                      },
                      "typeName": {
                        "id": 37490,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37489,
                          "name": "ICEther",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33180,
                          "src": "1465:7:131"
                        },
                        "referencedDeclaration": 33180,
                        "src": "1465:7:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICEther_$33180",
                          "typeString": "contract ICEther"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37498,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37495,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37476,
                            "src": "1498:10:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 37494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1490:7:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1490:7:131",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1490:19:131",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37492,
                      "name": "ICEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33180,
                      "src": "1482:7:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICEther_$33180_$",
                        "typeString": "type(contract ICEther)"
                      }
                    },
                    "id": 37497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:28:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICEther_$33180",
                      "typeString": "contract ICEther"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1465:45:131"
                },
                {
                  "assignments": [
                    37500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37500,
                      "mutability": "mutable",
                      "name": "redeemResult",
                      "nameLocation": "1524:12:131",
                      "nodeType": "VariableDeclaration",
                      "scope": 37546,
                      "src": "1516:20:131",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37499,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1516:7:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37505,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37503,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37478,
                        "src": "1553:11:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37501,
                        "name": "cEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37491,
                        "src": "1539:6:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICEther_$33180",
                          "typeString": "contract ICEther"
                        }
                      },
                      "id": 37502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33306,
                      "src": "1539:13:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 37504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:26:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1516:49:131"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37507,
                          "name": "redeemResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37500,
                          "src": "1579:12:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1595:1:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1579:17:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f722063616c6c696e672072656465656d696e67207365697a6564206345746865723a206572726f7220636f6465206e6f7420657175616c20746f2030",
                        "id": 37510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:66:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c65a642a5b15c78a2e7accf19795e7139adae470160d3651f7ed1dd0dedeb7c",
                          "typeString": "literal_string \"Error calling redeeming seized cEther: error code not equal to 0\""
                        },
                        "value": "Error calling redeeming seized cEther: error code not equal to 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c65a642a5b15c78a2e7accf19795e7139adae470160d3651f7ed1dd0dedeb7c",
                          "typeString": "literal_string \"Error calling redeeming seized cEther: error code not equal to 0\""
                        }
                      ],
                      "id": 37506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1571:7:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:94:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37512,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:94:131"
                },
                {
                  "expression": {
                    "id": 37520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37513,
                      "name": "outputToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37485,
                      "src": "1671:11:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 37517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1711:1:131",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1703:7:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37515,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1703:7:131",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1703:10:131",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37514,
                        "name": "IERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89465,
                        "src": "1685:17:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$89465_$",
                          "typeString": "type(contract IERC20Upgradeable)"
                        }
                      },
                      "id": 37519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1685:29:131",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "1671:43:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 37521,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:43:131"
                },
                {
                  "expression": {
                    "id": 37528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37522,
                      "name": "outputAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37487,
                      "src": "1720:12:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 37525,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1743:4:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CEtherLiquidator_$37548",
                              "typeString": "contract CEtherLiquidator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CEtherLiquidator_$37548",
                              "typeString": "contract CEtherLiquidator"
                            }
                          ],
                          "id": 37524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1735:7:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37523,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1735:7:131",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1735:13:131",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 37527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1735:21:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1720:36:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37529,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:36:131"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 37530,
                          "name": "W_NATIVE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37472,
                          "src": "1969:8:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IW_NATIVE_$65587",
                            "typeString": "contract IW_NATIVE"
                          }
                        },
                        "id": 37532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65552,
                        "src": "1969:16:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 37534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 37533,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37487,
                          "src": "1994:12:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1969:39:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 37535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:41:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37536,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:41:131"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 37540,
                                "name": "W_NATIVE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37472,
                                "src": "2050:8:131",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IW_NATIVE_$65587",
                                  "typeString": "contract IW_NATIVE"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IW_NATIVE_$65587",
                                  "typeString": "contract IW_NATIVE"
                                }
                              ],
                              "id": 37539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2042:7:131",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 37538,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2042:7:131",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2042:17:131",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37537,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89465,
                          "src": "2024:17:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$89465_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 37542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:36:131",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      {
                        "id": 37543,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37487,
                        "src": "2062:12:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 37544,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2023:52:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20Upgradeable_$89465_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20Upgradeable,uint256)"
                    }
                  },
                  "functionReturnParameters": 37488,
                  "id": 37545,
                  "nodeType": "Return",
                  "src": "2016:59:131"
                }
              ]
            },
            "documentation": {
              "id": 37473,
              "nodeType": "StructuredDocumentation",
              "src": "694:495:131",
              "text": " @notice Redeems custom collateral `token` for an underlying token.\n @param inputToken The input wrapped token to be redeemed for an underlying token.\n @param inputAmount The amount of the input wrapped token to be redeemed for an underlying token.\n @param strategyData The ABI-encoded data to be used in the redemption strategy logic.\n @return outputToken The underlying ERC20 token outputted.\n @return outputAmount The quantity of underlying tokens outputted."
            },
            "functionSelector": "10badf4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "1201:6:131",
            "overrides": {
              "id": 37482,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1311:8:131"
            },
            "parameters": {
              "id": 37481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37476,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "1231:10:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 37547,
                  "src": "1213:28:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                    "typeString": "contract IERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 37475,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37474,
                      "name": "IERC20Upgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89465,
                      "src": "1213:17:131"
                    },
                    "referencedDeclaration": 89465,
                    "src": "1213:17:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37478,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "1255:11:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 37547,
                  "src": "1247:19:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37480,
                  "mutability": "mutable",
                  "name": "strategyData",
                  "nameLocation": "1285:12:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 37547,
                  "src": "1272:25:131",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37479,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:5:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1207:94:131"
            },
            "returnParameters": {
              "id": 37488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37485,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "1347:11:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 37547,
                  "src": "1329:29:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                    "typeString": "contract IERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 37484,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37483,
                      "name": "IERC20Upgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89465,
                      "src": "1329:17:131"
                    },
                    "referencedDeclaration": 89465,
                    "src": "1329:17:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$89465",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37487,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nameLocation": "1368:12:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 37547,
                  "src": "1360:20:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:53:131"
            },
            "scope": 37548,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37464,
              "name": "IRedemptionStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39008,
              "src": "526:19:131"
            },
            "id": 37465,
            "nodeType": "InheritanceSpecifier",
            "src": "526:19:131"
          }
        ],
        "canonicalName": "CEtherLiquidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37463,
          "nodeType": "StructuredDocumentation",
          "src": "270:226:131",
          "text": " @title CEtherLiquidator\n @notice Redeems seized Compound/Cream/Fuse CEther cTokens for underlying ETH for use as a step in a liquidation.\n @author David Lucid <david@rari.capital> (https://github.com/davidlucid)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37548,
          39008
        ],
        "name": "CEtherLiquidator",
        "nameLocation": "506:16:131",
        "scope": 37549,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}
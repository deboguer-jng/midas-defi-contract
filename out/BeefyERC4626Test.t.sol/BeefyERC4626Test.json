{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "503:2070:76:-:0;;;1572:26:107;;;-1:-1:-1;;1572:26:107;1594:4;1572:26;;;718:6:76;694:30;;503:2070;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "503:2070:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:295;;;:::i;:::-;;543:40;;1671:64:107;543:40:76;;;;;-1:-1:-1;;;;;190:32:143;;;172:51;;160:2;145:18;543:40:76;;;;;;;;1028:286;;;:::i;1520:581::-;;;:::i;1819:584:107:-;;;:::i;:::-;;;399:14:143;;392:22;374:41;;362:2;347:18;1819:584:107;234:187:143;1318:198:76;;;:::i;2105:466::-;;;:::i;1572:26:107:-;;;;;;;;;729:295:76;805:2;771:37;;;;;:::i;:::-;764:2:143;746:21;;;803:1;783:18;;;776:29;-1:-1:-1;;;836:3:143;821:19;;814:40;892:3;885:4;870:20;;863:33;;;933:1;912:19;;;905:30;-1:-1:-1;;;966:3:143;951:19;;944:34;1062:4;1050:17;;;-1:-1:-1;1030:18:143;;1023:45;1010:3;995:19;771:37:76;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;759:9:76;:49;;-1:-1:-1;;;;;;759:49:76;-1:-1:-1;;;;;759:49:76;;;;;;;;;829:36;;;;;:::i;:::-;-1:-1:-1;;;;;190:32:143;;;172:51;;160:2;145:18;829:36:76;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;814:12:76;:51;;-1:-1:-1;;;;;;814:51:76;-1:-1:-1;;;;;814:51:76;;;;;;;;;883:55;;;;;:::i;:::-;-1:-1:-1;;;;;1618:32:143;;;1600:51;;1687:2;1682;1667:18;;1660:30;;;1726:1;1706:18;;;1699:29;-1:-1:-1;;;1759:3:143;1744:19;;1737:40;1638:3;1808:2;1793:18;;1786:31;;;1854:1;1833:19;;;1826:30;-1:-1:-1;;;1887:3:143;1872:19;;1865:33;1930:3;1915:19;883:55:76;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:9:76;:67;;-1:-1:-1;;;;;;871:67:76;-1:-1:-1;;;;;871:67:76;;;;;;;;;-1:-1:-1;976:9:76;959:60;;976:9;;;959:60;;;:::i;:::-;-1:-1:-1;;;;;2215:15:143;;;2197:34;;2267:15;;2262:2;2247:18;;2240:43;2147:2;2132:18;959:60:76;;;;;;;;;;;;;;;;;;;;;;;944:12;;:75;;;;;-1:-1:-1;;;;;944:75:76;;;;;-1:-1:-1;;;;;944:75:76;;;;;;729:295::o;1028:286::-;1074:54;1083:12;;;;;;;;;-1:-1:-1;;;;;1083:12:76;-1:-1:-1;;;;;1083:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1083:19:76;;;;;;;;;;;;:::i;:::-;1074:54;;;;;;;;;;;;;-1:-1:-1;;;1074:54:76;;;:8;:54::i;:::-;1134:40;1143:12;;;;;;;;;-1:-1:-1;;;;;1143:12:76;-1:-1:-1;;;;;1143:19:76;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1143:21:76;;;;;;;;;;;;:::i;:::-;1134:40;;;;;;;;;;;;;-1:-1:-1;;;1134:40:76;;;:8;:40::i;:::-;1180:59;1197:12;;;;;;;;;-1:-1:-1;;;;;1197:12:76;-1:-1:-1;;;;;1197:18:76;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1228:9;;-1:-1:-1;;;;;1228:9:76;1180:8;:59::i;:::-;1245:64;1262:12;;;;;;;;;-1:-1:-1;;;;;1262:12:76;-1:-1:-1;;;;;1262:23:76;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1298:9;;-1:-1:-1;;;;;1298:9:76;1245:8;:64::i;:::-;1028:286::o;1520:581::-;1556:9;:7;:9::i;:::-;1624;;:34;;-1:-1:-1;;;1624:34:76;;1652:4;1624:34;;;172:51:143;1615:47:76;;-1:-1:-1;;;;;1624:9:76;;:19;;145:18:143;;1624:34:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1660:1;1615:8;:47::i;:::-;1677:9;;1705;;1677:39;;-1:-1:-1;;;1677:39:76;;-1:-1:-1;;;;;1705:9:76;;;1677:39;;;172:51:143;1668:52:76;;1677:9;;;;;:19;;145:18:143;;1677:39:76;14:215:143;1668:52:76;1735:9;;1763:12;;1735:42;;-1:-1:-1;;;1735:42:76;;-1:-1:-1;;;;;1763:12:76;;;1735:42;;;172:51:143;1726:67:76;;1735:9;;;;;:19;;145:18:143;;1735:42:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1779:13;;1726:8;:67::i;:::-;1844:51;1853:12;;;;;;;;;-1:-1:-1;;;;;1853:12:76;-1:-1:-1;;;;;1853:24:76;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:51;1910:12;;:47;;-1:-1:-1;;;1910:47:76;;1951:4;1910:47;;;172:51:143;1901:72:76;;1910:12;;;-1:-1:-1;;;;;1910:12:76;;:32;;145:18:143;;1910:47:76;14:215:143;1901:72:76;2043:12;;:37;;-1:-1:-1;;;2043:37:76;;2074:4;2043:37;;;172:51:143;2034:62:76;;2043:12;;;-1:-1:-1;;;;;2043:12:76;;:22;;145:18:143;;2043:37:76;14:215:143;1819:584:107;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:107;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4646:51:143;;;-1:-1:-1;;;4713:18:143;;;4706:34;2196:43:107;;;;;;;;;4619:18:143;;;2196:43:107;;;-1:-1:-1;;1671:64:107;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:107;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:107:o;1318:198:76:-;1350:9;;1380:13;;;1350:44;;-1:-1:-1;;;1350:44:76;;1373:4;1350:44;;;4646:51:143;;;;4713:18;;;4706:34;-1:-1:-1;;;;;1350:9:76;;;;:14;;4619:18:143;;1350:44:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1400:9:76;;;1426:12;1441:13;;;1400:55;;-1:-1:-1;;;1400:55:76;;-1:-1:-1;;;;;1426:12:76;;;;;;1400:55;;;4646:51:143;;;;4713:18;;;4706:34;1400:9:76;;;-1:-1:-1;1400:17:76;;-1:-1:-1;4619:18:143;;1400:55:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1461:12:76;;1482:13;;;1461:50;;-1:-1:-1;;;1461:50:76;;;;;6141:25:143;1505:4:76;6182:18:143;;;6175:60;1461:12:76;;;;-1:-1:-1;;;;;1461:12:76;;:20;;6114:18:143;;1461:50:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1318:198::o;2105:466::-;2142:9;:7;:9::i;:::-;2157:12;;2179:13;;;2157:66;;-1:-1:-1;;;2157:66:76;;;;;6448:25:143;2202:4:76;6527:18:143;;;6520:43;;;6579:18;;;6572:43;2157:12:76;;;;-1:-1:-1;;;;;2157:12:76;;:21;;6421:18:143;;2157:66:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2283:9:76;;:34;;-1:-1:-1;;;2283:34:76;;2311:4;2283:34;;;172:51:143;2274:59:76;;-1:-1:-1;;;;;2283:9:76;;:19;;145:18:143;;2283:34:76;14:215:143;2274:59:76;2348:9;;2376;;2348:39;;-1:-1:-1;;;2348:39:76;;-1:-1:-1;;;;;2376:9:76;;;2348:39;;;172:51:143;2339:52:76;;2348:9;;;;;:19;;145:18:143;;2348:39:76;14:215:143;2339:52:76;2406:9;;2434:12;;2406:42;;-1:-1:-1;;;2406:42:76;;-1:-1:-1;;;;;2434:12:76;;;2406:42;;;172:51:143;2397:55:76;;2406:9;;;;;:19;;145:18:143;;2406:42:76;14:215:143;2397:55:76;2525:12;;:37;;-1:-1:-1;;;2525:37:76;;2556:4;2525:37;;;172:51:143;2516:50:76;;2525:12;;;-1:-1:-1;;;;;2525:12:76;;:22;;145:18:143;;2525:37:76;14:215:143;14688:342:107;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:265;;14848:43;;;;;7109:2:143;7091:21;;;7148:2;7128:18;;;7121:30;7187:34;7182:2;7167:18;;7160:62;-1:-1:-1;;;7253:2:143;7238:18;;7231:34;7297:3;7282:19;;6907:400;14848:43:107;;;;;;;;14910:32;14940:1;14910:32;;;;;;:::i;:::-;;;;;;;;14961;14991:1;14961:32;;;;;;:::i;:::-;;;;;;;;15007:6;:4;:6::i;:::-;14688:342;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:107;:1;-1:-1:-1;;;;;3678:6:107;;3674:212;;3705:44;;;;;8687:2:143;8669:21;;;8726:2;8706:18;;;8699:30;8765:34;8760:2;8745:18;;8738:62;-1:-1:-1;;;8831:2:143;8816:18;;8809:35;8876:3;8861:19;;8485:401;3705:44:107;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;10179:2:143;10161:21;;;10218:2;10198:18;;;10191:30;10257:34;10252:2;10237:18;;10230:62;-1:-1:-1;;;10323:2:143;10308:18;;10301:32;10365:3;10350:19;;9977:398;5286:41:107;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;11288:51:143;;;-1:-1:-1;;;11355:18:143;;;11348:34;;;;2705:4:107;11398:18:143;;;11391:34;2482:11:107;;1671:64;2579:43;;11261:18:143;;2645:67:107;;;-1:-1:-1;;2645:67:107;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:107;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:107;2813:7;:14;;-1:-1:-1;;2813:14:107;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;2294:127:143:-;2355:10;2350:3;2346:20;2343:1;2336:31;2386:4;2383:1;2376:15;2410:4;2407:1;2400:15;2426:258;2498:1;2508:113;2522:6;2519:1;2516:13;2508:113;;;2598:11;;;2592:18;2579:11;;;2572:39;2544:2;2537:10;2508:113;;;2639:6;2636:1;2633:13;2630:48;;;2674:1;2665:6;2660:3;2656:16;2649:27;2630:48;;2426:258;;;:::o;2689:884::-;2769:6;2822:2;2810:9;2801:7;2797:23;2793:32;2790:52;;;2838:1;2835;2828:12;2790:52;2871:9;2865:16;2900:18;2941:2;2933:6;2930:14;2927:34;;;2957:1;2954;2947:12;2927:34;2995:6;2984:9;2980:22;2970:32;;3040:7;3033:4;3029:2;3025:13;3021:27;3011:55;;3062:1;3059;3052:12;3011:55;3091:2;3085:9;3113:2;3109;3106:10;3103:36;;;3119:18;;:::i;:::-;3194:2;3188:9;3162:2;3248:13;;-1:-1:-1;;3244:22:143;;;3268:2;3240:31;3236:40;3224:53;;;3292:18;;;3312:22;;;3289:46;3286:72;;;3338:18;;:::i;:::-;3378:10;3374:2;3367:22;3413:2;3405:6;3398:18;3453:7;3448:2;3443;3439;3435:11;3431:20;3428:33;3425:53;;;3474:1;3471;3464:12;3425:53;3487:55;3539:2;3534;3526:6;3522:15;3517:2;3513;3509:11;3487:55;:::i;:::-;3561:6;2689:884;-1:-1:-1;;;;;;;2689:884:143:o;3578:138::-;-1:-1:-1;;;;;3660:31:143;;3650:42;;3640:70;;3706:1;3703;3696:12;3721:273;3806:6;3859:2;3847:9;3838:7;3834:23;3830:32;3827:52;;;3875:1;3872;3865:12;3827:52;3907:9;3901:16;3926:38;3958:5;3926:38;:::i;:::-;3983:5;3721:273;-1:-1:-1;;;3721:273:143:o;4283:184::-;4353:6;4406:2;4394:9;4385:7;4381:23;4377:32;4374:52;;;4422:1;4419;4412:12;4374:52;-1:-1:-1;4445:16:143;;4283:184;-1:-1:-1;4283:184:143:o;4751:371::-;-1:-1:-1;;;;;;4936:33:143;;4924:46;;4993:13;;4906:3;;5015:61;4993:13;5065:1;5056:11;;5049:4;5037:17;;5015:61;:::i;:::-;5096:16;;;;5114:1;5092:24;;4751:371;-1:-1:-1;;;4751:371:143:o;5127:274::-;5256:3;5294:6;5288:13;5310:53;5356:6;5351:3;5344:4;5336:6;5332:17;5310:53;:::i;:::-;5379:16;;;;;5127:274;-1:-1:-1;;5127:274:143:o;5406:277::-;5473:6;5526:2;5514:9;5505:7;5501:23;5497:32;5494:52;;;5542:1;5539;5532:12;5494:52;5574:9;5568:16;5627:5;5620:13;5613:21;5606:5;5603:32;5593:60;;5649:1;5646;5639:12;7312:258;7354:3;7392:5;7386:12;7419:6;7414:3;7407:19;7435:63;7491:6;7484:4;7479:3;7475:14;7468:4;7461:5;7457:16;7435:63;:::i;:::-;7552:2;7531:15;-1:-1:-1;;7527:29:143;7518:39;;;;7559:4;7514:50;;7312:258;-1:-1:-1;;7312:258:143:o;7575:450::-;7825:2;7814:9;7807:21;7864:1;7859:2;7848:9;7844:18;7837:29;-1:-1:-1;;;7897:2:143;7886:9;7882:18;7875:39;7952:3;7945:4;7934:9;7930:20;7923:33;7788:4;7973:46;8014:3;8003:9;7999:19;7991:6;7973:46;:::i;8030:450::-;8280:2;8269:9;8262:21;8319:1;8314:2;8303:9;8299:18;8292:29;-1:-1:-1;;;8352:2:143;8341:9;8337:18;8330:39;8407:3;8400:4;8389:9;8385:20;8378:33;8243:4;8428:46;8469:3;8458:9;8454:19;8446:6;8428:46;:::i;9055:374::-;9285:2;9274:9;9267:21;9248:4;9305:49;9350:2;9339:9;9335:18;8968:2;8956:15;;-1:-1:-1;;;8996:4:143;8987:14;;8980:36;9041:2;9032:12;;8891:159;9305:49;-1:-1:-1;;;;;9390:32:143;;;;9385:2;9370:18;;;;9363:60;;;;-1:-1:-1;9297:57:143;9055:374::o;9598:::-;9828:2;9817:9;9810:21;9791:4;9848:49;9893:2;9882:9;9878:18;9511:2;9499:15;;-1:-1:-1;;;9539:4:143;9530:14;;9523:36;9584:2;9575:12;;9434:159;10380:348;10610:2;10599:9;10592:21;10573:4;10630:49;10675:2;10664:9;10660:18;8968:2;8956:15;;-1:-1:-1;;;8996:4:143;8987:14;;8980:36;9041:2;9032:12;;8891:159;10630:49;10622:57;;10715:6;10710:2;10699:9;10695:18;10688:34;10380:348;;;;:::o;10733:::-;10963:2;10952:9;10945:21;10926:4;10983:49;11028:2;11017:9;11013:18;9511:2;9499:15;;-1:-1:-1;;;9539:4:143;9530:14;;9523:36;9584:2;9575:12;;9434:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/BeefyERC4626Test.t.sol",
    "id": 26926,
    "exportedSymbols": {
      "BeefyERC4626": [
        18104
      ],
      "BeefyERC4626Test": [
        26925
      ],
      "DSTest": [
        40790
      ],
      "ERC20": [
        64213
      ],
      "IBeefyVault": [
        17968
      ],
      "IStrategy": [
        35778
      ],
      "MockERC20": [
        63825
      ],
      "MockStrategy": [
        35835
      ],
      "MockVault": [
        36089
      ],
      "Vm": [
        44300
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2535:76",
    "nodes": [
      {
        "id": 26622,
        "nodeType": "PragmaDirective",
        "src": "39:25:76",
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 26623,
        "nodeType": "ImportDirective",
        "src": "66:26:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 40791,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26624,
        "nodeType": "ImportDirective",
        "src": "93:26:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 44301,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26626,
        "nodeType": "ImportDirective",
        "src": "121:49:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 64214,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26625,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "130:5:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26628,
        "nodeType": "ImportDirective",
        "src": "171:67:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 63826,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26627,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "180:9:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26631,
        "nodeType": "ImportDirective",
        "src": "240:84:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/compound/strategies/BeefyERC4626.sol",
        "file": "../compound/strategies/BeefyERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 18105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26629,
              "name": "BeefyERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "249:12:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 26630,
              "name": "IBeefyVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "263:11:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26633,
        "nodeType": "ImportDirective",
        "src": "325:62:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/beefy/MockStrategy.sol",
        "file": "./mocks/beefy/MockStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 35836,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26632,
              "name": "MockStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "334:12:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26635,
        "nodeType": "ImportDirective",
        "src": "388:56:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/beefy/MockVault.sol",
        "file": "./mocks/beefy/MockVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 36090,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26634,
              "name": "MockVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "397:9:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26637,
        "nodeType": "ImportDirective",
        "src": "445:56:76",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/beefy/IStrategy.sol",
        "file": "./mocks/beefy/IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26926,
        "sourceUnit": 35779,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26636,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "454:9:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26925,
        "nodeType": "ContractDefinition",
        "src": "503:2070:76",
        "nodes": [
          {
            "id": 26645,
            "nodeType": "VariableDeclaration",
            "src": "543:40:76",
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "562:2:76",
            "scope": 26925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$44300",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 26641,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26640,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44300,
                "src": "543:2:76"
              },
              "referencedDeclaration": 44300,
              "src": "543:2:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$44300",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 26643,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39111,
                  "src": "570:12:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 26642,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44300,
                "src": "567:2:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$44300_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 26644,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "567:16:76",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$44300",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26648,
            "nodeType": "VariableDeclaration",
            "src": "588:25:76",
            "constant": false,
            "mutability": "mutable",
            "name": "beefyERC4626",
            "nameLocation": "601:12:76",
            "scope": 26925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
              "typeString": "contract BeefyERC4626"
            },
            "typeName": {
              "id": 26647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26646,
                "name": "BeefyERC4626",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18104,
                "src": "588:12:76"
              },
              "referencedDeclaration": 18104,
              "src": "588:12:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                "typeString": "contract BeefyERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26651,
            "nodeType": "VariableDeclaration",
            "src": "618:19:76",
            "constant": false,
            "mutability": "mutable",
            "name": "testToken",
            "nameLocation": "628:9:76",
            "scope": 26925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$63825",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 26650,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26649,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 63825,
                "src": "618:9:76"
              },
              "referencedDeclaration": 63825,
              "src": "618:9:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$63825",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26654,
            "nodeType": "VariableDeclaration",
            "src": "641:25:76",
            "constant": false,
            "mutability": "mutable",
            "name": "mockStrategy",
            "nameLocation": "654:12:76",
            "scope": 26925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockStrategy_$35835",
              "typeString": "contract MockStrategy"
            },
            "typeName": {
              "id": 26653,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26652,
                "name": "MockStrategy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35835,
                "src": "641:12:76"
              },
              "referencedDeclaration": 35835,
              "src": "641:12:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockStrategy_$35835",
                "typeString": "contract MockStrategy"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26657,
            "nodeType": "VariableDeclaration",
            "src": "670:19:76",
            "constant": false,
            "mutability": "mutable",
            "name": "mockVault",
            "nameLocation": "680:9:76",
            "scope": 26925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVault_$36089",
              "typeString": "contract MockVault"
            },
            "typeName": {
              "id": 26656,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26655,
                "name": "MockVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36089,
                "src": "670:9:76"
              },
              "referencedDeclaration": 36089,
              "src": "670:9:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVault_$36089",
                "typeString": "contract MockVault"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26660,
            "nodeType": "VariableDeclaration",
            "src": "694:30:76",
            "constant": false,
            "mutability": "mutable",
            "name": "depositAmount",
            "nameLocation": "702:13:76",
            "scope": 26925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26658,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "694:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030653138",
              "id": 26659,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "718:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100e18"
            },
            "visibility": "internal"
          },
          {
            "id": 26712,
            "nodeType": "FunctionDefinition",
            "src": "729:295:76",
            "body": {
              "id": 26711,
              "nodeType": "Block",
              "src": "753:271:76",
              "statements": [
                {
                  "expression": {
                    "id": 26671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26663,
                      "name": "testToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26651,
                      "src": "759:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$63825",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374546f6b656e",
                          "id": 26667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "785:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          "value": "TestToken"
                        },
                        {
                          "hexValue": "545354",
                          "id": 26668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "798:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          "value": "TST"
                        },
                        {
                          "hexValue": "3138",
                          "id": 26669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "805:2:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 26666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "771:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$63825_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 26665,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26664,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 63825,
                            "src": "775:9:76"
                          },
                          "referencedDeclaration": 63825,
                          "src": "775:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$63825",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 26670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "771:37:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$63825",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "759:49:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$63825",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 26672,
                  "nodeType": "ExpressionStatement",
                  "src": "759:49:76"
                },
                {
                  "expression": {
                    "id": 26682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26673,
                      "name": "mockStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26654,
                      "src": "814:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStrategy_$35835",
                        "typeString": "contract MockStrategy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26679,
                              "name": "testToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26651,
                              "src": "854:9:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$63825",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$63825",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 26678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "846:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26677,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "846:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:18:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "829:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MockStrategy_$35835_$",
                          "typeString": "function (address) returns (contract MockStrategy)"
                        },
                        "typeName": {
                          "id": 26675,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26674,
                            "name": "MockStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 35835,
                            "src": "833:12:76"
                          },
                          "referencedDeclaration": 35835,
                          "src": "833:12:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStrategy_$35835",
                            "typeString": "contract MockStrategy"
                          }
                        }
                      },
                      "id": 26681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:36:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStrategy_$35835",
                        "typeString": "contract MockStrategy"
                      }
                    },
                    "src": "814:51:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockStrategy_$35835",
                      "typeString": "contract MockStrategy"
                    }
                  },
                  "id": 26683,
                  "nodeType": "ExpressionStatement",
                  "src": "814:51:76"
                },
                {
                  "expression": {
                    "id": 26695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26684,
                      "name": "mockVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26657,
                      "src": "871:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$36089",
                        "typeString": "contract MockVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26690,
                              "name": "mockStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26654,
                              "src": "905:12:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockStrategy_$35835",
                                "typeString": "contract MockStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockStrategy_$35835",
                                "typeString": "contract MockStrategy"
                              }
                            ],
                            "id": 26689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "897:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26688,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "897:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "897:21:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "4d6f636b5661756c74",
                          "id": 26692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "920:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8a7e1a0739a0f0adeef3b969c72d260ae979255ecde3cef0f09fbbf195eff4a1",
                            "typeString": "literal_string \"MockVault\""
                          },
                          "value": "MockVault"
                        },
                        {
                          "hexValue": "4d56",
                          "id": 26693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "933:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1c16d2c62307891734e770f2023626451e0c3d76f5ac0019c15f8071e68c635f",
                            "typeString": "literal_string \"MV\""
                          },
                          "value": "MV"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8a7e1a0739a0f0adeef3b969c72d260ae979255ecde3cef0f09fbbf195eff4a1",
                            "typeString": "literal_string \"MockVault\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1c16d2c62307891734e770f2023626451e0c3d76f5ac0019c15f8071e68c635f",
                            "typeString": "literal_string \"MV\""
                          }
                        ],
                        "id": 26687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "883:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MockVault_$36089_$",
                          "typeString": "function (address,string memory,string memory) returns (contract MockVault)"
                        },
                        "typeName": {
                          "id": 26686,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26685,
                            "name": "MockVault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36089,
                            "src": "887:9:76"
                          },
                          "referencedDeclaration": 36089,
                          "src": "887:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVault_$36089",
                            "typeString": "contract MockVault"
                          }
                        }
                      },
                      "id": 26694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "883:55:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$36089",
                        "typeString": "contract MockVault"
                      }
                    },
                    "src": "871:67:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVault_$36089",
                      "typeString": "contract MockVault"
                    }
                  },
                  "id": 26696,
                  "nodeType": "ExpressionStatement",
                  "src": "871:67:76"
                },
                {
                  "expression": {
                    "id": 26709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26697,
                      "name": "beefyERC4626",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26648,
                      "src": "944:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                        "typeString": "contract BeefyERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26701,
                          "name": "testToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26651,
                          "src": "976:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$63825",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 26705,
                                  "name": "mockVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26657,
                                  "src": "1007:9:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVault_$36089",
                                    "typeString": "contract MockVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVault_$36089",
                                    "typeString": "contract MockVault"
                                  }
                                ],
                                "id": 26704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "999:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 26703,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "999:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 26706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "999:18:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26702,
                            "name": "IBeefyVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17968,
                            "src": "987:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBeefyVault_$17968_$",
                              "typeString": "type(contract IBeefyVault)"
                            }
                          },
                          "id": 26707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "987:31:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBeefyVault_$17968",
                            "typeString": "contract IBeefyVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$63825",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IBeefyVault_$17968",
                            "typeString": "contract IBeefyVault"
                          }
                        ],
                        "id": 26700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "959:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$64213_$_t_contract$_IBeefyVault_$17968_$returns$_t_contract$_BeefyERC4626_$18104_$",
                          "typeString": "function (contract ERC20,contract IBeefyVault) returns (contract BeefyERC4626)"
                        },
                        "typeName": {
                          "id": 26699,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26698,
                            "name": "BeefyERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18104,
                            "src": "963:12:76"
                          },
                          "referencedDeclaration": 18104,
                          "src": "963:12:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                            "typeString": "contract BeefyERC4626"
                          }
                        }
                      },
                      "id": 26708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:60:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                        "typeString": "contract BeefyERC4626"
                      }
                    },
                    "src": "944:75:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                      "typeString": "contract BeefyERC4626"
                    }
                  },
                  "id": 26710,
                  "nodeType": "ExpressionStatement",
                  "src": "944:75:76"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "738:5:76",
            "parameters": {
              "id": 26661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:2:76"
            },
            "returnParameters": {
              "id": 26662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:76"
            },
            "scope": 26925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26756,
            "nodeType": "FunctionDefinition",
            "src": "1028:286:76",
            "body": {
              "id": 26755,
              "nodeType": "Block",
              "src": "1068:246:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26716,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "1083:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          },
                          "id": 26717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63846,
                          "src": "1083:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 26718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:19:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d696461732054657374546f6b656e205661756c74",
                        "id": 26719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1104:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        },
                        "value": "Midas TestToken Vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        }
                      ],
                      "id": 26715,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 40643,
                      "src": "1074:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 26720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:54:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26721,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:54:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26723,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "1143:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          },
                          "id": 26724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63848,
                          "src": "1143:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 26725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1143:21:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6d76545354",
                        "id": 26726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1166:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        },
                        "value": "mvTST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        }
                      ],
                      "id": 26722,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 40643,
                      "src": "1134:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 26727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26728,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:40:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 26732,
                                "name": "beefyERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26648,
                                "src": "1197:12:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                                  "typeString": "contract BeefyERC4626"
                                }
                              },
                              "id": 26733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38366,
                              "src": "1197:18:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$64213_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 26734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1197:20:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$64213",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$64213",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 26731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1189:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1189:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1189:29:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26738,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "1228:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 26737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1220:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26736,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1220:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1220:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26729,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39324,
                      "src": "1180:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 26740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:59:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26741,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:59:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 26745,
                                "name": "beefyERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26648,
                                "src": "1262:12:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                                  "typeString": "contract BeefyERC4626"
                                }
                              },
                              "id": 26746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "beefyVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17981,
                              "src": "1262:23:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IBeefyVault_$17968_$",
                                "typeString": "function () view external returns (contract IBeefyVault)"
                              }
                            },
                            "id": 26747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1262:25:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBeefyVault_$17968",
                              "typeString": "contract IBeefyVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBeefyVault_$17968",
                              "typeString": "contract IBeefyVault"
                            }
                          ],
                          "id": 26744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1254:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26743,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1254:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1254:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26751,
                            "name": "mockVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26657,
                            "src": "1298:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVault_$36089",
                              "typeString": "contract MockVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVault_$36089",
                              "typeString": "contract MockVault"
                            }
                          ],
                          "id": 26750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26749,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1290:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26742,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39324,
                      "src": "1245:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 26753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:64:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26754,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:64:76"
                }
              ]
            },
            "functionSelector": "70bdc855",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitializedValues",
            "nameLocation": "1037:21:76",
            "parameters": {
              "id": 26713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1058:2:76"
            },
            "returnParameters": {
              "id": 26714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1068:0:76"
            },
            "scope": 26925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26790,
            "nodeType": "FunctionDefinition",
            "src": "1318:198:76",
            "body": {
              "id": 26789,
              "nodeType": "Block",
              "src": "1344:172:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26764,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1373:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          ],
                          "id": 26763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1365:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26762,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1365:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1365:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26766,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "1380:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26759,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26651,
                        "src": "1350:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$63825",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 26761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63811,
                      "src": "1350:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 26767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:44:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26768,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:44:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26774,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "1426:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          ],
                          "id": 26773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1418:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1418:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1418:21:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26776,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "1441:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26769,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26651,
                        "src": "1400:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$63825",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 26771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63930,
                      "src": "1400:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 26777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:55:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26778,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:55:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26782,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "1482:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26785,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1505:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          ],
                          "id": 26784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1497:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26783,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1497:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1497:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26779,
                        "name": "beefyERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26648,
                        "src": "1461:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                          "typeString": "contract BeefyERC4626"
                        }
                      },
                      "id": 26781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38440,
                      "src": "1461:20:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 26787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1461:50:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26788,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:50:76"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1327:7:76",
            "parameters": {
              "id": 26757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:2:76"
            },
            "returnParameters": {
              "id": 26758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:0:76"
            },
            "scope": 26925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26859,
            "nodeType": "FunctionDefinition",
            "src": "1520:581:76",
            "body": {
              "id": 26858,
              "nodeType": "Block",
              "src": "1550:551:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26793,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26790,
                      "src": "1556:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:9:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26795,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:9:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26801,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1652:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              ],
                              "id": 26800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1644:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26799,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1644:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1644:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26797,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "1624:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 26798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "1624:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1624:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26796,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "1615:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:47:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26806,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:47:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26812,
                                "name": "mockVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26657,
                                "src": "1705:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$36089",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$36089",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 26811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1697:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1697:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1697:18:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26808,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "1677:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 26809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "1677:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1677:39:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1718:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "1668:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:52:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26817,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:52:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26823,
                                "name": "mockStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26654,
                                "src": "1763:12:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStrategy_$35835",
                                  "typeString": "contract MockStrategy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStrategy_$35835",
                                  "typeString": "contract MockStrategy"
                                }
                              ],
                              "id": 26822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1755:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26821,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1755:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1755:21:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26819,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "1735:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 26820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "1735:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1735:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26826,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "1779:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26818,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "1726:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:67:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26828,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:67:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26830,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "1853:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          },
                          "id": 26831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18058,
                          "src": "1853:24:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 26832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1853:26:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26833,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "1881:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26829,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "1844:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:51:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26835,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:51:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26841,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1951:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              ],
                              "id": 26840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1943:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26839,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1943:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1943:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26837,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "1910:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          },
                          "id": 26838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOfUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18073,
                          "src": "1910:32:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1910:47:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26844,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "1959:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26836,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "1901:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:72:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26846,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:72:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26852,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2074:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              ],
                              "id": 26851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2066:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26850,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2066:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2066:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26848,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "2043:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          },
                          "id": 26849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "2043:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:37:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26855,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "2082:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26847,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "2034:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:62:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26857,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:62:76"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "1529:11:76",
            "parameters": {
              "id": 26791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:76"
            },
            "returnParameters": {
              "id": 26792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:0:76"
            },
            "scope": 26925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26924,
            "nodeType": "FunctionDefinition",
            "src": "2105:466:76",
            "body": {
              "id": 26923,
              "nodeType": "Block",
              "src": "2136:435:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26862,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26790,
                      "src": "2142:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:9:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26864,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:9:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26868,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "2179:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26871,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2202:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          ],
                          "id": 26870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2194:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2194:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2194:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26875,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2217:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                              "typeString": "contract BeefyERC4626Test"
                            }
                          ],
                          "id": 26874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2209:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2209:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2209:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26865,
                        "name": "beefyERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26648,
                        "src": "2157:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                          "typeString": "contract BeefyERC4626"
                        }
                      },
                      "id": 26867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38564,
                      "src": "2157:21:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 26877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:66:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26878,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:66:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26884,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2311:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              ],
                              "id": 26883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2303:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26882,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2303:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2303:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26880,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "2283:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 26881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "2283:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2283:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26887,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26660,
                        "src": "2319:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26879,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "2274:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:59:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26889,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:59:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26895,
                                "name": "mockVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26657,
                                "src": "2376:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$36089",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$36089",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 26894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2368:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26893,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2368:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2368:18:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26891,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "2348:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 26892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "2348:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2348:39:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2389:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26890,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "2339:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:52:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26900,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:52:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26906,
                                "name": "mockStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26654,
                                "src": "2434:12:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStrategy_$35835",
                                  "typeString": "contract MockStrategy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStrategy_$35835",
                                  "typeString": "contract MockStrategy"
                                }
                              ],
                              "id": 26905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2426:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26904,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2426:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2426:21:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26902,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26651,
                            "src": "2406:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$63825",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 26903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "2406:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2406:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26901,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "2397:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:55:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26911,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:55:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26917,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2556:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeefyERC4626Test_$26925",
                                  "typeString": "contract BeefyERC4626Test"
                                }
                              ],
                              "id": 26916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2548:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26915,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2548:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2548:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26913,
                            "name": "beefyERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26648,
                            "src": "2525:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeefyERC4626_$18104",
                              "typeString": "contract BeefyERC4626"
                            }
                          },
                          "id": 26914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63856,
                          "src": "2525:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2525:37:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26912,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        39324,
                        39349,
                        39379,
                        39404,
                        39463,
                        39488,
                        39518,
                        39543,
                        40643,
                        40678
                      ],
                      "referencedDeclaration": 39518,
                      "src": "2516:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:50:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26922,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:50:76"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "2114:12:76",
            "parameters": {
              "id": 26860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2126:2:76"
            },
            "returnParameters": {
              "id": 26861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2136:0:76"
            },
            "scope": 26925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26638,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40790,
              "src": "532:6:76"
            },
            "id": 26639,
            "nodeType": "InheritanceSpecifier",
            "src": "532:6:76"
          }
        ],
        "canonicalName": "BeefyERC4626Test",
        "contractDependencies": [
          18104,
          35835,
          36089,
          63825
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26925,
          40790
        ],
        "name": "BeefyERC4626Test",
        "nameLocation": "512:16:76",
        "scope": 26926,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}